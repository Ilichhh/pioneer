{"version":3,"file":"782.83b7beb3a063798e4c06.js","mappings":";mJAEA,MAAMA,EAAMC,OAAO,GACbC,EAAMD,OAAO,GACbE,EAAMF,OAAO,GACbG,EAAMH,OAAO,GACbI,EAAMJ,OAAO,GACbK,EAAYH,GAAOF,OAAO,KAC1BM,EAAQ,CACVC,EAAGR,EACHS,EAAGR,OAAO,GACVS,EAAGJ,EAAYH,GAAOF,OAAO,IAAMA,OAAO,KAC1CU,EAAGL,EAAYL,OAAO,2CACtBW,EAAGV,EACHW,GAAIZ,OAAO,iFACXa,GAAIb,OAAO,iFACXc,KAAMd,OAAO,uEAGjB,SAASe,EAAUC,GACf,MAAM,EAAET,EAAC,EAAEC,GAAMF,EACXW,EAAKC,EAAIF,EAAIA,GACbG,EAAKD,EAAID,EAAKD,GACpB,OAAOE,EAAIC,EAAKZ,EAAIS,EAAIR,GAE5B,MAAMY,EAAmBd,EAAMC,IAAMR,EACrC,MAAMsB,EACFC,YAAYN,EAAGO,EAAGC,GACdC,KAAKT,EAAIA,EACTS,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAEbE,kBAAkBC,GACd,KAAMA,aAAaC,GACf,MAAM,IAAIC,UAAU,4CAExB,OAAO,IAAIR,EAAcM,EAAEX,EAAGW,EAAEJ,EAAGtB,GAEvCyB,qBAAqBI,GACjB,MAAMC,EAsjBd,SAAqBC,EAAML,EAAIrB,EAAMG,GACjC,MAAMwB,EAAU,IAAIC,MAAMF,EAAKG,QAOzBC,EAAWC,EANML,EAAKM,QAAO,CAACC,EAAKC,EAAKC,IACtCD,IAAQzC,EACDwC,GACXN,EAAQQ,GAAKF,EACNrB,EAAIqB,EAAMC,EAAKb,KACvB1B,GACqC0B,GAOxC,OANAK,EAAKU,aAAY,CAACH,EAAKC,EAAKC,IACpBD,IAAQzC,EACDwC,GACXN,EAAQQ,GAAKvB,EAAIqB,EAAMN,EAAQQ,GAAId,GAC5BT,EAAIqB,EAAMC,EAAKb,KACvBS,GACIH,EArkBWU,CAAYb,EAAOc,KAAKjB,GAAMA,EAAEH,KAC9C,OAAOM,EAAOc,KAAI,CAACjB,EAAGc,IAAMd,EAAEkB,SAASd,EAAMU,MAEjDf,kBAAkBI,GACd,OAAOT,EAAcyB,cAAchB,GAAQc,IAAIvB,EAAc0B,YAEjEC,OAAOC,GACH,KAAMA,aAAiB5B,GACnB,MAAM,IAAIQ,UAAU,0BACxB,MAAQb,EAAGkC,EAAI3B,EAAG4B,EAAI3B,EAAG4B,GAAO3B,MACxBT,EAAGqC,EAAI9B,EAAG+B,EAAI9B,EAAG+B,GAAON,EAC1BO,EAAOtC,EAAIkC,GAAMlD,GACjBuD,EAAOvC,EAAIqC,GAAMrD,GACjBwD,EAAKxC,EAAIgC,EAAKO,GACdE,EAAKzC,EAAImC,EAAKG,GACdI,EAAK1C,EAAIA,EAAIiC,EAAKI,GAAME,GACxBI,EAAK3C,EAAIA,EAAIoC,EAAKF,GAAMI,GAC9B,OAAOE,IAAOC,GAAMC,IAAOC,EAE/BC,SACI,OAAO,IAAIzC,EAAcI,KAAKT,EAAGE,GAAKO,KAAKF,GAAIE,KAAKD,GAExDuC,SACI,MAAQ/C,EAAGkC,EAAI3B,EAAG4B,EAAI3B,EAAG4B,GAAO3B,KAC1BuC,EAAI9C,EAAIgC,GAAMhD,GACd+D,EAAI/C,EAAIiC,GAAMjD,GACdgE,EAAIhD,EAAI+C,GAAK/D,GACbiE,EAAIjD,EAAIhB,GAAOgB,GAAKgC,EAAKe,IAAM/D,GAAO8D,EAAIE,IAC1CE,EAAIlD,EAAIf,EAAM6D,GACdK,EAAInD,EAAIkD,GAAKlE,GACboE,EAAKpD,EAAImD,EAAInE,EAAMiE,GACnBI,EAAKrD,EAAIkD,GAAKD,EAAIG,GAAMlE,EAAM8D,GAC9BM,EAAKtD,EAAIhB,EAAMiD,EAAKC,GAC1B,OAAO,IAAI/B,EAAciD,EAAIC,EAAIC,GAErCC,IAAIxB,GACA,KAAMA,aAAiB5B,GACnB,MAAM,IAAIQ,UAAU,0BACxB,MAAQb,EAAGkC,EAAI3B,EAAG4B,EAAI3B,EAAG4B,GAAO3B,MACxBT,EAAGqC,EAAI9B,EAAG+B,EAAI9B,EAAG+B,GAAON,EAChC,GAAII,IAAOtD,GAAOuD,IAAOvD,EACrB,OAAO0B,KACX,GAAIyB,IAAOnD,GAAOoD,IAAOpD,EACrB,OAAOkD,EACX,MAAMO,EAAOtC,EAAIkC,GAAMlD,GACjBuD,EAAOvC,EAAIqC,GAAMrD,GACjBwD,EAAKxC,EAAIgC,EAAKO,GACdE,EAAKzC,EAAImC,EAAKG,GACdI,EAAK1C,EAAIA,EAAIiC,EAAKI,GAAME,GACxBI,EAAK3C,EAAIA,EAAIoC,EAAKF,GAAMI,GACxBkB,EAAIxD,EAAIyC,EAAKD,GACbiB,EAAIzD,EAAI2C,EAAKD,GACnB,GAAIc,IAAM3E,EACN,OAAI4E,IAAM5E,EACC0B,KAAKsC,SAGL1C,EAAcuD,KAG7B,MAAMC,EAAK3D,EAAIwD,GAAKxE,GACd4E,EAAM5D,EAAIwD,EAAIG,GACdE,EAAI7D,EAAIwC,EAAKmB,GACbP,EAAKpD,EAAIyD,GAAKzE,EAAM4E,EAAM5E,EAAM6E,GAChCR,EAAKrD,EAAIyD,GAAKI,EAAIT,GAAMV,EAAKkB,GAC7BN,EAAKtD,EAAIkC,EAAKG,EAAKmB,GACzB,OAAO,IAAIrD,EAAciD,EAAIC,EAAIC,GAErCQ,SAAS/B,GACL,OAAOxB,KAAKgD,IAAIxB,EAAMa,UAE1BmB,eAAeC,GACX,IAAIxE,EAAIyE,EAAgBD,GACd7D,EAAc+D,KAAxB,MACMC,EAAKhE,EAAcuD,KACzB,GAAIlE,IAAMX,EACN,OAAOsF,EACX,GAAI3E,IAAMT,EACN,OAAOwB,KACX,IAAKL,EAAkB,CACnB,IAAIO,EAAI0D,EACJC,EAAI7D,KACR,KAAOf,EAAIX,GACHW,EAAIT,IACJ0B,EAAIA,EAAE8C,IAAIa,IACdA,EAAIA,EAAEvB,SACNrD,IAAMT,EAEV,OAAO0B,EAEX,IAAI,MAAE4D,EAAK,GAAEC,EAAE,MAAEC,EAAK,GAAEC,GAAOC,EAAgBjF,GAC3CkF,EAAMP,EACNQ,EAAMR,EACNC,EAAI7D,KACR,KAAO+D,EAAKzF,GAAO2F,EAAK3F,GAChByF,EAAKvF,IACL2F,EAAMA,EAAInB,IAAIa,IACdI,EAAKzF,IACL4F,EAAMA,EAAIpB,IAAIa,IAClBA,EAAIA,EAAEvB,SACNyB,IAAOvF,EACPyF,IAAOzF,EAOX,OALIsF,IACAK,EAAMA,EAAI9B,UACV2B,IACAI,EAAMA,EAAI/B,UACd+B,EAAM,IAAIxE,EAAcH,EAAI2E,EAAI7E,EAAIV,EAAMQ,MAAO+E,EAAItE,EAAGsE,EAAIrE,GACrDoE,EAAInB,IAAIoB,GAEnBC,iBAAiBC,GACb,MAAMC,EAAU5E,EAAmB,IAAM2E,EAAI,EAAI,IAAMA,EAAI,EACrDjE,EAAS,GACf,IAAIH,EAAIF,KACJwE,EAAOtE,EACX,IAAK,IAAIuE,EAAS,EAAGA,EAASF,EAASE,IAAU,CAC7CD,EAAOtE,EACPG,EAAOqE,KAAKF,GACZ,IAAK,IAAIxD,EAAI,EAAGA,EAAI,IAAMsD,EAAI,GAAItD,IAC9BwD,EAAOA,EAAKxB,IAAI9C,GAChBG,EAAOqE,KAAKF,GAEhBtE,EAAIsE,EAAKlC,SAEb,OAAOjC,EAEXsE,KAAK1F,EAAG2F,IACCA,GAAe5E,KAAKuB,OAAO3B,EAAc+D,QAC1CiB,EAAczE,EAAMwD,MACxB,MAAMW,EAAKM,GAAeA,EAAYC,cAAiB,EACvD,GAAI,IAAMP,EACN,MAAM,IAAIQ,MAAM,iEAEpB,IAAIC,EAAcH,GAAeI,EAAiBC,IAAIL,GACjDG,IACDA,EAAc/E,KAAKqE,iBAAiBC,GAChCM,GAAqB,IAANN,IACfS,EAAcnF,EAAcsF,WAAWH,GACvCC,EAAiBG,IAAIP,EAAaG,KAG1C,IAAI7E,EAAIN,EAAcuD,KAClBiC,EAAIxF,EAAcuD,KACtB,MAAMoB,EAAU,GAAK5E,EAAmB,IAAM2E,EAAI,IAAMA,GAClDe,EAAa,IAAMf,EAAI,GACvBgB,EAAO/G,OAAO,GAAK+F,EAAI,GACvBiB,EAAY,GAAKjB,EACjBkB,EAAUjH,OAAO+F,GACvB,IAAK,IAAIG,EAAS,EAAGA,EAASF,EAASE,IAAU,CAC7C,MAAMgB,EAAShB,EAASY,EACxB,IAAIK,EAAQC,OAAO1G,EAAIqG,GAMvB,GALArG,IAAMuG,EACFE,EAAQL,IACRK,GAASH,EACTtG,GAAKT,GAEK,IAAVkH,EAAa,CACb,IAAIE,EAAKb,EAAYU,GACjBhB,EAAS,IACTmB,EAAKA,EAAGvD,UACZ+C,EAAIA,EAAEpC,IAAI4C,OAET,CACD,IAAIC,EAASd,EAAYU,EAASK,KAAKC,IAAIL,GAAS,GAChDA,EAAQ,IACRG,EAASA,EAAOxD,UACpBnC,EAAIA,EAAE8C,IAAI6C,IAGlB,MAAO,CAAE3F,EAAAA,EAAGkF,EAAAA,GAEhBY,SAASvC,EAAQmB,GACb,IACIqB,EACAC,EAFAjH,EAAIyE,EAAgBD,GAGxB,GAAI9D,EAAkB,CAClB,MAAM,MAAEmE,EAAK,GAAEC,EAAE,MAAEC,EAAK,GAAEC,GAAOC,EAAgBjF,GACjD,IAAMiB,EAAGiE,EAAKiB,EAAGe,GAAQnG,KAAK2E,KAAKZ,EAAIa,IACjC1E,EAAGkE,EAAKgB,EAAGgB,GAAQpG,KAAK2E,KAAKV,EAAIW,GACnCd,IACAK,EAAMA,EAAI9B,UACV2B,IACAI,EAAMA,EAAI/B,UACd+B,EAAM,IAAIxE,EAAcH,EAAI2E,EAAI7E,EAAIV,EAAMQ,MAAO+E,EAAItE,EAAGsE,EAAIrE,GAC5DkG,EAAQ9B,EAAInB,IAAIoB,GAChB8B,EAAOC,EAAInD,IAAIoD,OAEd,CACD,MAAM,EAAElG,EAAC,EAAEkF,GAAMpF,KAAK2E,KAAK1F,EAAG2F,GAC9BqB,EAAQ/F,EACRgG,EAAOd,EAEX,OAAOxF,EAAcsF,WAAW,CAACe,EAAOC,IAAO,GAEnD9E,SAASiF,EAAOzF,EAAOZ,KAAKD,IACxB,MAAM,EAAER,EAAC,EAAEO,EAAC,EAAEC,GAAMC,KACdsG,EAAMD,EACNE,EAAM9G,EAAI6G,EAAMA,GAChBE,EAAM/G,EAAI8G,EAAMD,GAChBG,EAAKhH,EAAIF,EAAIgH,GACbG,EAAKjH,EAAIK,EAAI0G,GAEnB,GADW/G,EAAIM,EAAIuG,KACR9H,EACP,MAAM,IAAIsG,MAAM,oBACpB,OAAO,IAAI3E,EAAMsG,EAAIC,IAG7B9G,EAAc+D,KAAO,IAAI/D,EAAcf,EAAMM,GAAIN,EAAMO,GAAIZ,GAC3DoB,EAAcuD,KAAO,IAAIvD,EAActB,EAAKE,EAAKF,GACjD,MAAM0G,EAAmB,IAAI2B,QACtB,MAAMxG,EACTN,YAAYN,EAAGO,GACXE,KAAKT,EAAIA,EACTS,KAAKF,EAAIA,EAEb8G,eAAevB,GACXrF,KAAK6E,aAAeQ,EACpBL,EAAiB6B,OAAO7G,MAE5BC,yBAAyB6G,GACrB,MAAMC,EAA2B,KAAjBD,EAAMpG,OAChBnB,EAAIyH,EAAcD,EAAUD,EAAQA,EAAMG,SAAS,IACzD,IAAKC,EAAoB3H,GACrB,MAAM,IAAIuF,MAAM,yBAEpB,IAAIhF,EA2SZ,SAAiBP,GACb,MAAM,EAAEP,GAAMH,EACRsI,EAAM5I,OAAO,GACb6I,EAAO7I,OAAO,IACd8I,EAAO9I,OAAO,IACd+I,EAAO/I,OAAO,IACdgJ,EAAOhJ,OAAO,IACdiJ,EAAOjJ,OAAO,IACdkJ,EAAMlI,EAAIA,EAAIA,EAAKP,EACnB0I,EAAMD,EAAKA,EAAKlI,EAAKP,EACrB2I,EAAMC,EAAKF,EAAIhJ,GAAOgJ,EAAM1I,EAC5B6I,EAAMD,EAAKD,EAAIjJ,GAAOgJ,EAAM1I,EAC5B8I,EAAOF,EAAKC,EAAIpJ,GAAOgJ,EAAMzI,EAC7B+I,EAAOH,EAAKE,EAAKV,GAAQU,EAAO9I,EAChCgJ,EAAOJ,EAAKG,EAAKV,GAAQU,EAAO/I,EAChCiJ,EAAOL,EAAKI,EAAKT,GAAQS,EAAOhJ,EAChCkJ,EAAQN,EAAKK,EAAKT,GAAQS,EAAOjJ,EACjCmJ,EAAQP,EAAKM,EAAMX,GAAQS,EAAOhJ,EAClCoJ,EAAQR,EAAKO,EAAMzJ,GAAOgJ,EAAM1I,EAChCqJ,EAAMT,EAAKQ,EAAMd,GAAQS,EAAO/I,EAChCsJ,EAAMV,EAAKS,EAAIlB,GAAOM,EAAMzI,EAClC,OAAO4I,EAAKU,EAAI7J,GAhUJ8J,CADGjJ,EAAUC,IAErB,MAAMiJ,GAAU1I,EAAItB,KAASA,EACzBuI,EACIyB,IACA1I,EAAIL,GAAKK,IAG6B,IAAP,EAAXgH,EAAM,MACP0B,IACnB1I,EAAIL,GAAKK,IAEjB,MAAMmG,EAAQ,IAAI9F,EAAMZ,EAAGO,GAE3B,OADAmG,EAAMwC,iBACCxC,EAEXhG,2BAA2B6G,GACvB,MAAMvH,EAAIyH,EAAcF,EAAMG,SAAS,EAAG,KACpCnH,EAAIkH,EAAcF,EAAMG,SAAS,GAAI,KACrChB,EAAQ,IAAI9F,EAAMZ,EAAGO,GAE3B,OADAmG,EAAMwC,iBACCxC,EAEXhG,eAAeyI,GACX,MAAM5B,EAAQ6B,EAAYD,GACpBE,EAAM9B,EAAMpG,OACZmI,EAAS/B,EAAM,GACrB,GAAY,KAAR8B,GAAuB,KAARA,IAA0B,IAAXC,GAA8B,IAAXA,GACjD,OAAO7I,KAAK8I,kBAAkBhC,GAElC,GAAY,KAAR8B,GAAyB,IAAXC,EACd,OAAO7I,KAAK+I,oBAAoBjC,GACpC,MAAM,IAAIhC,MAAM,wGAAwG8D,KAE5H3I,sBAAsB+I,GAClB,OAAO7I,EAAMwD,KAAKqC,SA8a1B,SAA6BiD,GACzB,IAAIlI,EACJ,GAAmB,iBAARkI,EACPlI,EAAMkI,OAEL,GAAmB,iBAARA,GAAoBtD,OAAOuD,cAAcD,IAAQA,EAAM,EACnElI,EAAMxC,OAAO0K,QAEZ,GAAmB,iBAARA,EAAkB,CAC9B,GAAmB,KAAfA,EAAIvI,OACJ,MAAM,IAAIoE,MAAM,oCACpB/D,EAAMoI,EAAYF,OAEjB,KAAIG,EAASH,GAMd,MAAM,IAAI7I,UAAU,8BALpB,GAAmB,KAAf6I,EAAIvI,OACJ,MAAM,IAAIoE,MAAM,oCACpB/D,EAAMiG,EAAciC,GAKxB,IAAKI,EAAmBtI,GACpB,MAAM,IAAI+D,MAAM,qCACpB,OAAO/D,EArcwBuI,CAAoBN,IAEnD/I,qBAAqBsJ,EAASC,EAAWC,GAErC,MAAMvK,EAuVd,SAAsBwK,GAClB,MAAM,EAAEzK,GAAMJ,EAER8K,EAAqB,EADRD,EAAKhJ,OACO,IAC/B,IAAIxB,EAAI8H,EAAc0C,GAKtB,OAJIC,EAAQ,IACRzK,IAASX,OAAOoL,IAChBzK,GAAKD,IACLC,GAAKD,GACFC,EAhWO0K,CADVL,EAAUZ,EAAYY,KAEhB,EAAErG,EAAC,EAAE2G,GA2cnB,SAA4BL,GACxB,GAAIA,aAAqBM,EAErB,OADAN,EAAUf,iBACHe,EAEX,IACI,OAAOM,EAAUC,QAAQP,GAE7B,MAAOQ,GACH,OAAOF,EAAUG,YAAYT,IApdZU,CAAmBV,GACpC,GAAiB,IAAbC,GAA+B,IAAbA,EAClB,MAAM,IAAI3E,MAAM,kDAEpB,GAAI5F,IAAMZ,EACN,MAAM,IAAIwG,MAAM,iDACpB,MAAMqF,EAAoB,EAAXV,EAAe,KAAO,KAC/BW,EAAIjK,EAAMkK,QAAQF,EAASG,EAAYpH,KACvC,EAAEjE,GAAMJ,EACR0L,EAAO3J,EAAOsC,EAAGjE,GACjBuL,EAAK/K,GAAKP,EAAIqL,EAAMtL,GACpBwL,EAAKhL,EAAIoK,EAAIU,EAAMtL,GACnByL,EAAIvK,EAAMwD,KAAKgH,qBAAqBP,EAAGI,EAAIC,GACjD,IAAKC,EACD,MAAM,IAAI5F,MAAM,+CAEpB,OADA4F,EAAEjC,iBACKiC,EAEXE,WAAWC,GAAe,GACtB,OAAOC,EAAW9K,KAAK+K,MAAMF,IAEjCE,MAAMF,GAAe,GACjB,MAAMtL,EAAI+K,EAAYtK,KAAKT,GAC3B,OAAIsL,EAEO,GADQ7K,KAAKF,EAAItB,EAAM,KAAO,OAClBe,IAGZ,KAAKA,IAAI+K,EAAYtK,KAAKF,KAGzCkL,SACI,OAAOhL,KAAK+K,OAAM,GAAME,MAAM,GAElCC,SACI,OAAOlL,KAAK4K,YAAW,GAAMK,MAAM,GAEvCxC,iBACI,MAAM0C,EAAM,kCACN,EAAE5L,EAAC,EAAEO,GAAME,KACjB,IAAKkH,EAAoB3H,KAAO2H,EAAoBpH,GAChD,MAAM,IAAIgF,MAAMqG,GACpB,MAAMC,EAAO3L,EAAIK,EAAIA,GAErB,GAAIL,EAAI2L,EADM9L,EAAUC,MACEjB,EACtB,MAAM,IAAIwG,MAAMqG,GAExB5J,OAAOC,GACH,OAAOxB,KAAKT,IAAMiC,EAAMjC,GAAKS,KAAKF,IAAM0B,EAAM1B,EAElDuC,SACI,OAAO,IAAIlC,EAAMH,KAAKT,EAAGE,GAAKO,KAAKF,IAEvCwC,SACI,OAAO1C,EAAc0B,WAAWtB,MAAMsC,SAASlB,WAEnD4B,IAAIxB,GACA,OAAO5B,EAAc0B,WAAWtB,MAAMgD,IAAIpD,EAAc0B,WAAWE,IAAQJ,WAE/EmC,SAAS/B,GACL,OAAOxB,KAAKgD,IAAIxB,EAAMa,UAE1B2D,SAASvC,GACL,OAAO7D,EAAc0B,WAAWtB,MAAMgG,SAASvC,EAAQzD,MAAMoB,WAEjEuJ,qBAAqBD,EAAG5L,EAAGC,GACvB,MAAMC,EAAIY,EAAc0B,WAAWtB,MAC7BqL,EAAKvM,IAAMR,GAAOQ,IAAMN,GAAOwB,OAASG,EAAMwD,KAAO3E,EAAEwE,eAAe1E,GAAKE,EAAEgH,SAASlH,GACtFwM,EAAK1L,EAAc0B,WAAWoJ,GAAGlH,eAAezE,GAChDwM,EAAMF,EAAGrI,IAAIsI,GACnB,OAAOC,EAAIhK,OAAO3B,EAAcuD,WAAQqI,EAAYD,EAAInK,YAKhE,SAASqK,EAAS5B,GACd,OAAOlE,OAAO+F,SAAS7B,EAAE,GAAI,KAAO,EAAI,KAAOA,EAAIA,EAEvD,SAAS8B,EAAYC,GACjB,GAAIA,EAAKlL,OAAS,GAAiB,IAAZkL,EAAK,GACxB,MAAM,IAAI9G,MAAM,kCAAkC+G,EAAWD,MAEjE,MAAMhD,EAAMgD,EAAK,GACXE,EAAMF,EAAK3E,SAAS,EAAG2B,EAAM,GACnC,IAAKA,GAAOkD,EAAIpL,SAAWkI,EACvB,MAAM,IAAI9D,MAAM,2CAEpB,GAAe,IAAXgH,EAAI,IAAeA,EAAI,IAAM,IAC7B,MAAM,IAAIhH,MAAM,8CAEpB,MAAO,CAAE8G,KAAM5E,EAAc8E,GAAMV,KAAMQ,EAAK3E,SAAS2B,EAAM,IAjBjEzI,EAAMwD,KAAO,IAAIxD,EAAMtB,EAAMM,GAAIN,EAAMO,IACvCe,EAAMgD,KAAO,IAAIhD,EAAM7B,EAAKA,GAgCrB,MAAMwL,EACTjK,YAAYqD,EAAG2G,GACX7J,KAAKkD,EAAIA,EACTlD,KAAK6J,EAAIA,EACT7J,KAAKyI,iBAETxI,mBAAmByI,GACf,MAAMqD,EAAM3C,EAASV,GACfsD,EAAO,wBACb,GAAmB,iBAARtD,IAAqBqD,EAC5B,MAAM,IAAI3L,UAAU,GAAG4L,oCAC3B,MAAMC,EAAMF,EAAMF,EAAWnD,GAAOA,EACpC,GAAmB,MAAfuD,EAAIvL,OACJ,MAAM,IAAIoE,MAAM,GAAGkH,2BACvB,OAAO,IAAIlC,EAAUX,EAAY8C,EAAIhB,MAAM,EAAG,KAAM9B,EAAY8C,EAAIhB,MAAM,GAAI,OAElFhL,eAAeyI,GACX,MAAMqD,EAAM3C,EAASV,GACrB,GAAmB,iBAARA,IAAqBqD,EAC5B,MAAM,IAAI3L,UAAU,oDACxB,MAAM,EAAE8C,EAAC,EAAE2G,GAlCnB,SAA2B+B,GACvB,GAAIA,EAAKlL,OAAS,GAAgB,IAAXkL,EAAK,GACxB,MAAM,IAAI9G,MAAM,0BAA0B+G,EAAWD,MAEzD,GAAIA,EAAK,KAAOA,EAAKlL,OAAS,EAC1B,MAAM,IAAIoE,MAAM,uCAEpB,MAAQ8G,KAAM1I,EAAGkI,KAAMc,GAAWP,EAAYC,EAAK3E,SAAS,KACpD2E,KAAM/B,EAAGuB,KAAMe,GAAeR,EAAYO,GAClD,GAAIC,EAAWzL,OACX,MAAM,IAAIoE,MAAM,gDAAgD+G,EAAWM,MAE/E,MAAO,CAAEjJ,EAAAA,EAAG2G,EAAAA,GAsBSuC,CAAkBL,EAAMrD,EAAMoC,EAAWpC,IAC1D,OAAO,IAAIoB,EAAU5G,EAAG2G,GAE5B5J,eAAeyI,GACX,OAAO1I,KAAK+J,QAAQrB,GAExBD,iBACI,MAAM,EAAEvF,EAAC,EAAE2G,GAAM7J,KACjB,IAAKqJ,EAAmBnG,GACpB,MAAM,IAAI4B,MAAM,0CACpB,IAAKuE,EAAmBQ,GACpB,MAAM,IAAI/E,MAAM,0CAExBuH,WACI,MAAMC,EAAOzN,EAAMI,GAAKT,EACxB,OAAOwB,KAAK6J,EAAIyC,EAEpBC,aACI,OAAOvM,KAAKqM,WAAa,IAAIvC,EAAU9J,KAAKkD,EAAGrE,EAAMI,EAAIe,KAAK6J,GAAK7J,KAEvEwM,cAAc3B,GAAe,GACzB,OAAOC,EAAW9K,KAAKyM,SAAS5B,IAEpC4B,SAAS5B,GAAe,GACpB,MAAM6B,EAAOjB,EAASkB,EAAoB3M,KAAK6J,IAC/C,GAAIgB,EACA,OAAO6B,EACX,MAAME,EAAOnB,EAASkB,EAAoB3M,KAAKkD,IACzC2J,EAAOF,EAAoBC,EAAKlM,OAAS,GACzCoM,EAAOH,EAAoBD,EAAKhM,OAAS,GAE/C,MAAO,KADQiM,EAAoBC,EAAKlM,OAAS,EAAIgM,EAAKhM,OAAS,EAAI,OAChDmM,IAAOD,MAASE,IAAOJ,IAElD9B,aACI,OAAO5K,KAAKwM,gBAEhBzB,QACI,OAAO/K,KAAKyM,WAEhBM,oBACI,OAAOjC,EAAW9K,KAAKgN,gBAE3BA,eACI,OAAO1C,EAAYtK,KAAKkD,GAAKoH,EAAYtK,KAAK6J,IAiBtD,SAAST,EAAStC,GACd,OAAOA,aAAiBmG,WAE5B,MAAMC,EAAQzM,MAAM0M,KAAK,CAAEzM,OAAQ,MAAO,CAAC0M,EAAGpM,IAAMA,EAAEqM,SAAS,IAAIC,SAAS,EAAG,OAC/E,SAASzB,EAAW0B,GAChB,KAAMA,aAAkBN,YACpB,MAAM,IAAInI,MAAM,uBACpB,IAAI4D,EAAM,GACV,IAAK,IAAI1H,EAAI,EAAGA,EAAIuM,EAAO7M,OAAQM,IAC/B0H,GAAOwE,EAAMK,EAAOvM,IAExB,OAAO0H,EAEX,SAAS4B,EAAYvJ,GACjB,GAAIA,EAAMnC,EACN,MAAM,IAAIkG,MAAM,2BACpB,OAAO/D,EAAIsM,SAAS,IAAIC,SAAS,GAAI,KAKzC,SAASX,EAAoB5L,GACzB,MAAM2H,EAAM3H,EAAIsM,SAAS,IACzB,OAAoB,EAAb3E,EAAIhI,OAAa,IAAIgI,IAAQA,EAExC,SAASS,EAAYT,GACjB,GAAmB,iBAARA,EACP,MAAM,IAAItI,UAAU,4CAA8CsI,GAEtE,OAAOnK,OAAO,KAAKmK,KAEvB,SAASoC,EAAWpC,GAChB,GAAmB,iBAARA,EACP,MAAM,IAAItI,UAAU,2CAA6CsI,GAErE,GAAIA,EAAIhI,OAAS,EACb,MAAM,IAAIoE,MAAM,4CAA8C4D,EAAIhI,QACtE,MAAM8M,EAAQ,IAAIP,WAAWvE,EAAIhI,OAAS,GAC1C,IAAK,IAAIM,EAAI,EAAGA,EAAIwM,EAAM9M,OAAQM,IAAK,CACnC,MAAMyM,EAAQ,EAAJzM,EACJ0M,EAAUhF,EAAIuC,MAAMwC,EAAGA,EAAI,GAC3BE,EAAOhI,OAAO+F,SAASgC,EAAS,IACtC,GAAI/H,OAAOiI,MAAMD,IAASA,EAAO,EAC7B,MAAM,IAAI7I,MAAM,yBACpB0I,EAAMxM,GAAK2M,EAEf,OAAOH,EAEX,SAASxG,EAAcF,GACnB,OAAOqC,EAAY0C,EAAW/E,IAElC,SAAS6B,EAAYD,GACjB,OAAOA,aAAeuE,WAAaA,WAAWE,KAAKzE,GAAOoC,EAAWpC,GAEzE,SAAShF,EAAgB3C,GACrB,GAAmB,iBAARA,GAAoB4E,OAAOuD,cAAcnI,IAAQA,EAAM,EAC9D,OAAOxC,OAAOwC,GAClB,GAAmB,iBAARA,GAAoBsI,EAAmBtI,GAC9C,OAAOA,EACX,MAAM,IAAIX,UAAU,uDAExB,SAASX,EAAIX,EAAGC,EAAIF,EAAMG,GACtB,MAAM6O,EAAS/O,EAAIC,EACnB,OAAO8O,GAAUvP,EAAMuP,EAAS9O,EAAI8O,EAExC,SAASjG,EAAKrI,EAAGuO,GACb,MAAM,EAAE9O,GAAMH,EACd,IAAIiN,EAAMvM,EACV,KAAOuO,KAAUxP,GACbwN,GAAOA,EACPA,GAAO9M,EAEX,OAAO8M,EAyBX,SAASlL,EAAOmN,EAAQC,EAASnP,EAAMG,GACnC,GAAI+O,IAAWzP,GAAO0P,GAAU1P,EAC5B,MAAM,IAAIwG,MAAM,6CAA6CiJ,SAAcC,KAE/E,IAAIlP,EAAIW,EAAIsO,EAAQC,GAChBjP,EAAIiP,EACJzO,EAAIjB,EAAKwB,EAAItB,EAAKyP,EAAIzP,EAAK4O,EAAI9O,EACnC,KAAOQ,IAAMR,GAAK,CACd,MAAM4P,EAAInP,EAAID,EACRoE,EAAInE,EAAID,EACRqP,EAAI5O,EAAI0O,EAAIC,EACZjP,EAAIa,EAAIsN,EAAIc,EAClBnP,EAAID,EAAGA,EAAIoE,EAAG3D,EAAI0O,EAAGnO,EAAIsN,EAAGa,EAAIE,EAAGf,EAAInO,EAG3C,GADYF,IACAP,EACR,MAAM,IAAIsG,MAAM,0BACpB,OAAOrF,EAAIF,EAAGyO,GAmBlB,MAAMI,EAAa,CAACtP,EAAGC,KAAOD,EAAIC,EAAIN,GAAOM,EACvCsP,EAAY5P,GAAOF,OAAO,KAChC,SAAS2F,EAAgBoK,GACrB,MAAM,EAAErP,GAAMJ,EACR0P,EAAKhQ,OAAO,sCACZiQ,GAAMhQ,EAAMD,OAAO,sCACnBkQ,EAAKlQ,OAAO,uCACZkJ,EAAK8G,EACLG,EAAKN,EAAW3G,EAAK6G,EAAGrP,GACxB0P,EAAKP,GAAYI,EAAKF,EAAGrP,GAC/B,IAAI8E,EAAKtE,EAAI6O,EAAII,EAAKH,EAAKI,EAAKF,EAAIxP,GAChCgF,EAAKxE,GAAKiP,EAAKF,EAAKG,EAAKlH,EAAIxI,GACjC,MAAM6E,EAAQC,EAAKsK,EACbrK,EAAQC,EAAKoK,EAKnB,GAJIvK,IACAC,EAAK9E,EAAI8E,GACTC,IACAC,EAAKhF,EAAIgF,GACTF,EAAKsK,GAAapK,EAAKoK,EACvB,MAAM,IAAIvJ,MAAM,2CAA6CwJ,GAEjE,MAAO,CAAExK,MAAAA,EAAOC,GAAAA,EAAIC,MAAAA,EAAOC,GAAAA,GA+D/B,SAASoF,EAAmBtI,GACxB,OAAOzC,EAAMyC,GAAOA,EAAMlC,EAAMI,EAEpC,SAASiI,EAAoBnG,GACzB,OAAOzC,EAAMyC,GAAOA,EAAMlC,EAAMG,EA4TpCmB,EAAMwD,KAAKiD,eAAe,GAGD,iBAATgI,MAAqB,WAAYA,MAAOA,KAAKC,sDC//BtD,MAAMC,EAAe,CAC1BC,MAAO,CAAC,sEACRC,MAAO,CAAC,sEACRC,SAAU,CAAC,sEACXC,QAAS,CAAC,sEACVC,WAAY,CAAC,qEAAsE,sEACnFC,WAAY,CAAC,sEACb,eAAgB,CAAC,qEAAsE,sEACvFC,SAAU,CAAC,sEACXC,YAAa,CAAC,sEACdC,SAAU,CAAC,sEACXC,QAAS,CAAC,qEACV,qEACA,qEACA,sEAEAC,OAAQ,CAAC,sEACTC,OAAQ,CAAC,sEACTC,OAAQ,CAAC,qEACT,qEACA,sEAEA,aAAc,CAAC,sEACfC,SAAU,CAAC,sEACXC,QAAS,CAAC,sEACVC,SAAU,CAAC,sEACXC,SAAU,CAAC,sEACXC,SAAU,CAAC,sEACXC,OAAQ,CAAC,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,qEAAsE,sEAC3wBC,KAAM,CAAC,sEACPC,MAAO,CAAC,sEACRC,UAAW,CAAC,sEACZC,UAAW,CAAC,sEACZC,UAAW,CAAC,sEACZC,QAAS,CAAC,sEACVC,UAAW,CAAC,sHCtCP,MAAMC,EAAY,CACvBtB,WAAY,WACZQ,OAAQ,WACRI,SAAU,WACVG,KAAM,WACNE,UAAW,WACXC,UAAW,WACXK,SAAU,2DCJL,MAAMC,EAAc,CACzB5B,MAAO,IACPC,MAAO,IACPE,QAAS,IACTC,WAAY,IACZC,WAAY,IACZ,eAAgB,IAChBC,SAAU,IACVC,YAAa,SACbC,SAAU,SACVE,OAAQ,IACRE,OAAQ,IACR,aAAc,KACdC,SAAU,IACVE,SAAU,IACVC,SAAU,IACVC,SAAU,IACVE,KAAM,IACNE,UAAW,IAEXC,UAAW,IAEXG,UAAW,qDCzBN,MAAMI,EAAe,CAC1B,IAAI,EAEJ,gBAAgB,EAChB,gBAAgB,EAChBC,SAAS,EACT,qBAAqB,EACrBC,kBAAkB,EAClB,mBAAmB,kGCCd,MAAMC,UAAsBtQ,MACjCZ,YAAYmR,EAAUtQ,GACpBuQ,MAAMvQ,GACNV,KAAKgR,SAAWA,EAOdE,oBAGF,IAAIC,GAAQ,OAAanR,KAAKU,QAAQA,OAEtC,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/BmQ,GAASnR,KAAKgB,GAAGkQ,cAGnB,OAAOC,EAOLzH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAuB,IAAhBrR,KAAKU,OAOVA,aAEF,OAAOuQ,MAAMvQ,OAOf4Q,GAAG9P,GACD,OAAO,OAAaxB,KAAMwB,GAO5B+P,UACE,MAAO,CACLC,MAAOxR,KAAKyR,eACZC,MAAO,EAAC,OAAa1R,KAAKU,UAI9B+Q,eACE,MAAMD,EAAQ,IAAI/Q,MAAMT,KAAKU,QAE7B,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/BwQ,EAAMxQ,GAAKhB,KAAKgB,GAAGuQ,UAGrB,OAAOC,EAOTG,UACE,OAAOlR,MAAM0M,KAAKnN,MAOpB+K,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,QAAQC,GACN,MAAMhE,EAAS,IAAIpN,MAAMT,KAAKU,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/B6M,EAAO7M,GAAKhB,KAAKgB,GAAG4Q,QAAQC,GAG9B,OAAOhE,EAOTiE,SACE,MAAMjE,EAAS,IAAIpN,MAAMT,KAAKU,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/B6M,EAAO7M,GAAKhB,KAAKgB,GAAG8Q,SAGtB,OAAOjE,EAUTR,WACE,MAAMQ,EAAS,IAAIpN,MAAMT,KAAKU,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/B6M,EAAO7M,GAAKhB,KAAKgB,GAAGqM,WAGtB,MAAO,IAAIQ,EAAOkE,KAAK,SAQzBX,MAAMY,GACJ,MAAMC,EAAUjS,KAAKkS,aACrB,OAAOF,GAAS,OAAgBC,IAAW,OAAgB,EAAC,OAAajS,KAAKU,WAAYuR,IAG5FC,WAAWF,GACT,MAAMC,EAAU,IAAIxR,MAAMT,KAAKU,QAE/B,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/BiR,EAAQjR,GAAKhB,KAAKgB,GAAGoQ,MAAMY,GAG7B,OAAOC,EAUTE,OAAO3Q,GACL,OAAOxB,KAAK2R,UAAUQ,OAAO3Q,aAAiBuP,EAAgBvP,EAAMmQ,UAAYnQ,GAOlF4Q,OAAOC,EAAYC,GACjB,OAAOtS,KAAK2R,UAAUS,OAAOC,EAAYC,GAO3CnR,IAAIkR,EAAYC,GACd,OAAOtS,KAAK2R,UAAUxQ,IAAIkR,EAAYC,GAOxCC,SAASC,GACP,OAAOxS,KAAKyS,MAAKC,GAASA,EAAMpB,GAAGkB,KAOrCvH,MAAM0H,EAAOC,GACX,OAAO5S,KAAK2R,UAAU1G,MAAM0H,EAAOC,oDC1MhC,MAAMC,EACX,GAEAhT,YAAYmR,EAAU0B,EAAOI,GAC3B9S,MAAK,EAAO0S,EACZ1S,KAAK8S,iBAAmBA,EACxB9S,KAAKgR,SAAWA,EAOdE,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOlBgJ,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAG7BI,YACF,OAAOxR,MAAK,EAOVqR,cACF,OAAOrR,MAAK,EAAKqR,QAOnBC,GAAG9P,GACD,OAAOxB,MAAK,EAAKsR,GAAG9P,GAOtB+P,UACE,OAAOvR,MAAK,EAAKuR,UAOnBxG,MAAMgI,GACJ,OAAO/S,MAAK,EAAK+K,MAAMgI,GAOzBnB,QAAQC,GACN,OAAO7R,MAAK,EAAK4R,QAAQC,GAO3BC,SACE,OAAO9R,MAAK,EAAK8R,SAOnBzE,WACE,OAAOrN,MAAK,EAAKqN,WAQnB+D,MAAMY,GACJ,OAAOhS,MAAK,EAAKoR,MAAMY,GAOzBgB,YACE,MAAO,OAGTC,SACE,OAAOjT,MAAK,mOC3GT,MAIDkT,EAAQ,IAAI,IAAJ,CAAO,KACfC,EAAa,CAAC,CAAC,cAAe,MAAc,CAAC,UAAW,MAAa,CAAC,UAAW,MAAa,CAAC,UAAW,OAyCzG,MAAMC,UAAoB,KAC/B,GAEAvT,YAAYmR,EAAU0B,EAAQ,EAAGW,EAjDF,GAiDiCC,GAAW,GAIzErC,OACA,OAAMyB,GAASW,GAAa,IAAK,OAAYX,EAAMzL,SAAS,EAAGoM,EAAY,GAAI,CAC7EE,WAAYD,KACT,OAAQZ,EAAMzL,SAAS,EAAGoM,EAAY,GAAI,CAC7CN,MAAM,EACNQ,WAAYD,IACXjG,WA9CP,SAA2BqF,EAAOa,GAChC,IAAI,OAASb,GAAQ,CACnB,IAAK/M,OAAO6N,UAAUd,IAAUA,EAAQ/M,OAAO8N,kBAAoBf,EAAQ/M,OAAO+N,iBAChF,MAAM,IAAI5O,MAAM,6EAGlB,OAAO4N,EACF,IAAI,OAASA,GAAQ,CAC1B,IAAI,QAAMA,GAAQ,GAAG,GACnB,OAAO,OAAQA,EAAO,CACpBK,MAAM,EACNQ,WAAAA,IACClG,WAGL,GAAIqF,EAAMH,SAAS,MAAQG,EAAMH,SAAS,MAAQG,EAAMH,SAAS,KAC/D,MAAM,IAAIzN,MAAM,mEAGlB,OAAO4N,EACF,OAAI,OAAKA,GACPA,EAAMrF,YAGR,OAAOqF,GAAOrF,WAsBHsG,CAAkBjB,EAAOY,IACzCtT,KAAKgR,SAAWA,EAChBhR,MAAK,EAAaqT,EAClBrT,KAAKkR,cAAgBlR,MAAK,EAAa,EACvCA,KAAK4T,YAAcN,EACnB,MAAMC,EAAavT,KAAK6T,QAClBC,EAAUT,GAAaC,IAAaC,EAAa,EAAI,GAE3D,GAAIA,IAAeD,EACjB,MAAM,IAAIxO,MAAM,GAAG9E,KAAKgT,wDACnB,GAAI/B,MAAMoC,YAAcS,EAC7B,MAAM,IAAIhP,MAAM,GAAG9E,KAAKgT,kDAAkD/B,MAAMoC,8BAA8BS,KAQ9GpK,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAOrR,KAAK+T,SAOdV,YACE,OAAOrT,MAAK,EAQdsR,GAAG9P,GAGD,OAAOyP,MAAMK,IAAG,QAAM9P,IAAS,OAAQA,EAAM6L,WAAY,CACvD0F,MAAM,EACNQ,YAAavT,KAAK4T,cACf,OAAOpS,IAOd+P,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAQjB4C,QAEE,OADYhU,KAAKoR,QAAQgB,QAAOrT,GAAW,MAANA,IAC1B2B,SAAWV,MAAK,EAAa,EAO1CiU,WACE,OAAO1V,OAAOyB,KAAKqN,YAOrB6G,OACE,OAAOlU,KAOT+K,MAAMgI,GAAO,GAEX,OAAO,OAAQ/S,KAAM,CACnBqT,UAAWrT,KAAKqT,YAChBN,KAAAA,EACAQ,YAAavT,KAAK4T,aAStBhC,QAAQuC,GACN,MAAMC,EAAUpU,KAAKgT,YAErB,GAAgB,YAAZoB,EACF,OAAOpU,KAAKgU,QAAU,cAEpB,OAAchU,KAAM,CACpBqU,SAAUrU,KAAKgR,SAASsD,cAAc,GACtCC,QAAQ,EACRC,SAAUxU,KAAKgR,SAASyD,YAAY,KAIxC,MAAO,CAAEC,GAAWvB,EAAWwB,MAAK,EAAEC,KAAUA,IAASR,KAAY,GACrE,OAAOM,EA5KX,SAAsBhC,EAAOgC,GAC3B,MAAO,IAAIhC,EAAMmC,IAAI3B,GAAO4B,IAAIJ,GAASK,WAAa,KAAKC,QAAQ,MA2KhDC,CAAajV,KAAM0U,IAAW,OAAa1U,MAO9D8R,OAAOoD,GAAU,GAKf,OAAOA,GAAWjE,MAAMoC,YA5LJ,GA4LoCrT,KAAK+K,QAAU/K,KAAK+U,WAO9E/B,YAIE,OAAOhT,gBAAgBA,KAAKgR,SAASmE,kBAAkB,WAAa,UAAY,GAAGnV,KAAK4T,WAAa,IAAM,MAAM5T,KAAKqT,cAQxHhG,SAAS7I,GAEP,OAAOyM,MAAM5D,SAAS7I,GASxB4M,MAAMY,GACJ,OAAO,OAAQhS,KAAM,CACnBqT,UAAWrT,KAAKqT,YAChBN,MAAM,EACNQ,YAAavT,KAAK4T,8GC/NxB,SAASwB,EAAkBvR,GACzB,OAAOA,EA0BF,MAAMwR,EACX,GACA,GAEAxV,YAAYmR,EAAUsE,EAAM5C,EAAQ,GAAG,WACrC6C,EAAU,cACVC,EAAgBJ,GACd,IACFpV,KAAKgR,SAAWA,EAChBhR,MAAK,EAAQuV,GAAcC,GAAc,OAAkBxE,EAAUsE,IACrE,MAAOG,EAAKC,GAjChB,SAAuB1E,EAAUsE,EAAM5C,GACrC,IAAI,OAAMA,GAAQ,CAChB,MAAOgD,EAAeC,IAAkB,EAAXjD,EAAM,IAAa,GAAO,OAAkBA,IAAS,OAAeA,GACjG,MAAO,CAAC,IAAI4C,EAAKtE,EAAU2E,GAAKD,GAC3B,GAAIhD,aAAiB2C,EAAS,CACnC,MAAMI,EAAM/C,EAAMO,SAClB,OAAOwC,aAAeH,EAAO,CAACG,EAAK,GAAK,CAAC,IAAIH,EAAKtE,EAAUyE,GAAM,GAC7D,OAAI/C,aAAiB4C,EACnB,CAAC5C,EAAO,GAGV,CAAC,IAAI4C,EAAKtE,EAAU0B,GAAQ,GAsBJkD,CAAc5E,EAAUhR,MAAK,EAAO0S,GACjE1S,KAAK8S,iBAAmB4C,EACxB1V,MAAK,EAAOyV,EAGdxV,YAAYqV,GACV,IAAIC,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAcwR,EACnBxV,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,EAAO,CAC3B6C,WAAAA,EACAC,cAAAA,MAWJtE,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOlBgJ,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAOrR,MAAK,EAAKqR,QAOnBgC,YACE,OAAOrT,MAAK,EAAKqT,YAOnB/B,GAAG9P,GACD,OAAOxB,MAAK,EAAKsR,GAAG9P,aAAiB6T,EAAU7T,GAAM,EAAOA,GAO9D+P,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAQjB6C,WACE,OAAOjU,MAAK,EAAKiU,WAOnBC,OACE,OAAOlU,MAAK,EAAKkU,OAOnBnJ,MAAMgI,GACJ,OAAO/S,MAAK,EAAK+K,MAAMgI,GAOzBnB,QAAQC,GACN,OAAO7R,MAAK,EAAK4R,QAAQC,GAO3BC,SACE,OAAO9R,MAAK,EAAK8R,SAOnBiD,WACE,OAAO/U,MAAK,EAAK+U,WAOnB/B,YACE,MAAO,WAAWhT,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAUA,MAAK,EAAKgT,eAOxE3F,WACE,OAAOrN,MAAK,EAAKqN,WASnB+D,MAAMY,GACJ,OAAO,OAAahS,MAAK,EAAKkU,QAOhCjB,SACE,OAAOjT,MAAK,mDCxLT,MAAM8V,EACX,GAEAjW,YAAYmR,EAAU+E,EAAW,kBAG/B,MAFA/V,KAAKgR,SAAWA,EAChBhR,MAAK,EAAc,IAAI8E,MAAM,iDAAiDiR,KACxE/V,MAAK,EAGbC,YAAY8V,GACV,OAAO,cAAcD,EACnBjW,YAAYmR,GACVC,MAAMD,EAAU+E,KAUlB7E,oBACF,MAAMlR,MAAK,EAOT0J,WACF,MAAM1J,MAAK,EAOTqR,cACF,MAAMrR,MAAK,EAGbsR,KACE,MAAMtR,MAAK,EAGbuR,UACE,MAAMvR,MAAK,EAGb+K,QACE,MAAM/K,MAAK,EAGb4R,UACE,MAAM5R,MAAK,EAGb8R,SACE,MAAM9R,MAAK,EAGbgT,YACE,MAAMhT,MAAK,EAGbqN,WACE,MAAMrN,MAAK,EAGboR,QACE,MAAMpR,MAAK,+MCzEf,SAASoV,EAAkBvR,GACzB,OAAOA,EAoET,SAASmS,EAAaC,EAAKC,GACzB,MAAMC,EAASC,OAAOD,OAAOF,GAE7B,IAAK,IAAIjV,EAAI,EAAGA,EAAImV,EAAOzV,OAAQM,IAAK,CACtC,MAAM,KACJsU,EAAI,MACJe,GACEF,EAAOnV,GAEX,GAAIqV,IAAUH,EACZ,OAAOZ,EAIX,MAAM,IAAIxQ,MAAM,mCAAmCoR,SAAgBE,OAAOE,KAAKL,GAAKlE,KAAK,SAG3F,SAASwE,EAAcvF,EAAUiF,EAAKI,EAAO3D,GAE3C,MAAO,CACL2D,MAAAA,EACA3D,MAAO,IAHIsD,EAAaC,EAAKI,GAGtB,CAASrF,EAAU0B,IAI9B,SAAS8D,EAAgBxF,EAAUiF,EAAKI,EAAQ,EAAG3D,GACjD,MAAM4C,EAAOU,EAAaC,EAAKI,GAC/B,MAAO,CACLA,MAAAA,EACA3D,MAAOA,aAAiB4C,EAAO5C,EAAQ,IAAI4C,EAAKtE,EAAU0B,IAI9D,SAAS+D,EAAezF,EAAUiF,EAAKhN,EAAKyJ,GAG1C,MAAM4D,EAAOF,OAAOE,KAAKL,GAAK9U,KAAImN,GAAKA,EAAEoI,gBACnCC,EAAW1N,EAAIyN,cACfL,EAAQC,EAAKM,QAAQD,GAE3B,IAAe,IAAXN,EACF,MAAM,IAAIvR,MAAM,yCAAyCmE,SAAWqN,EAAKvE,KAAK,SAGhF,IACE,OAAOyE,EAAgBxF,EAAUiF,EAAKG,OAAOD,OAAOF,GAAKI,GAAOA,MAAO3D,GACvE,MAAO1I,GACP,MAAM,IAAIlF,MAAM,QAAQmE,QAAUe,EAAM6M,YAqCrC,MAAMC,EACX,GACA,GACA,GACA,GACA,GACA,GAEAjX,YAAYmR,EAAU+F,EAAOrE,EAAO2D,GAAO,WACzCd,EAAU,cACVC,EAAgBJ,GACd,IACF,MAAM,IACJa,EAAG,QACHe,EAAO,UACPC,GACE1B,GAAcC,EAvJtB,SAAoBxE,EAAUkG,GAC5B,MAAMjB,EAAM,GACZ,IAAIe,EACAC,EAEJ,GAAIxW,MAAM0W,QAAQD,GAAO,CACvB,IAAK,IAAIlW,EAAI,EAAGA,EAAIkW,EAAKxW,OAAQM,IAC/BiV,EAAIiB,EAAKlW,IAAM,CACbsU,KAAM,IACNe,MAAOrV,GAIXgW,GAAU,EACVC,GAAY,OACP,GA7BT,SAAoBhB,GAClB,MAAMmB,EAAYhB,OAAOD,OAAOF,GAEhC,GAAImB,EAAU3E,MAAKrF,IAAK,OAASA,KAAK,CACpC,IAAKgK,EAAUC,OAAMjK,IAAK,OAASA,IAAMA,GAAK,GAAKA,GAAK,MACtD,MAAM,IAAItI,MAAM,0CAGlB,OAAO,EAGT,OAAO,EAkBIwS,CAAWJ,GAAO,CAC3B,MAAOH,EAAOT,IAAQ,OAAatF,EAAUkG,GAE7C,IAAK,IAAIlW,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAC/BiV,EAAIK,EAAKtV,IAAM,CACbsU,KAAMyB,EAAM/V,GACZqV,MAAOrV,GAIXgW,GAAWZ,OAAOD,OAAOF,GAAKxD,MAAK,EACjC6C,KAAAA,KACIA,IAAS,MACf2B,GAAY,MACP,CACL,MAAMM,EAAUnB,OAAOmB,QAAQL,GAE/B,IAAK,IAAIlW,EAAI,EAAGA,EAAIuW,EAAQ7W,OAAQM,IAAK,CACvC,MAAOiI,EAAKoN,GAASkB,EAAQvW,GAC7BiV,EAAIhN,GAAO,CACTqM,KAAM,IACNe,MAAAA,GAIJW,GAAU,EACVC,GAAY,EAGd,MAAO,CACLhB,IAAAA,EACAe,QAAAA,EACAC,UAAAA,GAwGgCO,CAAWxG,EAAU+F,IAE/CU,GAAU,OAAM/E,IAAUA,EAAMhS,UAAW,OAAS2V,GAASE,EAAcvF,EAAUiF,EAAKvD,EAAM,GAAIA,EAAMzL,SAAS,IAnD7H,SAAoB+J,EAAUiF,EAAKvD,EAAO2D,GAGxC,IAAI,OAASA,GACX,OAAOG,EAAgBxF,EAAUiF,EAAKI,EAAO3D,GACxC,IAAI,OAAMA,KAAU,QAAMA,GAAQ,CACvC,MAAMgF,GAAM,OAAShF,GAErB,GAAIgF,EAAIhX,OACN,OAAO6V,EAAcvF,EAAUiF,EAAKyB,EAAI,GAAIA,EAAIzQ,SAAS,QAEtD,IAAIyL,aAAiBoE,EAC1B,OAAON,EAAgBxF,EAAUiF,EAAKvD,EAAM2D,MAAO3D,EAAMA,OACpD,IAAI,OAASA,GAClB,OAAO8D,EAAgBxF,EAAUiF,EAAKvD,GACjC,IAAI,OAASA,GAClB,OAAO+D,EAAezF,EAAUiF,EAAKvD,EAAMrF,YACtC,IAAI,OAASqF,GAAQ,CAC1B,MAAMzJ,EAAMmN,OAAOE,KAAK5D,GAAO,GAC/B,OAAO+D,EAAezF,EAAUiF,EAAKhN,EAAKyJ,EAAMzJ,KAIlD,OAAOuN,EAAgBxF,EAAUiF,EAAKG,OAAOD,OAAOF,GAAK,GAAGI,OA4BqEsB,CAAW3G,EAAUiF,EAAKvD,EAAO2D,GAChKrW,KAAKgR,SAAWA,EAChBhR,MAAK,EAAOiW,EACZjW,MAAK,EAAWgX,EAChBhX,MAAK,EAAaiX,EAClBjX,MAAK,EAAWoW,OAAOD,OAAOF,GAAK9U,KAAI,EACrCkV,MAAAA,KACIA,IACNrW,MAAK,EAAcA,MAAK,EAAS4W,QAAQa,EAAQpB,OACjDrW,MAAK,EAAOyX,EAAQ/E,MAEhB1S,MAAK,EAAK8S,mBACZ9S,KAAK8S,iBAAmB,EAAI9S,MAAK,EAAK8S,kBAI1C7S,YAAY8W,GACV,MAAMT,EAAO7V,MAAM0W,QAAQJ,GAASA,EAAQX,OAAOE,KAAKS,GAClDa,EAAS,IAAInX,MAAM6V,EAAK5V,QACxBmX,EAAS,IAAIpX,MAAM6V,EAAK5V,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAAK,CACpC,MAAMgL,GAAO,QAAiBsK,EAAKtV,IACnC4W,EAAO5W,GAAK,KAAKgL,IACjB6L,EAAO7W,GAAK,KAAKgL,IAGnB,IAAIuJ,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAciT,EACnBjX,YAAYmR,EAAU0B,EAAO2D,GAC3BpF,MAAMD,EAAU+F,EAAOrE,EAAO2D,EAAO,CACnCd,WAAAA,EACAC,cAAAA,KAEF,OAAiBxV,KAAM6X,GAAQ,CAACC,EAAG9W,IAAMhB,KAAK4U,OAAS0B,EAAKtV,MAC5D,OAAiBhB,KAAM4X,GAAQ,CAACtJ,EAAGtN,KACjC,IAAKhB,KAAK6X,EAAO7W,IACf,MAAM,IAAI8D,MAAM,mBAAmB9E,KAAK4U,aAAatG,KAGvD,OAAOtO,KAAK0S,WAWhBxB,oBACF,OAAO,EAAIlR,MAAK,EAAKkR,cAOnBxH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BiF,YACF,OAAOrW,MAAK,EAASA,MAAK,GAOxBwR,YACF,OAAOxR,MAAK,EAOVgX,cACF,OAAOhX,MAAK,EAOVqR,cACF,OAAOrR,MAAK,EAAKqR,QAOf0G,aACF,OAAO/X,MAAK,aAAgB,IAQ1BgY,aACF,OAAOhY,KAAK+X,OAOVE,iBACF,OAAOjY,MAAK,EAOVkY,cACF,OAAO9B,OAAOE,KAAKtW,MAAK,GAOtB4U,WACF,OAAO5U,KAAKkY,QAAQlY,MAAK,GAOvB0S,YACF,OAAO1S,MAAK,EAOdsR,GAAG9P,GAED,OAAI,OAAMA,IACAxB,KAAKoR,QAAQqB,MAAK,CAAC0F,EAAO9B,IAAU8B,IAAU3W,EAAM6U,MACnD,OAAS7U,GACXxB,KAAK+U,aAAevT,EAClBxB,MAAK,IAAY,OAASwB,GAC5BxB,KAAK4U,OAASpT,GACZ,QAAMA,GACRxB,KAAK+K,UAAYvJ,EACfA,aAAiBsV,EACnB9W,KAAKqW,QAAU7U,EAAM6U,OAASrW,KAAK0S,MAAMpB,GAAG9P,EAAMkR,QAChD,OAASlR,GACXxB,KAAK0S,MAAMpB,GAAG9P,EAAMxB,KAAK4U,OAI3B5U,KAAK0S,MAAMpB,GAAG9P,GAOvB+P,UACE,GAAIvR,MAAK,EACP,MAAO,CACL0R,MAAO,CAAC,IAAIzE,WAAW,CAACjN,KAAKqW,UAIjC,MAAM,MACJ7E,EAAK,MACLE,EAAQ,IACN1R,MAAK,EAAKuR,UACd,MAAO,CACLC,MAAAA,EACAE,MAAO,CAAC,IAAIzE,WAAW,CAACjN,KAAKqW,WAAY3E,IAQ7C3G,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,QAAQC,GACN,OAAO7R,MAAK,GAAYA,KAAK+X,OAAS/X,KAAK4U,KAAO,CAChD,CAAC5U,KAAK4U,MAAO5U,MAAK,EAAK4R,QAAQC,IAQnCC,SACE,OAAO9R,MAAK,EAAWA,KAAK4U,KAAO,CACjC,EAAC,QAAgB5U,KAAK4U,OAAQ5U,MAAK,EAAK8R,UAQ5CiD,WACE,OAAO/U,KAAKqW,MAOd+B,eACE,GAAIpY,MAAK,EACP,OAAOA,MAAK,EAAaA,KAAKkY,QAAQrX,QAAO,CAACwX,EAAKpP,EAAKoN,KACtDgC,EAAIpP,GAAOjJ,MAAK,EAASqW,GAClBgC,IACN,IAAMrY,KAAKkY,QAGhB,MAAMX,EAAUnB,OAAOmB,QAAQvX,MAAK,GACpC,OAAO,OAAWA,KAAKgR,SAAUuG,EAAQ1W,QAAO,CAACwX,GAAMpP,GACrDqM,KAAAA,IACEtU,KACFqX,EAAI,GAAGrX,GAAKsU,EACZ+C,EAAI,GAAGrX,GAAKiI,EACLoP,IACN,CAAC,IAAI5X,MAAM8W,EAAQ7W,QAAS,IAAID,MAAM8W,EAAQ7W,WAOnDsS,YACE,OAAO,OAAU,CACfsF,MAAOtY,KAAKoY,iBAQhB/K,WACE,OAAOrN,KAAK+X,OAAS/X,KAAK4U,MAAO,OAAU5U,KAAK8R,UAQlDV,MAAMY,GACJ,OAAOA,EAAShS,MAAK,EAAKoR,MAAMY,IAAU,OAAgB,CAAC,IAAI/E,WAAW,CAACjN,KAAKqW,QAASrW,MAAK,EAAKoR,MAAMY,oECrbtG,MAAMuG,UAAY,IACvB1Y,YAAYmR,EAAU0B,EAAQ,EAAGW,GAC/BpC,MAAMD,EAAU0B,EAAOW,GAAW,GAGpCpT,YAAYoT,EAAW0C,GACrB,OAAO,cAAcwC,EACnB1Y,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0B,EAAOW,GAGzBL,YACE,OAAO+C,GAAY9E,MAAM+B,8ECjB1B,MAAMwF,EACXtH,cAAgB,EAChBG,SAAU,EAEVyB,iBAAmB,EAEnBjT,YAAYmR,GACVhR,KAAKgR,SAAWA,EAOdtH,WACF,MAAM,IAAI5E,MAAM,oCAOlBwM,GAAG9P,GACD,OAAOA,aAAiBgX,IAAQ,OAAOhX,GAOzC+P,UACE,MAAO,GAOTxG,QACE,MAAO,KAOT6G,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO,KAOTkB,YACE,MAAO,OAOT3F,WACE,MAAO,GAST+D,MAAMY,GACJ,OAAO,IAAI/E,6ICpFf,SAASmI,EAAkBvR,GACzB,OAAOA,EAGT,MAAM4U,UAAa,IAIjBzF,YACE,MAAO,QA2CJ,MAAM0F,EACX,GACA,GAEA7Y,YAAYmR,EAAU+E,EAAUrD,GAAO,WACrC6C,EAAU,cACVC,EAAgBJ,GACd,IACF,MAAME,EAAOC,GAAcC,GAAc,OAAkBxE,EAAU+E,IAC/D0B,GAAU,OAAM/E,IAAUA,EAAMhS,UAAW,OAAQgS,GAAsB,IAAbA,EAAM,GAAW,IAAI+F,EAAKzH,GAAY,IAAIsE,EAAKtE,EAAU0B,EAAMzL,SAAS,IA7C9I,SAAsB+J,EAAUsE,EAAM5C,GACpC,OAAIA,aAAiB4C,EAEZ5C,EACEA,aAAiBgG,EACtBhG,EAAMA,iBAAiB4C,EAElB5C,EAAMA,MACJA,EAAMqF,OAER,IAAIU,EAAKzH,GAIX,IAAIsE,EAAKtE,EAAU0B,EAAMA,QACvB,OAAOA,KAAU,OAAYA,IAAoB,OAAVA,GAAkBA,aAAiB+F,EAE5E,IAAIA,EAAKzH,IACP,OAAM0B,GAGPA,EAAMhS,QAAuB,IAAbgS,EAAM,GAAgC,IAAI4C,EAAKtE,EAAU0B,EAAMzL,SAAS,IAAvD,IAAIwR,EAAKzH,GAG7C,IAAIsE,EAAKtE,EAAU0B,GAqBwHiG,CAAa3H,EAAUsE,EAAM5C,GAC7K1S,KAAKgR,SAAWA,EAChBhR,MAAK,EAAQsV,EACbtV,MAAK,EAAOyX,EAERA,GAAWA,EAAQ3E,mBACrB9S,KAAK8S,iBAAmB,EAAI2E,EAAQ3E,kBAIxC7S,YAAYqV,GACV,IAAIC,EAEJ,MAAMC,EAAgB3R,IACpB0R,EAAa1R,EACNA,GAGT,OAAO,cAAc6U,EACnB7Y,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,EAAO,CAC3B6C,WAAAA,EACAC,cAAAA,MAWJtE,oBAEF,OAAO,EAAIlR,MAAK,EAAKkR,cAOnBxH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAOrR,KAAK+X,OAOVA,aACF,OAAO/X,MAAK,aAAgByY,EAO1BG,aACF,OAAQ5Y,KAAK+X,OAOXrF,YACF,OAAO1S,MAAK,EAOdsR,GAAG9P,GACD,OAAIA,aAAiBkX,EACZ1Y,KAAK4Y,SAAWpX,EAAMoX,QAAU5Y,KAAK0S,MAAMpB,GAAG9P,EAAMkR,OAGtD1S,KAAK0S,MAAMpB,GAAG9P,GAOvB+P,UACE,GAAIvR,KAAK+X,OACP,MAAO,CACLrG,MAAO,CAAC,IAAIzE,WAAW,CAAC,MAI5B,MAAM,MACJuE,EAAK,MACLE,EAAQ,IACN1R,MAAK,EAAKuR,UACd,MAAO,CACLC,MAAAA,EACAE,MAAO,CAAC,IAAIzE,WAAW,CAAC,OAAQyE,IAQpC3G,QAGE,OAAO/K,KAAK+X,OAAS,MAAO,OAAS/X,KAAKoR,QAAQnK,SAAS,IAO7D2K,QAAQC,GACN,OAAO7R,MAAK,EAAK4R,QAAQC,GAO3BC,SACE,OAAO9R,KAAK+X,OAAS,KAAO/X,MAAK,EAAK8R,SAOxCkB,UAAUhB,GACR,MAAM6G,EAAU7Y,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAU,IAAIA,MAAK,EAAMA,KAAKgR,UAAUgC,YACxF,OAAOhB,EAAS6G,EAAU,UAAUA,KAOtCxL,WACE,OAAOrN,MAAK,EAAKqN,WAQnB+D,MAAMY,GACJ,GAAIA,EACF,OAAOhS,MAAK,EAAKoR,OAAM,GAGzB,MAAMsG,EAAM,IAAIzK,WAAWjN,KAAKkR,eAOhC,OALIlR,KAAK4Y,SACPlB,EAAIvS,IAAI,CAAC,IACTuS,EAAIvS,IAAInF,MAAK,EAAKoR,QAAS,IAGtBsG,EAOTzE,SACE,GAAIjT,KAAK+X,OACP,MAAM,IAAIjT,MAAM,mCAGlB,OAAO9E,MAAK,EAQd8Y,SAASC,GACP,OAAO/Y,KAAK4Y,OAAS5Y,KAAKiT,SAAW8F,EAQvCC,kBACE,OAAOhZ,KAAK4Y,OAAS5Y,KAAKiT,SAAW,IAAIjT,MAAK,EAAMA,KAAKgR,yECnQtD,MAAMiI,UAAe,IAC1BpZ,YAAYmR,EAAUkI,EAAIC,EAAKzG,GAG7BzB,MAAMD,EAAU,CACdkI,GAAAA,EACAC,IAAAA,GACCzG,GAGLzS,YAAY8W,GACV,OAAO,cAAckC,EACnBpZ,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU+F,EAAMmC,GAAInC,EAAMoC,IAAKzG,KAUvC0G,YACF,IAAKpZ,KAAKqZ,MACR,MAAM,IAAIvU,MAAM,8DAGlB,OAAO9E,KAAK0S,MAOV4G,cACF,OAAOtZ,KAAKoZ,MAOVG,WACF,IAAKvZ,KAAKwZ,KACR,MAAM,IAAI1U,MAAM,6DAGlB,OAAO9E,KAAK0S,MAOVrB,cACF,OAAOrR,KAAKwZ,MAAQxZ,KAAK0S,MAAMrB,QAO7BgI,YACF,OAAQrZ,KAAKwZ,KAOXC,cACF,OAAOzZ,KAAKqZ,MAOVG,WACF,OAAsB,IAAfxZ,KAAKqW,MAOdrD,YACE,MAAM+D,EAAQ/W,KAAKoY,eAEnB,MAAO,UAAUrB,EAAMmC,MAAMnC,EAAMoC,qLC7FvC,SAAS/D,EAAkBvR,GACzB,OAAOA,EA+BF,MAAM6V,UAAc,IACzB,GAEA7Z,YAAYmR,EAAU+F,EAAOrE,GAAO,WAClC6C,EAAU,cACVC,EAAgBJ,GACd,IACF,MAAMuE,EAAUpE,GAAcC,EAAc/U,MAAM0W,QAAQJ,GAAS,CAACA,EAAM5V,KAAIyY,IAAK,OAAkB5I,EAAU4I,KAAK,KAAM,OAAW7C,KAAU,OAASA,GAAS,CAAC,EAAC,OAAkB/F,EAAU+F,IAAS,KAAM,OAAa/F,EAAU+F,IACrO9F,MAAMD,EAAU2I,EAAQ,GAAGjZ,QAC3BV,KAAK8S,mBAAoB,OAAMJ,IAAS,QAAU1B,EAAUhR,KAAM0S,EAAOiH,GAnC7E,SAAqB3I,EAAUnD,EAAQ6E,EAAOiH,GAC5C,IAAI,OAAMjH,KAAU,QAAMA,GACxB,OAAO,QAAU1B,EAAUnD,GAAQ,OAAS6E,GAAQiH,GAGtD,MAAM5C,EAAQ4C,EAAQ,GAEtB,IAAK,IAAI3Y,EAAI,EAAGA,EAAI+V,EAAMrW,OAAQM,IAChC,IACE,MAAMmX,EAAQzF,MAAAA,OAAqC,EAASA,EAAM1R,GAClE6M,EAAO7M,GAAKmX,aAAiBpB,EAAM/V,GAAKmX,EAAQ,IAAIpB,EAAM/V,GAAGgQ,EAAUmH,GACvE,MAAOnO,GACP,MAAM,IAAIlF,MAAM,oBAAoB9D,OAAOgJ,EAAM6M,WAIrD,MAAO,CAAChJ,EAAQ,GAmBsEgM,CAAY7I,EAAUhR,KAAM0S,EAAOiH,IAAU,GACjI3Z,MAAK,EAAS2Z,EAGhB1Z,YAAY8W,GACV,IAAIxB,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAc6V,EACnB7Z,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU+F,EAAOrE,EAAO,CAC5B6C,WAAAA,EACAC,cAAAA,MAWJtE,oBACF,IAAIC,EAAQ,EAEZ,IAAK,IAAInQ,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/BmQ,GAASnR,KAAKgB,GAAGkQ,cAGnB,OAAOC,EAOL4F,YACF,OAAO/W,MAAK,EAAO,GAAGU,OAASV,MAAK,EAAO,GAAKA,MAAK,EAAO,GAAGmB,KAAI2Y,GAAK,IAAIA,EAAE9Z,KAAKgR,UAAUgC,cAO/FzB,UACE,MAAO,CACLC,MAAOxR,KAAKyR,gBAQhBuB,YAEE,MAAO,IADOhT,MAAK,EAAO,GAAGmB,KAAI2Y,GAAK9Z,KAAKgR,SAAS6E,aAAaiE,IAAM,IAAIA,EAAE9Z,KAAKgR,UAAUgC,cAC3EjB,KAAK,QAOxB1E,WAEE,OAAO,OAAUrN,KAAK8R,UAQxBV,MAAMY,GACJ,OAAO,OAAgBhS,KAAKkS,WAAWF,oEC7GpC,MAAM+H,UAAa,IACxB9Z,YAAYoT,EAAW0C,GACrB,OAAO,cAAcgE,EACnBla,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0B,EAAOW,GAGzBL,YACE,OAAO+C,GAAY9E,MAAM+B,wJCjBjC,MACMgH,GAAI,OAAO,OAEjB,SAAS5E,EAAkBvR,GACzB,OAAOA,EAkBF,SAASoW,EAAUjJ,EAAUnD,EAAQ6E,EAAOwH,EAAS5E,GAC1D,GAAI7U,MAAM0W,QAAQzE,GAAQ,CACxB,MAAMyH,EAAQtM,EAAOnN,OAErB,IAAK,IAAIM,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMmX,EAAQzF,EAAM1R,GAEpB,IACE6M,EAAO7M,GAAKmX,aAAiB7C,EAAO6C,EAAQ,IAAI7C,EAAKtE,EAAUmH,GAC/D,MAAOnO,GAEP,MADAgQ,EAAEhQ,MAAM,6BAA6BhJ,IAAKgJ,EAAM6M,SAC1C7M,GAIV,MAAO,CAAC,EAAG,GAGb,OAAO,QAAagH,EAAUnD,GAAQ,OAAS6E,GAAQwH,EAAS5E,GAU3D,MAAM8E,UAAY,IACvB,GAEAva,YAAYmR,EAAUsE,EAAM5C,EAAQ,IAAI,WACtC6C,EAAU,cACVC,EAAgBJ,GACd,IACF,MAAOiF,EAAY3Z,EAAQwZ,GAlD/B,SAAyBxH,GACvB,GAAIjS,MAAM0W,QAAQzE,GAChB,MAAO,CAACA,EAAOA,EAAMhS,OAAQ,GAG/B,MAAMgX,GAAM,OAAShF,IACdwH,EAASxZ,IAAU,OAAkBgX,GAE5C,GAAIhX,EAfa,MAgBf,MAAM,IAAIoE,MAAM,cAAcpE,EAAO2M,4BAGvC,MAAO,CAACqK,EAAKhX,EAAQwZ,GAsCmBI,CAAgB5H,GACtDzB,MAAMD,EAAUtQ,GAChBV,MAAK,EAAQuV,GAAcC,GAAc,OAAkBxE,EAAUsE,IACrEtV,KAAK8S,mBAAoB,OAAMuH,IAAc,QAAarJ,EAAUhR,KAAMqa,EAAYH,EAASla,MAAK,GAASia,EAAUjJ,EAAUhR,KAAMqa,EAAYH,EAASla,MAAK,IAAQ,GAG3KC,YAAYqV,GACV,IAAIC,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAcuW,EACnBva,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,EAAO,CAC3B6C,WAAAA,EACAC,cAAAA,MAWJF,WACF,OAAOtV,MAAK,EAAMgM,KAOpB4K,QAAQ2D,GAEN,MAAM/Y,EAAQ+Y,aAAkBva,MAAK,EAAQua,EAAS,IAAIva,MAAK,EAAMA,KAAKgR,SAAUuJ,GAEpF,IAAK,IAAIvZ,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/B,GAAIQ,EAAM8P,GAAGtR,KAAKgB,IAChB,OAAOA,EAIX,OAAQ,EAOVgS,YACE,MAAO,OAAOhT,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAU,IAAIA,MAAK,EAAMA,KAAKgR,UAAUgC,sIC3G1F,SAASoC,EAAkBvR,GACzB,OAAOA,EASF,MAAM2W,UAAiB,IAC5B,GAEA3a,YAAYmR,EAAUsE,EAAM5U,EAAQgS,EAAQ,IAAI,WAC9C6C,EAAU,cACVC,EAAgBJ,GACd,IACFnE,MAAMD,EAAUtQ,GAChBV,MAAK,EAAQuV,GAAcC,GAAc,OAAkBxE,EAAUsE,IACrEtV,KAAK8S,mBAAoB,OAAMJ,IAAS,QAAa1B,EAAUhR,KAAM0S,EAAO,EAAG1S,MAAK,IAAS,OAAUgR,EAAUhR,KAAM0S,EAAO,EAAG1S,MAAK,IAAQ,GAGhJC,YAAYqV,EAAM5U,GAChB,IAAI6U,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAc2W,EACnB3a,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5U,EAAQgS,EAAO,CACnC6C,WAAAA,EACAC,cAAAA,MAWJF,WACF,OAAO,IAAItV,MAAK,EAAMA,KAAKgR,UAAUgC,YAOnC9B,oBACF,IAAIC,EAAQ,EAEZ,IAAK,IAAInQ,EAAI,EAAGA,EAAIhB,KAAKU,OAAQM,IAC/BmQ,GAASnR,KAAKgB,GAAGkQ,cAGnB,OAAOC,EAOTI,UACE,MAAO,CACLC,MAAOxR,KAAKyR,gBAIhBL,QAGE,MAAMa,EAAUjS,KAAKkS,aACrB,OAAOD,EAAQvR,QAAS,OAAgBuR,GAAW,IAAIhF,WAAW,IAOpE+F,YACE,MAAO,IAAIhT,KAAKsV,QAAQtV,KAAKU,0ECtF1B,MAAM+Z,UAAiB,IAC5Bxa,YAAYya,EAASC,GACnB,OAAO,cAAcF,EACnB5a,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0J,EAASC,EAASjI,EAAO,kNCHjD,MAAMsH,GAAI,OAAO,YA4DV,MAAMY,UAAiBC,IAC5B,GAEAhb,YAAYmR,EAAU2J,EAASG,GAC7B,MAAOC,EAAU5E,EAAQT,GAlB7B,SAAmB1E,EAAU2J,EAASjI,GACpC,MAAMqI,GAAW,OAAkB/J,EAAU2J,GAE7C,IAAKjI,EACH,MAAO,CAACqI,EAAU,IAAIF,IAAO,GACxB,IAAI,OAAMnI,KAAU,QAAMA,GAC/B,OAjDJ,SAA0B1B,EAAU+J,EAAUrD,GAC5C,MAAMsD,EAAS,IAAIH,KACZpV,EAAQ0U,IAAS,OAAkBzC,GACpC7J,EAAS,IAAIpN,MAAM0Z,IAClBzE,IAAiB,QAAa1E,EAAUnD,EAAQ6J,EAAKjS,EAAQsV,GAEpE,IAAK,IAAI/Z,EAAI,EAAGA,EAAImZ,EAAOnZ,IACzBga,EAAOhY,IAAI6K,EAAO7M,IAGpB,MAAO,CAAC+Z,EAAUC,EAAQtF,GAuCjBuF,CAAiBjK,EAAU+J,GAAU,OAASrI,IAChD,GAAIjS,MAAM0W,QAAQzE,IAAUA,aAAiBmI,IAClD,OApCJ,SAA0B7J,EAAU+J,EAAUrI,GAC5C,MAAMsI,EAAS,IAAIH,IASnB,OARAnI,EAAMwI,SAAQC,IACZ,IACEH,EAAOhY,IAAImY,aAAeJ,EAAWI,EAAM,IAAIJ,EAAS/J,EAAUmK,IAClE,MAAOnR,GAEP,MADAgQ,EAAEhQ,MAAM,iCAAkCA,EAAM6M,SAC1C7M,MAGH,CAAC+Q,EAAUC,EAAQ,GA0BjBI,CAAiBpK,EAAU+J,EAAUrI,GAG9C,MAAM,IAAI5N,MAAM,gCAO4BuW,CAAUrK,EAAU2J,EAASG,GACvE7J,OAAM,QAAQkF,IACdnW,KAAKgR,SAAWA,EAChBhR,KAAK8S,iBAAmB4C,EACxB1V,MAAK,EAAY+a,EAGnB9a,YAAY0a,GACV,OAAO,cAAcC,EACnB/a,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU2J,EAASjI,KAU3BxB,oBACF,IAAItI,GAAM,OAAa5I,KAAKsb,MAAM5a,OAElC,IAAK,MAAM0M,KAAKpN,KAAKmW,SACnBvN,GAAOwE,EAAE8D,cAGX,OAAOtI,EAOLc,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAqB,IAAdrR,KAAKsb,KAOVC,cACF,MAAO,IAAItK,MAAMkF,UAAUhV,KAAIiM,GAAKA,EAAEC,aAOxCiE,GAAG9P,GACD,OAAO,OAAWxB,KAAMwB,GAO1B+P,UACE,MAAMC,EAAQ,IAAI/Q,MAElB,IAAK,MAAM2M,KAAKpN,KAAKmW,SACnB3E,EAAM9M,KAAK0I,EAAEmE,WAGf,MAAO,CACLC,MAAAA,EACAE,MAAO,EAAC,OAAa1R,KAAKsb,QAQ9BvQ,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,QAAQC,GACN,MAAM2J,EAAO,GAEb,IAAK,MAAMpO,KAAKpN,KAAKmW,SACnBqF,EAAK9W,KAAK0I,EAAEwE,QAAQC,IAGtB,OAAO2J,EAOT1J,SACE,MAAM0J,EAAO,GAEb,IAAK,MAAMpO,KAAKpN,KAAKmW,SACnBqF,EAAK9W,KAAK0I,EAAE0E,UAGd,OAAO0J,EAOTxI,YACE,MAAO,YAAYhT,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAc,IAAIA,MAAK,EAAUA,KAAKgR,UAAUgC,eAOrG3F,WACE,OAAO,OAAUrN,KAAK8R,UAQxBV,MAAMY,GACJ,MAAMC,EAAU,IAAIxR,MAEfuR,GACHC,EAAQvN,MAAK,OAAa1E,KAAKsb,OAGjC,IAAK,MAAMlO,KAAKpN,KAAKmW,SACnBlE,EAAQvN,KAAK0I,EAAEgE,MAAMY,IAGvB,OAAO,OAAgBC,0HC/KpB,MAAMwJ,UAAe,IAC1B,GACA,GAIA5b,YAAYmR,EAAU0B,EAAOgJ,GAAQ,GACnC,MAAOhG,EAAegC,GAvB1B,SAAsBhF,GACpB,GAAIjS,MAAM0W,QAAQzE,KAAU,OAASA,GAAQ,CAC3C,MAAMgF,GAAM,OAAShF,GACrB,MAAO,CAACgF,EAAIhX,OAAS,EAAGgX,GAG1B,OAxBF,SAAyBhF,GACvB,IAAKA,IAAUA,EAAMhS,OACnB,MAAO,CAAC,EAAG,IAAIuM,YAIjB,MAAOxH,EAAQ/E,IAAU,OAAkBgS,GACrCvB,EAAQ1L,EAASK,KAAK6V,KAAKjb,EAAS,GAE1C,GAAIyQ,EAAQuB,EAAMhS,OAChB,MAAM,IAAIoE,MAAM,kEAAkEqM,YAAgBuB,EAAMhS,UAG1G,MAAO,CAACA,EAAQgS,EAAMzL,SAASxB,EAAQ0L,IAWhCyK,CAAgBlJ,GAiBQmJ,CAAanJ,GAC1CzB,MAAMD,EAAU0G,GAChB1X,MAAK,EAAiB0V,EACtB1V,MAAK,EAAS0b,EAOZxK,oBACF,OAAOlR,KAAKU,QAAS,OAAaV,MAAK,GAAgBU,OAOzD6Q,UACE,MAAO,CACLG,MAAO,EAAC,OAAa1R,MAAK,GAAiBiR,MAAMG,UAIrDQ,UACE,MAAO,KAAK,IAAI5R,KAAKoR,OAAM,IAAOjQ,KAAI0C,GAAK,WAAWA,EAAEwJ,SAAS,KAAKpC,OAAO,KAAI9J,KAAI0I,GAAK7J,MAAK,EAAS6J,EAAIA,EAAEiS,MAAM,IAAIC,UAAUhK,KAAK,MAAKA,KAAK,OAOnJiB,YACE,MAAO,SAQT5B,MAAMY,GACJ,MAAMgK,EAAS/K,MAAMG,QACrB,OAAOY,EAASgK,GAAS,OAAgB,EAAC,OAAahc,MAAK,GAAiBgc,sICxD1E,MAAMC,UAAc,IACzBpc,YAAYmR,EAAU0B,GACpB,MAAOgF,EAAKhC,KAAiB,OAAMhD,IAAYA,aAAiB,IAA+BjS,MAAM0W,QAAQzE,KAAU,OAASA,GAAS,EAAC,OAASA,GAAQ,GAAK,CAACA,EAAO,GA5B5K,SAAwBA,GACtB,IAAKA,EAAMhS,OACT,MAAO,CAAC,IAAIuM,WAAc,GAI5B,MAAOxH,EAAQ/E,IAAU,OAAkBgS,GACrCvB,EAAQ1L,EAAS/E,EAEvB,GAAIA,EAZa,SAaf,MAAM,IAAIoE,MAAM,gBAAgBpE,EAAO2M,+BAClC,GAAI8D,EAAQuB,EAAMhS,OACvB,MAAM,IAAIoE,MAAM,iEAAiEqM,YAAgBuB,EAAMhS,UAGzG,MAAO,CAACgS,EAAMzL,SAASxB,EAAQ0L,GAAQA,GAakC+K,CAAexJ,GACtFzB,MAAMD,EAAU0G,EAAKhC,GAOnBxE,oBACF,OAAOlR,KAAKU,QAAS,OAAaV,KAAKU,QAAQA,OAOjD6Q,QAAQS,GACN,MAAMmK,GAAU,OAAanc,KAAKU,QAClC,MAAO,CACLgR,MAAOM,EAAS,CAACf,MAAMG,SAAWpR,KAAKU,OAAS,CAACyb,EAASlL,MAAMG,SAAW,CAAC+K,IAQhFnJ,YACE,MAAO,QAQT5B,MAAMY,GACJ,OAAOA,EAASf,MAAMG,MAAMY,IAAU,OAAiBhS,sECtEpD,MAAMoc,UAAgB,IAC3Bnc,YAAYya,EAASC,GACnB,OAAO,cAAcyB,EACnBvc,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0J,EAASC,EAASjI,oPCA1C,MAAMsH,GAAI,OAAO,OAuBjB,SAASqC,EAAiBrL,EAAUsL,EAAUvB,EAAUrI,GACtD,MAAMsI,EAAS,IAAIuB,IAEnB,IAAK,MAAOtT,EAAKkS,KAAQzI,EAAM6E,UAAW,CACxC,MAAMiF,EAAYF,EAASG,qBAAqB,KAAiBH,EAASG,qBAAqB,KAAUH,EAASG,qBAAqB,IAEvI,IACEzB,EAAO7V,IAAI8D,aAAeqT,EAAWrT,EAAM,IAAIqT,EAAStL,EAAUwL,EAAYE,KAAKC,MAAM1T,GAAOA,GAAMkS,aAAeJ,EAAWI,EAAM,IAAIJ,EAAS/J,EAAUmK,IAC7J,MAAOnR,GAEP,MADAgQ,EAAEhQ,MAAM,iCAAkCA,EAAM6M,SAC1C7M,GAIV,MAAO,CAACsS,EAAUvB,EAAUC,EAAQ,GAoC/B,MAAM4B,UAAiBL,IAC5B,GACA,GACA,GAEA1c,YAAYmR,EAAU0J,EAASC,EAASG,EAAUlG,EAAO,WACvD,MAAO0H,EAAUvB,EAAUtD,EAAS/B,GAvBxC,SAAmB1E,EAAU0J,EAASC,EAASjI,GAC7C,MAAM4J,GAAW,OAAkBtL,EAAU0J,GACvCK,GAAW,OAAkB/J,EAAU2J,GAE7C,IAAKjI,EACH,MAAO,CAAC4J,EAAUvB,EAAU,IAAIwB,IAAO,GAClC,IAAI,OAAM7J,KAAU,QAAMA,GAC/B,OA5DJ,SAA0B1B,EAAUsL,EAAUvB,EAAUrD,GACtD,MAAMsD,EAAS,IAAIuB,KACZ9W,EAAQ0U,IAAS,OAAkBzC,GACpCmF,EAAQ,GAEd,IAAK,IAAI7b,EAAI,EAAGA,EAAImZ,EAAOnZ,IACzB6b,EAAMnY,KAAK4X,EAAUvB,GAGvB,MAAO5E,EAAQT,IAAiB,QAAU1E,EAAU,IAAIvQ,MAAMoc,EAAMnc,QAASgX,EAAIzQ,SAASxB,GAAS,CAACoX,EAAO,KAE3G,IAAK,IAAI7b,EAAI,EAAGA,EAAImV,EAAOzV,OAAQM,GAAK,EACtCga,EAAO7V,IAAIgR,EAAOnV,GAAImV,EAAOnV,EAAI,IAGnC,MAAO,CAACsb,EAAUvB,EAAUC,EAAQvV,EAASiQ,GA6CpCoH,CAAiB9L,EAAUsL,EAAUvB,GAAU,OAASrI,IAC1D,GAAIA,aAAiB6J,IAC1B,OAAOF,EAAiBrL,EAAUsL,EAAUvB,EAAUrI,GACjD,IAAI,OAASA,GAClB,OAAO2J,EAAiBrL,EAAUsL,EAAUvB,EAAU,IAAIwB,IAAInG,OAAOmB,QAAQ7E,KAG/E,MAAM,IAAI5N,MAAM,2BASuCiY,CAAU/L,EAAU0J,EAASC,EAASG,GAC3F7J,MAAe,aAAT2D,GAAsB,QAAQ6C,GAAWA,GAC/CzX,KAAKgR,SAAWA,EAChBhR,KAAK8S,iBAAmB4C,EACxB1V,MAAK,EAAYsc,EACjBtc,MAAK,EAAY+a,EACjB/a,MAAK,EAAQ4U,EAOX1D,oBACF,IAAItI,GAAM,OAAa5I,KAAKsb,MAAM5a,OAElC,IAAK,MAAO4N,EAAGlB,KAAMpN,KAAKuX,UACxB3O,GAAO0F,EAAE4C,cAAgB9D,EAAE8D,cAG7B,OAAOtI,EAOLc,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAqB,IAAdrR,KAAKsb,KAOdhK,GAAG9P,GACD,OAAO,OAAWxB,KAAMwB,GAO1B+P,UACE,MAAMC,EAAQ,IAAI/Q,MAElB,IAAK,MAAO6N,EAAGlB,KAAMpN,KAAKuX,UACxB/F,EAAM9M,KAAK4J,EAAEiD,WACbC,EAAM9M,KAAK0I,EAAEmE,WAGf,MAAO,CACLC,MAAAA,EACAE,MAAO,EAAC,OAAa1R,KAAKsb,QAQ9BvQ,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,QAAQC,GACN,MAAM2J,EAAO,GAEb,IAAK,MAAOlN,EAAGlB,KAAMpN,KAAKuX,UACxBiE,EAAKlN,EAAEjB,YAAcD,EAAEwE,QAAQC,GAGjC,OAAO2J,EAOT1J,SACE,MAAM0J,EAAO,GAEb,IAAK,MAAOlN,EAAGlB,KAAMpN,KAAKuX,UACxBiE,EAAKlN,EAAEjB,YAAcD,EAAE0E,SAGzB,OAAO0J,EAOTxI,YACE,MAAO,GAAGhT,MAAK,KAASA,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAc,IAAIA,MAAK,EAAUA,KAAKgR,UAAUgC,eAAehT,KAAKgR,SAAS6E,aAAa7V,MAAK,IAAc,IAAIA,MAAK,EAAUA,KAAKgR,UAAUgC,eAOzM3F,WACE,OAAO,OAAUrN,KAAK8R,UAQxBV,MAAMY,GACJ,MAAMC,EAAU,IAAIxR,MAEfuR,GACHC,EAAQvN,MAAK,OAAa1E,KAAKsb,OAGjC,IAAK,MAAOhN,EAAGlB,KAAMpN,KAAKuX,UACxBtF,EAAQvN,KAAK4J,EAAE8C,MAAMY,GAAS5E,EAAEgE,MAAMY,IAGxC,OAAO,OAAgBC,+GCxMpB,MAAM+K,UAAmB,IAC9Bnd,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,KAAM,OAAM0B,KAAU,QAAMA,GAfhD,SAAmB1B,EAAU0B,GAK3B,OAAoB,IAAbA,EAAM,GAAW,KAAO,IAAI,IAAK1B,EAAuB,IAAb0B,EAAM,IAUDuK,CAAUjM,GAAU,OAAS0B,IAAUA,GAC5F1S,KAAK8S,iBAAmB,EAOtB5B,oBACF,OAAO,EAOLgM,cACF,QAAOld,KAAK4Y,SAAU5Y,KAAK0S,MAAMyK,UAO/BC,aACF,QAAOpd,KAAK4Y,QAAS5Y,KAAK0S,MAAMyK,UAOlC5L,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAQjB4B,UAAUhB,GACR,OAAOA,EAAS,OAAS,eAQ3BZ,MAAMY,GACJ,OAAIA,EACKf,MAAMG,OAAM,GAGdpR,KAAK4Y,OAAS,IAAI3L,WAAW,CAACjN,KAAKod,OAAS,EAAI,IAAM,IAAInQ,WAAW,CAAC,mECpE1E,MAAMoQ,UAAc,IACzB,GAEAxd,YAAYmR,EAAUsE,EAAM5C,GAAO,UACjC4K,EAAY,SACV,IACFrM,MAAMD,EAAU,CAACsE,EAAMA,GAAO5C,GAC9B1S,MAAK,EAAasd,EAGpBrd,YAAYqV,GACV,OAAO,cAAc+H,EACnBxd,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,KAUxBC,YACF,OAAO3S,KAAK,GAOV4S,UACF,OAAO5S,KAAK,GAOdgT,YACE,MAAO,GAAGhT,MAAK,KAAcA,KAAK2S,MAAMK,8EC9CrC,MAAMuK,UAAuB,IAClC1d,YAAYmR,EAAUsE,EAAM5C,GAC1BzB,MAAMD,EAAUsE,EAAM5C,EAAO,CAC3B4K,UAAW,mBAIfrd,YAAYqV,GACV,OAAO,cAAciI,EACnB1d,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,gFCDvB,MAAM4C,UAAa,IACxBzV,YAAYmR,EAAU0B,EAAQ,IAC5BzB,MAAMD,EAAU0B,GAChB1S,KAAKwd,aAAY,QAASxd,KAAKqN,aAOjC2F,YACE,MAAO,4FCKJ,MAAMyK,UAAiB,IAC5B5d,YAAYmR,EAAU0B,EAAQ,IAAIzF,WAAcoG,EAAY,KAC1D,MAAOqE,EAAKhC,GAxBhB,SAAwBhD,EAAOW,GAC7B,MAAMqE,GAAM,OAAShF,GACfgL,EAAarK,EAAY,EAE/B,IAAKqE,EAAIhX,OACP,MAAO,CAAC,IAAIuM,WAAWyQ,GAAa,GAGtC,IAAI,OAAMhL,GAASgF,EAAIhX,OAASgd,EAAahG,EAAIhX,SAAWgd,EAC1D,MAAM,IAAI5Y,MAAM,uBAAuB4Y,YAAqBrK,kBAA0BqE,EAAIhX,gBAG5F,MAAO,CAACgX,EAAIzQ,SAAS,EAAGyW,GAAaA,GAYNC,CAAejL,EAAOW,GACnDpC,MAAMD,EAAU0G,EAAKhC,GAGvBzV,YAAYoT,EAAW0C,GACrB,OAAO,cAAc0H,EACnB5d,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0B,EAAOW,GAGzBL,YACE,OAAO+C,GAAY9E,MAAM+B,cAU/BA,YACE,MAAO,OAAOhT,KAAKU,sJC7BhB,MAAMkd,UAA0B,IACrC,GACA,GACA,GAEA/d,YAAYmR,EAAU+E,EAAUrD,GAAO,WACrCmL,EAAa,qBACX,IACF,MAAOvI,EAAMmC,EAASC,GAxB1B,SAAmB1G,EAAU+E,EAAUrD,GACrC,MAAM4C,GAAO,OAAkBtE,EAAU+E,GAEzC,IAAI,OAAMrD,KAAU,QAAMA,GACxB,IACE,MAAO,CAAEgF,IAAO,QAAMhF,IAAUA,aAAiB,IAAM,CAAC,EAAGA,IAAS,OAAmBA,GACvF,MAAO,CAAC4C,EAAM,IAAIA,EAAKtE,EAAU0G,GAAMhF,GACvC,MACA,MAAO,CAAC4C,EAAM,KAAM5C,GAIxB,MAAMoL,EAAW,IAAIxI,EAAKtE,EAAU0B,GACpC,MAAO,CAAC4C,EAAMwI,GAAU,OAAiBA,EAAS1M,UAWnB2M,CAAU/M,EAAU+E,EAAUrD,GAC3DzB,MAAMD,EAAU0G,GAChB1X,MAAK,EAAQsV,EACbtV,MAAK,EAAWyX,EAChBzX,MAAK,EAAc6d,EAGrB5d,YAAYqV,GACV,OAAO,cAAcsI,EACnB/d,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,KAUxBsL,gBACF,QAAShe,MAAK,EAOhBuR,UACE,OAAOvR,MAAK,EAAW,CACrBwR,MAAO,CAACxR,MAAK,EAASuR,WACtBG,MAAO,EAAC,OAAa1R,KAAKU,UACxB,CACFgR,MAAO,EAAC,OAAa1R,KAAKU,QAASV,KAAKoR,OAAM,KAQlDQ,QAAQC,GACN,OAAO7R,MAAK,EAAWA,MAAK,EAAS4R,QAAQC,GAAcZ,MAAMW,UAOnEoB,YACE,MAAO,GAAGhT,MAAK,KAAeA,KAAKgR,SAAS6E,aAAa7V,MAAK,KAAWA,MAAK,EAAWA,MAAK,EAASgT,YAAc,IAAIhT,MAAK,EAAMA,KAAKgR,UAAUgC,gBAOrJ3F,WACE,OAAOrN,MAAK,EAAWA,MAAK,EAASqN,WAAa4D,MAAM5D,WAO1D4F,SACE,IAAKjT,MAAK,EACR,MAAM,IAAI8E,MAAM,GAAG9E,MAAK,sCAG1B,OAAOA,MAAK,kEClGT,MAAMie,UAAsB,IACjCpe,YAAYmR,EAAU+E,EAAUrD,GAC9BzB,MAAMD,EAAU+E,EAAUrD,EAAO,CAC/BmL,WAAY,kBAIhB5d,YAAYqV,GACV,OAAO,cAAc2I,EACnBpe,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUsE,EAAM5C,KAUxBlB,YACF,OAAOxR,KAAKiT,oFCdT,MAAMiL,UAAaC,QACxBte,YAAYmR,EAAU0B,GAAQ,GAC5BzB,OAAM,OAAMyB,GAAsB,IAAbA,EAAM,GAAWA,aAAiByL,QAAUzL,EAAMyK,YAAczK,GACrF1S,KAAKgR,SAAWA,EAOdE,oBACF,OAAO,EAOLxH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAOrR,KAAKkd,QAOVA,cACF,OAAQld,KAAKod,OAOXA,aACF,OAAOpd,KAAKmd,UAOd7L,GAAG9P,GACD,OAAOxB,KAAKmd,aAAe3b,aAAiB2c,QAAU3c,EAAM2b,UAAY3b,GAO1E+P,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAQjBrG,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKmd,UAOdnK,YACE,MAAO,OAOT3F,WACE,OAAOrN,KAAK8R,SAASzE,WASvB+D,MAAMY,GACJ,OAAO,IAAI/E,WAAW,CAACjN,KAAKmd,UAAY,EAAI,qGCtGzC,MAAMiB,UAAa7B,IACxB1c,YAAYmR,EAAU0B,GACpB,MAAM+E,EAfV,SAAoB/E,GAClB,OAAO0D,OAAOmB,QAAQ7E,GAAS,IAcb2L,CAAW3L,GAC3BzB,MAAMwG,GACNzX,KAAKgR,SAAWA,GAChB,OAAiBhR,KAAMyX,EAAQtW,KAAI,EAAEmN,KAAOA,KAAIA,GAAKtO,KAAKiF,IAAIqJ,KAO5D4C,oBACF,OAAO,EAOLxH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAmC,IAA5B,IAAIrR,KAAKsW,QAAQ5V,OAO1B4Q,GAAG9P,GACD,OAAO,OAAWxB,KAAMwB,GAG1B8c,KAAKrV,GACH,OAAOjJ,KAAKiF,IAAIgE,GAOlBsI,UACE,MAAM,IAAIzM,MAAM,iBAOlBiG,QACE,MAAM,IAAIjG,MAAM,iBAOlB8M,UACE,MAAO,IAAI5R,KAAKuX,WAAW1W,QAAO,CAAC2a,GAAOvS,EAAKyJ,MAC7C8I,EAAKvS,IAAO,OAAWyJ,EAAMd,SAAWc,EAAMd,UAAYc,EACnD8I,IACN,IAOL1J,SACE,MAAO,IAAI9R,KAAKuX,WAAW1W,QAAO,CAAC2a,GAAOvS,EAAKyJ,MAC7C8I,EAAKvS,GAAOyJ,EACL8I,IACN,IAOLxI,YACE,MAAO,OAOT3F,WACE,OAAO,OAAUrN,KAAK8R,UAQxBV,MAAMY,GACJ,MAAM,IAAIlN,MAAM,wIC9Gb,MAAMyZ,UAAYtR,WACvBpN,YAAYmR,EAAU0B,EAAOI,GAC3B7B,OAAM,OAASyB,IACf1S,KAAKgR,SAAWA,EAChBhR,KAAK8S,iBAAmBA,EAOtB5B,oBACF,OAAOlR,KAAKU,OAOVgJ,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BoN,cACF,OAAO,OAAQxe,MAObqR,cACF,OAAQrR,KAAKU,SAAU,OAAYV,KAAK2U,MAAK5V,KAAOA,KAOlD0f,aACF,OAAO,OAAOze,MAOZU,aAEF,OAAOuQ,MAAMvQ,OAOf2S,YACE,OAAqB,EAAdrT,KAAKU,OAOd4Q,GAAG9P,GACD,OAAIA,aAAiByL,WACZjN,KAAKU,SAAWc,EAAMd,SAAWV,KAAKyS,MAAK,CAAC1T,EAAGsX,IAAUtX,IAAMyC,EAAM6U,KAGvErW,KAAKsR,IAAG,OAAS9P,IAO1B+P,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAUjBnG,MAAM0H,EAAOC,GAGX,OAAO3F,WAAWE,KAAKnN,MAAMiL,MAAM0H,EAAOC,GAS5C3L,SAASyX,EAAO9L,GACd,OAAO3F,WAAWE,KAAKnN,MAAMiH,SAASyX,EAAO9L,GAO/C7H,QACE,OAAO,OAAS/K,MAOlB4R,UACE,GAAI5R,KAAKwe,QAAS,CAChB,MAAMG,EAAO3e,KAAK4e,SAElB,IAAI,OAAQD,GACV,OAAOA,EAIX,OAAO3e,KAAK8R,SAOdA,SACE,OAAO9R,KAAK+K,QAOdiI,YACE,MAAO,MAOT3F,WACE,OAAOrN,KAAK+K,QASdqG,MAAMY,GACJ,OAAO/E,WAAWE,KAAKnN,MAOzB4e,SACE,IAAK5e,KAAKye,OACR,MAAM,IAAI3Z,MAAM,qDAGlB,OAAO,OAAY9E,wOCvLvB,SAAS6e,EAAUC,EAAW3I,GAC5B,MAAMlE,EAAU,IAAI,IAAJ,CAAO,GAEvB,IAAK,IAAIjR,EAAI,EAAGA,EAAImV,EAAOzV,OAAQM,IACjCiR,EAAQ8M,KAAI,OAAOD,EAAU3I,EAAOnV,KAAO,IAG7C,OAAOiR,EAuBT,SAAS+M,EAAgBF,EAAWG,GAClC,MAAMtJ,GAAK,OAAOsJ,GACZ3I,EAAOF,OAAOE,KAAKwI,GACnBjR,EAAS,GAEf,IAAK,IAAI7M,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAAK,CACpC,MAAMiI,EAAMqN,EAAKtV,GAEb2U,EAAGuJ,KAAI,OAAOJ,EAAU7V,KAAOqI,IAAG,OAAOwN,EAAU7V,MACrD4E,EAAOnJ,KAAKuE,GAIhB,MAAMkW,EAAWN,EAAUC,EAAWjR,GAEtC,IAAK8H,EAAGrE,GAAG6N,GACT,MAAM,IAAIra,MAAM,2BAA2B6Q,EAAGtI,6BAA6B8R,EAAS9R,oBAAoBQ,EAAOkE,KAAK,SAGtH,OAAOlE,EAKT,SAASwN,EAAUyD,EAAWpM,EAAQ,EAAGW,GACvC,GAAIA,EAAY,GAAM,EACpB,MAAM,IAAIvO,MAAM,+CAA+CuO,KAGjE,MAAMqK,EAAarK,EAAY,EAE/B,OAAI,OAAMX,GACgB,IAAjBA,EAAMhS,OAAe,GAAKse,EAAgBF,GAAW,OAAQpM,EAAMzL,SAAS,EAAGyW,GAAa,CACjG3K,MAAM,MAEC,OAASL,GACX2I,EAAUyD,GAAW,OAASpM,GAAQgL,GACpChL,aAAiBmI,KAAOpa,MAAM0W,QAAQzE,GAvDnD,SAAwBoM,EAAW3I,GACjC,MAAMtI,EAAS,IAAIpN,MAAM0V,EAAOzV,QAEhC,IAAK,IAAIM,EAAI,EAAGA,EAAImV,EAAOzV,OAAQM,IAAK,CACtC,MAAMiI,EAAMkN,EAAOnV,GAEnB,IAAI,OAAY8d,EAAU7V,IACxB,MAAM,IAAInE,MAAM,qBAAqBmE,6BAA+BmN,OAAOE,KAAKwI,GAAW/M,KAAK,SAGlGlE,EAAO7M,GAAKiI,EAGd,OAAO4E,EA4CEuR,CAAeN,EADRre,MAAM0W,QAAQzE,GAASA,EAAQ,IAAIA,EAAMyD,WAIlD6I,EAAgBF,EAAWpM,GAU7B,MAAM2M,UAAiBxE,IAC5B,GACA,GAEAhb,YAAYmR,EAAU8N,EAAWpM,EAAOW,EAAY,GAClDpC,MAAMoK,EAAUyD,EAAWpM,EAAOW,IAClCrT,KAAKgR,SAAWA,EAChBhR,MAAK,EAAW8e,EAChB9e,MAAK,EAAcqT,EAAY,EAGjCpT,YAAYkW,EAAQ9C,GAClB,MAAMiD,EAAOF,OAAOE,KAAKH,GACnB0B,EAAS,IAAIpX,MAAM6V,EAAK5V,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAC/B6W,EAAO7W,GAAK,MAAK,QAAiBsV,EAAKtV,MAGzC,OAAO,cAAcqe,EACnBxf,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAUmF,EAAQzD,EAAOW,IAC/B,OAAiBrT,KAAM6X,GAAQ,CAACC,EAAG9W,IAAMhB,KAAKub,QAAQhJ,SAAS+D,EAAKtV,QAUtEkQ,oBACF,OAAOlR,MAAK,EAOV0J,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAqB,IAAdrR,KAAKsb,KAOVC,cACF,MAAO,IAAItK,MAAMkF,UAOfmJ,mBACF,OAAOT,EAAU7e,MAAK,EAAUA,KAAKub,SAOvCvY,IAAMiG,IAIJ,GAAIjJ,MAAK,IAAY,OAAYA,MAAK,EAASiJ,IAC7C,MAAM,IAAInE,MAAM,qBAAqBmE,aAIvC,OADAgI,MAAMjO,IAAIiG,GACHjJ,MAMTsR,GAAG9P,GACD,OAAIf,MAAM0W,QAAQ3V,IAET,OAAaxB,KAAKub,QAAQgE,OAAQ/d,EAAM+d,QACtC/d,aAAiBqZ,IACnB7a,KAAKsR,GAAG,IAAI9P,EAAM2U,eAChB,OAAS3U,MAAU,OAAKA,KAC1BxB,KAAKsf,aAAahO,IAAG,OAAO9P,IAUvC+P,UACE,MAAO,CACLG,MAAO,CAAC1R,KAAKoR,UAQjBrG,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKub,QAOdxG,WACE,OAAO/U,KAAKsf,aAAavK,WAO3B/B,YACE,OAAO,OAAU,CACfwM,KAAMxf,MAAK,IAQfqN,WACE,MAAO,IAAIrN,KAAKub,QAAQxJ,KAAK,SAS/BX,MAAMY,GACJ,OAAO,OAAQhS,KAAKsf,aAAc,CAChCjM,UAA8B,EAAnBrT,MAAK,EAChB+S,MAAM,uOC3PZ,SAASqC,EAAkBvR,GACzB,OAAOA,EAyEF,MAAM4b,UAAelD,IAC1B,GACA,GAEA1c,YAAYmR,EAAU+F,EAAOrE,EAAOgN,EAAU,IAAInD,KAAO,WACvDhH,EAAU,cACVC,EAAgBJ,GACd,IACF,MAAMuK,EAAUpK,GAAcC,GAAc,OAAaxE,EAAU+F,KAC5DU,EAAS/B,IAAiB,OAAMhD,KAAU,QAAMA,IAAS,QAAgB1B,EAAU,IAAIvQ,MAAMkf,EAAQ,GAAGjf,SAAS,OAASgS,GAAQiN,GAAWjN,aAAiB+M,EAAS,CAAC/M,EAAO,GA7E1L,SAAgC1B,GAAW+F,EAAOT,GAAO5D,EAAOgN,GAC9D,IAAIE,EACJ,MAAMC,EAAcpf,MAAM0W,QAAQzE,GAC5BoN,EAAYpN,aAAiB6J,IAEnC,KAAKsD,GAAgBC,IAAc,OAASpN,IAC1C,MAAM,IAAI5N,MAAM,gCAA+B,OAAU4N,qBAAyBA,8CAC7E,GAAImN,GAAenN,EAAMhS,SAAW4V,EAAK5V,OAC9C,MAAM,IAAIoE,MAAM,0BAAyB,OAAU4N,sCAA0C4D,EAAKvE,KAAK,SAGzG,MAAM0D,EAAM,IAAIhV,MAAM6V,EAAK5V,QAE3B,IAAK,IAAIM,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAAK,CACpC,MAAMiI,EAAMqN,EAAKtV,GACX+e,EAAUL,EAAQza,IAAIgE,IAAQA,EAC9BqM,EAAOyB,EAAM/V,GACnB,IAAIgf,EAEJ,IACE,GAAIH,EACFG,EAAStN,EAAM1R,QACV,GAAI8e,EACTE,EAASD,GAAWrN,EAAMzN,IAAI8a,QAI9B,GAFAC,EAASD,GAAWrN,EAAMqN,IAEtB,OAAYC,GAAS,CACvB,IAAI,OAAYJ,GAAU,CACxB,MAAMrI,EAAUnB,OAAOmB,QAAQ7E,GAC/BkN,EAAU,GAEV,IAAK,IAAIK,EAAI,EAAGA,EAAI1I,EAAQ7W,OAAQuf,IAClCL,GAAQ,QAAgBrI,EAAQ0I,GAAG,KAAO1I,EAAQ0I,GAAG,GAIzDD,EAASD,GAAWH,EAAQG,GAIhCtK,EAAIzU,GAAK,CAACiI,EAAK+W,aAAkB1K,EAAO0K,EAAS,IAAI1K,EAAKtE,EAAUgP,IACpE,MAAOhW,GACP,IAAI4K,EAAOU,EAAKtJ,KAEhB,IACE4I,EAAO,IAAIU,EAAKtE,GAAUgC,YAC1B,MAAOhJ,IAGT,MAAM,IAAIlF,MAAM,qBAAqBib,MAAYnL,OAAU5K,EAAM6M,YAIrE,MAAO,CAACpB,EAAK,GAuBgLyK,CAAuBlP,EAAU2O,EAASjN,GAAS,GAAIgN,GAClPzO,MAAMwG,GACNzX,KAAK8S,iBAAmB4C,EACxB1V,KAAKgR,SAAWA,EAChBhR,MAAK,EAAW0f,EAChB1f,MAAK,EAAS2f,EAGhB1f,YAAY8W,EAAO2I,GACjB,MAAMpJ,EAAOF,OAAOE,KAAKS,GACzB,IAAIxB,EAEJ,MAAMC,EAAgB3R,GAAK0R,EAAa1R,EAExC,OAAO,cAAc4b,EACnB5f,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU+F,EAAOrE,EAAOgN,EAAS,CACrCnK,WAAAA,EACAC,cAAAA,KAEF,OAAiBxV,KAAMsW,GAAMhI,GAAKtO,KAAKiF,IAAIqJ,OAU7C4J,cACF,OAAOlY,MAAK,EAAO,GAGrBse,KAAKrV,GACH,OAAOjJ,KAAKiF,IAAIgE,GAOdoI,cACF,IAAK,MAAMjE,KAAKpN,KAAKmW,SACnB,IAAK/I,EAAEiE,QACL,OAAO,EAIX,OAAO,EAOLiE,WACF,MAAMzH,EAAS,IACRkJ,EAAOT,GAAQtW,MAAK,EAE3B,IAAK,IAAIgB,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAC/B6M,EAAOyI,EAAKtV,IAAM,IAAI+V,EAAM/V,GAAGhB,KAAKgR,UAAUgC,YAGhD,OAAOnF,EAOLqD,oBACF,IAAIC,EAAQ,EAEZ,IAAK,MAAM/D,KAAKpN,KAAKmW,SACnBhF,GAAS/D,EAAE8D,cAGb,OAAOC,EAOLzH,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAOjCE,GAAG9P,GACD,OAAO,OAAWxB,KAAMwB,GAQ1ByD,IAAI+G,GACF,OAAOiF,MAAMhM,IAAI+G,GAOnBmU,WAAW9J,GACT,OAAOrW,KAAK2R,UAAU0E,GAOxB9E,QAAQS,GACN,MAAMR,EAAQ,IAAI/Q,MAElB,IAAK,MAAO6N,EAAGlB,KAAMpN,KAAKuX,UACxB/F,EAAM9M,KAAK,IAAK0I,EAAEmE,SAASS,IAAU,OAAUA,GAAUA,EAASA,EAAO1D,IACvEtC,MAAM,QAAgBsC,KAI1B,MAAO,CACLkD,MAAAA,GAQJG,UACE,MAAO,IAAI3R,KAAKmW,UAOlBpL,QACE,OAAO,OAAS/K,KAAKoR,SAOvBQ,QAAQC,GACN,MAAM2J,EAAO,GAEb,IAAK,MAAOlN,EAAGlB,KAAMpN,KAAKuX,UACxBiE,EAAKlN,GAAKlB,GAAKA,EAAEwE,QAAQC,GAG3B,OAAO2J,EAOT1J,SACE,MAAM0J,EAAO,GAEb,IAAK,MAAOlN,EAAGlB,KAAMpN,KAAKuX,UAExBiE,EADgBxb,MAAK,EAASiF,IAAIqJ,IAAMA,GACxBlB,GAAKA,EAAE0E,SAGzB,OAAO0J,EAOTxI,YACE,OAAO,QAAU,OAAWhT,KAAKgR,SAAUhR,MAAK,IAOlDqN,WACE,OAAO,OAAUrN,KAAK8R,UAQxBV,MAAMY,GACJ,MAAMC,EAAU,GAEhB,IAAK,MAAO3D,EAAGlB,KAAMpN,KAAKuX,UACpBnK,IAAK,OAAWA,EAAEgE,QACpBa,EAAQvN,KAAK0I,EAAEgE,OAAOY,IAAU,OAAUA,GAAUA,EAASA,EAAO1D,KAIxE,OAAO,OAAgB2D,iLC1PpB,MAAMmO,UAAaC,OACxB,GAAY,KAEZxgB,YAAYmR,EAAU0B,GACpB,MAAOzG,EAAKyJ,GA1ChB,SAAoBhD,GAClB,IAAI,OAAMA,GAAQ,CAChB,IAAKA,EAAMhS,OACT,MAAO,CAAC,GAAI,GAKd,GAAIgS,aAAiB,IACnB,MAAO,EAAC,OAAYA,GAAQ,GAG9B,MAAOjN,EAAQ/E,IAAU,OAAkBgS,GACrCvB,EAAQ1L,EAAS/E,EAEvB,GAAIA,EAlBW,OAmBb,MAAM,IAAIoE,MAAM,gBAAgBpE,EAAO2M,6BAClC,GAAI8D,EAAQuB,EAAMhS,OACvB,MAAM,IAAIoE,MAAM,gEAAgEqM,YAAgBuB,EAAMhS,UAGxG,MAAO,EAAC,OAAYgS,EAAMzL,SAASxB,EAAQ0L,IAASA,GAC/C,OAAI,QAAMuB,GACR,EAAC,QAAY,OAASA,IAAS,GAGjC,CAACA,EAAQA,EAAMrF,WAAa,GAAI,GAgBRiT,CAAW5N,GACxCzB,MAAMhF,GACNjM,KAAKgR,SAAWA,EAChBhR,KAAK8S,iBAAmB4C,EAOtBxE,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOlBgJ,WACF,OAAO1J,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BC,cACF,OAAuB,IAAhBrR,KAAKU,OAOVA,aAEF,OAAOuQ,MAAMvQ,OAOf4Q,GAAG9P,GACD,SAAO,OAASA,IAASxB,KAAKqN,aAAe7L,EAAM6L,WAOrDkE,UACE,MAAMmB,GAAQ,OAAYzB,MAAM5D,YAChC,MAAO,CACLqE,MAAOgB,EAAMhS,OAAS,EAAC,OAAagS,EAAMhS,QAASgS,GAAS,EAAC,OAAaA,EAAMhS,UAQpF8c,YAAY+C,GACVvgB,MAAK,EAAYugB,EAOnBxV,QAGE,OAAO,OAAS/K,KAAKoR,OAAM,IAO7BQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKqN,WAOd2F,YACE,MAAO,OAOT3F,WACE,OAAOrN,MAAK,GAAaiR,MAAM5D,WAQjC+D,MAAMY,GAGJ,MAAMC,GAAU,OAAYhB,MAAM5D,YAClC,OAAO2E,EAASC,GAAU,OAAiBA,kEC7JxC,MAAMuO,UAAa,SAAS,MAEjCC,UAAY,qECFP,MAAMC,UAAY,SAAS,KAEhCD,UAAY,oECFP,MAAME,UAAa,SAAS,MAEjCF,UAAY,qECFP,MAAMG,UAAY,SAAS,KAEhCH,UAAY,oECFP,MAAMI,UAAY,SAAS,KAEhCJ,UAAY,qECFP,MAAMK,UAAW,SAAS,IAE/BL,UAAY,oECFP,MAAMM,UAAa,SAAU,MAElCC,WAAa,sECFR,MAAMC,UAAY,SAAU,KAEjCD,WAAa,qECFR,MAAME,UAAa,SAAU,MAElCF,WAAa,sECFR,MAAMG,UAAY,SAAU,KAEjCH,WAAa,qECFR,MAAMI,UAAY,SAAU,KAEjCJ,WAAa,sECFR,MAAMK,UAAW,SAAU,IAEhCL,WAAa,mECAR,MAAMM,UAAc,IACzBzhB,YAAYmR,EAAU0B,GAEpB,MADAzB,MAAMD,EAAU0B,GACV,IAAI5N,MAAM,0RCRb,SAASyc,EAAaziB,EAAGC,GAC9B,QAAI0B,MAAM0W,QAAQpY,IACTD,EAAE4B,SAAW3B,EAAE2B,SAAU,OAAY5B,EAAE6V,MAAK,CAACvH,EAAGiJ,KAAU,OAAMjJ,IAAMA,EAAEkE,GAAGvS,EAAEsX,IAAUjJ,IAAMrO,EAAEsX,0FCK1G,SAASmL,EAAgB1iB,EAAGC,GAE1B,OAAOD,EAAEwc,OAASvc,EAAE2B,SAAW3B,EAAE0T,MAAKwN,IAAKwB,OAN3B/O,EAMoCuN,GAL5Cxf,MAAM0W,QAAQzE,IAA2B,IAAjBA,EAAMhS,QALxC,SAAqB5B,EAAGC,GACtB,OAAO,OAAYD,MAAO,OAAMA,IAAMA,EAAEwS,GAAGvS,GAAKD,IAAMC,GASI2iB,CAAY5iB,EAAEmG,IAAIgb,EAAE,IAAKA,EAAE,IANvF,IAAkBvN,KAWX,SAASiP,EAAW7iB,EAAGC,GAC5B,OAAI0B,MAAM0W,QAAQpY,GACTyiB,EAAgB1iB,EAAGC,GACjBA,aAAawd,IACfiF,EAAgB1iB,EAAG,IAAIC,EAAEwY,eACvB,OAASxY,IACXyiB,EAAgB1iB,EAAGsX,OAAOmB,QAAQxY,kECtB7C,SAAS6iB,EAAgB9iB,EAAGC,GAE1B,OAAOD,EAAEwc,OAASvc,EAAE2B,SAAW3B,EAAE0T,MAAKwN,IAAMnhB,EAAE+iB,IAAI5B,KAK7C,SAAS6B,EAAWhjB,EAAGC,GAC5B,OAAI0B,MAAM0W,QAAQpY,GACT6iB,EAAgB9iB,EAAGC,GACjBA,aAAa8b,IACf+G,EAAgB9iB,EAAG,IAAIC,EAAEoX,cACvB,OAASpX,IACX6iB,EAAgB9iB,EAAGsX,OAAOD,OAAOpX,sFCZ5C,SAASgjB,EAAc/Q,GAAU,QAC/B6F,GACCa,EAAK1W,EAAGmZ,EAAO7E,EAAMrM,GACtB,IAAI2L,EAAO,GAEX,IACEA,EAAO,KAAK,IAAIU,EAAKtE,GAAUgC,cAC/B,OAGF,MAAO,yBAAwB,OAAS0E,EAAIzQ,SAAS,EAAG,QAAQgC,EAAM,OAAOA,IAAQ,aAAajI,KAAKmZ,KAASvF,OAAUiC,IAcrH,SAASoG,EAAUjM,EAAUnD,EAAQ6J,GAAMX,EAAOT,IACvD,MAAM6D,EAAQtM,EAAOnN,OACrB,IAAI+E,EAAS,EACTzE,EAAI,EAER,IACE,KAAOA,EAAImZ,GAAO,CAChB,MAAMzH,EAAQ,IAAIqE,EAAM/V,GAAGgQ,EAAU0G,EAAIzQ,SAASxB,IAClDA,GAAUiN,EAAMI,kBAAoBJ,EAAMxB,cAC1CrD,EAAO7M,GAAK0R,EACZ1R,KAEF,MAAOgJ,GACP,MAAM,IAAIlF,MAAMid,EAAc/Q,EAAUhH,EAAO0N,EAAIzQ,SAASxB,GAASzE,EAAGmZ,EAAOpD,EAAM/V,GAAIsV,EAAKtV,KAGhG,MAAO,CAAC6M,EAAQpI,GASX,SAASuc,EAAgBhR,EAAUnD,EAAQ6J,GAAMX,EAAOT,IAC7D,MAAM6D,EAAQtM,EAAOnN,OACrB,IAAI+E,EAAS,EACTzE,EAAI,EAER,IACE,KAAOA,EAAImZ,GAAO,CAChB,MAAMzH,EAAQ,IAAIqE,EAAM/V,GAAGgQ,EAAU0G,EAAIzQ,SAASxB,IAClDA,GAAUiN,EAAMI,kBAAoBJ,EAAMxB,cAC1CrD,EAAO7M,GAAK,CAACsV,EAAKtV,GAAI0R,GACtB1R,KAEF,MAAOgJ,GACP,MAAM,IAAIlF,MAAMid,EAAc/Q,EAAUhH,EAAO0N,EAAIzQ,SAASxB,GAASzE,EAAGmZ,EAAOpD,EAAM/V,GAAIsV,EAAKtV,KAGhG,MAAO,CAAC6M,EAAQpI,GASX,SAASwc,EAAajR,EAAUnD,EAAQ6J,EAAKwC,EAAS5E,GAC3D,MAAM6E,EAAQtM,EAAOnN,OACrB,IAAI+E,EAASyU,EACTlZ,EAAI,EAER,IACE,KAAOA,EAAImZ,GAAO,CAChB,MAAMzH,EAAQ,IAAI4C,EAAKtE,EAAU0G,EAAIzQ,SAASxB,IAC9CA,GAAUiN,EAAMI,kBAAoBJ,EAAMxB,cAC1CrD,EAAO7M,GAAK0R,EACZ1R,KAEF,MAAOgJ,GACP,MAAM,IAAIlF,MAAMid,EAAc/Q,EAAUhH,EAAO0N,EAAIzQ,SAASxB,GAASzE,EAAGmZ,EAAO7E,IAGjF,MAAO,CAAC7P,EAAQA,EAASyU,kECxFpB,SAASgI,EAAalR,EAAUmR,GACrC,MAAM5K,EAAUnB,OAAOmB,QAAQ4K,GACzBhI,EAAQ5C,EAAQ7W,OAChBsa,EAAS,CAAC,IAAIva,MAAM0Z,GAAQ,IAAI1Z,MAAM0Z,IAE5C,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAOnZ,IACzBga,EAAO,GAAGha,GAAKuW,EAAQvW,GAAG,GAC1Bga,EAAO,GAAGha,IAAK,OAAkBgQ,EAAUuG,EAAQvW,GAAG,IAGxD,OAAOga,mDCfT,MAAMoH,EAAU,CAAC,WAAY,WAAY,UAAW,OAC9CC,EAAgBD,EAAQjQ,OAAO,CAAC,UAAW,iBAAkB,MAAO,UAAW,QAAS,iBAAkB,SAAU,SAAU,OAAQ,oBAAqB,kBAC3JmQ,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1CC,EAAW,CACjBC,EAAM,gEAAiE,yBAAyB,GAAQA,EAAM,YAAa,QAAQ,GAiD1H9P,IACL,GAAIA,EAAMH,SAAS,kBACjB,IAAK,IAAI8D,EAAQ,EAAGA,EAAQ3D,EAAMhS,OAAQ2V,IACxC,GAAqB,MAAjB3D,EAAM2D,GAAgB,CACxB,MAAMzD,EAAM6P,EAAY/P,EAAO2D,EAAQ,GAAK,GAEL,mBAAnC3D,EAAMgQ,UAAU9P,EAAKA,EAAM,MAC7BF,EAAQ,WAAWA,EAAMgQ,UAAUrM,EAAQ,EAAGzD,OAMtD,OAAOF,GA5DXiQ,EAAiB,WAAW,GAC5BA,EAAiB,QAAQ,GA+JlB,WACL,MAAMC,EAAQ,MACRC,EAAQ,cACRC,EAAQ,uBACRC,EAAQ,wBACRC,EAAQ,0BACRC,EAAQ,UACd,OAAOvQ,IACLkQ,EAAMM,UAAY,EAClBL,EAAMK,UAAY,EAClBJ,EAAMI,UAAY,EAClBH,EAAMG,UAAY,EAClBF,EAAME,UAAY,EAClBD,EAAMC,UAAY,EACXxQ,EACNyQ,QAAQP,EAAO,IACfO,QAAQN,EAAO,IACfM,QAAQL,EAAO,IACfK,QAAQJ,EAAO,IACfI,QAAQH,EAAO,UACfG,QAAQF,EAAO,KAlLpBG,GAwJO,WACL,MAAMC,EAAWjW,GAAK,IAAIA,KAAKA,KAE/B,OAAOsF,GAAS4Q,EAAe5Q,EAAO,UAAW2Q,GA1JnDE,GAqLO,SAAoB/Q,GACzB,MAAM6Q,EAAWjW,GAAKA,EAEtB,OAAOsF,GAAS4Q,EAAe5Q,EAvLtB,OAuLoC2Q,GAvL/CG,GAiIS9Q,IACL,IAAK,IAAI2D,EAAQ,EAAGA,EAAQ3D,EAAMhS,OAAQ2V,IACxC,GAAqB,MAAjB3D,EAAM2D,KAEIgM,EAAc1N,MAAK8O,IAC7B,MAAM9Q,EAAQ0D,EAAQoN,EAAI/iB,OAC1B,OAAOiS,GAAS,GAAKD,EAAMgQ,UAAU/P,EAAO0D,KAAWoN,IAC7C,IAAV9Q,GAAe2P,EAAc/P,SAASG,EAAMC,EAAQ,QAG5C,CACR,MAAMC,EAAM6P,EAAY/P,EAAO2D,EAAQ,GACvC3D,EAAQ,GAAGA,EAAMgQ,UAAU,EAAGrM,KAAS3D,EAAMgQ,UAAU9P,EAAM,KAKnE,OAAOF,GAhJX8P,EAAM,SAAU,QAChBA,EAAM,UAAW,SAAUA,EAAM,YAAa,SAAUA,EAAM,mBAAoB,SAClFA,EAAM,aAAc,WACpBA,EAAM,iBAAkB,gBAAiBA,EAAM,iBAAkB,gBACjEA,EAAM,mBAAoB,sBAqDnB,WACL,MAAMI,EAAQ,OACRC,EAAQ,cACd,OAAOnQ,IACLkQ,EAAMM,UAAY,EACXxQ,EACNyQ,QAAQP,EAAO,KACfO,QAAQN,EAAO,OA3DpBa,GAmGShR,IACL,IAAI2D,EAAQ,EAEZ,MAAkB,IAAXA,GAGL,GAFAA,EAAQ3D,EAAMkE,QAAQ,MAER,IAAVP,EACF3D,EAAQA,EAAMgQ,UAAU,QACnB,IAAe,IAAXrM,EAAc,CACvB,IAAI1D,EAAQ0D,EAEZ,MAAkB,IAAX1D,IAAiB2P,EAAc/P,SAASG,EAAMC,KACnDA,IAGFD,EAAQ,GAAGA,EAAMgQ,UAAU,EAAG/P,EAAQ,KAAKD,EAAMgQ,UAAUrM,EAAQ,KAIvE,OAAO3D,GAjHFA,GAASA,EAAMiR,QAGjB,SAASlB,EAAY/P,EAAOC,GACjC,IAAIiR,EAAQ,EAEZ,IAAK,IAAIvN,EAAQ1D,EAAO0D,EAAQ3D,EAAMhS,OAAQ2V,IAC5C,GAAqB,MAAjB3D,EAAM2D,GAAgB,CACxB,IAAKuN,EACH,OAAOvN,EAGTuN,QAC0B,MAAjBlR,EAAM2D,IACfuN,IAIJ,MAAM,IAAI9e,MAAM,0CAA0C4N,aAAiBC,MAEtE,SAAS6P,EAAMqB,EAAKC,EAAMC,GAAa,GAC5C,MAAM5W,EAAO,IAAI6W,OAAO,KAAKH,KAAOvB,EAAcnhB,KAAIsiB,GAAO,KAAKA,IAAMI,MAAO9R,KAAK,QAAS,KAEvFkS,EAAKJ,IACT1W,EAAK+V,UAAY,EACVa,GAAczB,EAAc/P,SAASsR,EAAI,IAAM,GAAGA,EAAI,KAAKC,IAASA,GAG7E,OAAOpR,GAASA,EAAMyQ,QAAQhW,EAAM8W,GA8BtC,SAASX,EAAe5Q,EAAOwR,EAASb,GACtC,IAAIhN,GAAS,EAEb,OAAa,CAGX,GAFAA,EAAQ3D,EAAMkE,QAAQsN,EAAS7N,EAAQ,IAExB,IAAXA,EACF,OAAO3D,EAGT,MAAMC,EAAQ0D,EAAQ6N,EAAQxjB,OACxBkS,EAAM6P,EAAY/P,EAAOC,GAC/BD,EAAQ,GAAGA,EAAMgQ,UAAU,EAAGrM,KAASgN,EAAS3Q,EAAMgQ,UAAU/P,EAAOC,MAAQF,EAAMgQ,UAAU9P,EAAM,MAKlG,SAAS+P,EAAiB/N,EAAMuP,GACrC,OAAOzR,IACL,IAAK,IAAI1R,EAAI,EAAGA,EAAIohB,EAAQ1hB,OAAQM,IAAK,CACvC,MAAMojB,EAAMhC,EAAQphB,GACpB0R,EAAQ4Q,EAAe5Q,EAAO,GAAGkC,IAAOwP,MAAQhX,IAC9C,MAAMiX,EAAQjX,EAAE0O,MAAM,KAAK3a,KAAI0I,GAAKA,EAAE8Z,SAAQvR,QAAOvI,GAAKA,IAM1D,OAJIsa,GACFE,EAAMC,MAGD,GAAGF,KAAOC,EAAMtS,KAAK,WAIhC,OAAOW,GAmFX,MAAM6R,EAAc,IAAIhI,IACjB,SAASiI,EAAS9R,GACvB,MAAM+R,EAAa/R,EAAMrF,WACnBqX,EAAWH,EAAYtf,IAAIwf,GAEjC,GAAIC,EACF,OAAOA,EAGT,IAAI7W,EAAS4W,EAEb,IAAK,IAAIzjB,EAAI,EAAGA,EAAIuhB,EAAS7hB,OAAQM,IACnC6M,EAAS0U,EAASvhB,GAAG6M,GAIvB,OADA0W,EAAYpf,IAAIsf,EAAY5W,GACrBA,iICjNT,SAAS8W,EAAYC,GACnB,OAAOA,aAAe3X,YAAcxM,MAAM0W,QAAQyN,GAKpD,SAASC,EAAQD,GACf,OAAO,OAAWA,GAAOA,EAAIxT,OAK/B,SAAS0T,EAAOF,GACd,OAAOC,EAAQD,KAAQ,OAASA,EAAIvO,QAAUwO,EAAQD,EAAIlS,OAK5D,SAASqS,EAAaH,GACpB,OAAO,OAASA,KAAQ,OAAKA,KAAQ,OAASA,GA2BzC,SAASI,EAAQlmB,EAAGC,GACzB,GAAIgmB,EAAajmB,IAAMimB,EAAahmB,GAClC,OAAO,OAAOD,GAAGmmB,KAAI,OAAOlmB,IACvB,GAAID,aAAayd,KAAOxd,aAAawd,IAC1C,OAAOyI,EAAQvkB,MAAM0M,KAAKrO,EAAEqX,UAAW1V,MAAM0M,KAAKpO,EAAEoX,WAC/C,GAAI2O,EAAOhmB,IAAMgmB,EAAO/lB,GAC7B,OAAOimB,EAAQlmB,EAAEuX,MAAOtX,EAAEsX,QAAU2O,EAAQlmB,EAAE4T,MAAO3T,EAAE2T,OAClD,GAAIiS,EAAY7lB,IAAM6lB,EAAY5lB,GACvC,OA9BJ,SAAmBD,EAAGC,GAEpB,IAAImmB,EAAU,EACd,MAAMC,EAASrf,KAAKsf,IAAItmB,EAAE4B,OAAQ3B,EAAE2B,QAEpC,IAAK,IAAIM,EAAI,EAAGA,EAAImkB,IAAUnkB,EAG5B,GAFAkkB,EAAUF,EAAQlmB,EAAEkC,GAAIjC,EAAEiC,IAEV,IAAZkkB,EACF,OAAOA,EAIX,OAAOpmB,EAAE4B,OAAS3B,EAAE2B,OAiBX2kB,CAAUvmB,EAAGC,GACf,GAAI8lB,EAAQ/lB,IAAM+lB,EAAQ9lB,GAE/B,OAAOimB,EAAQlmB,EAAEsS,OAAM,GAAOrS,EAAEqS,OAAM,IAGxC,MAAM,IAAItM,MAAM,4CAA2C,OAAUhG,qBAAqBA,WAAU,OAAUC,qBAAqBA,MAE9H,SAASumB,EAAQngB,GACtB,OAAO,IAAI0V,IAAIpa,MAAM0M,KAAKhI,GAAKoa,KAAKyF,IAE/B,SAASO,EAAQpkB,GACtB,OAAO,IAAIob,IAAI9b,MAAM0M,KAAKhM,EAAIoW,WAAWgI,MAAK,EAAEiG,IAAQC,KAAUT,EAAQQ,EAAMC,qECpE3E,SAASC,EAAkB1U,EAAU4D,GAC1C,OAAO,OAASA,GAAQ5D,EAASmE,kBAAkBP,GAAQA,gCCFtD,SAAS+Q,EAAW3U,GAAW+F,EAAOT,IAC3C,MAAMzI,EAAS,GAEf,IAAK,IAAI7M,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAC/B6M,EAAOyI,EAAKtV,IAAMgQ,EAAS6E,aAAakB,EAAM/V,KAAO,IAAI+V,EAAM/V,GAAGgQ,GAAUgC,YAG9E,OAAOnF,iFCNF,SAAS+X,EAAMC,GAEpB,OAAO,OAAWA,EAAEvU,4VCEtB,SAASwU,GAAe,WACtBC,EAAU,KACVnR,IAEA,OAAOmR,GAAcnR,EAGvB,SAASoR,EAAetT,GACtB,IAAKjS,MAAM0W,QAAQzE,EAAMuT,KACvB,MAAM,IAAInhB,MAAM,qCAAoC,OAAU4N,MAGhE,OAAOA,EAAMuT,IAWf,SAASC,EAAWxT,GAClB,OAAOoT,EATT,SAAmBpT,GACjB,IAAKA,EAAMuT,KAAOxlB,MAAM0W,QAAQzE,EAAMuT,KACpC,MAAM,IAAInhB,MAAM,mCAAkC,OAAU4N,MAG9D,OAAOA,EAAMuT,IAISE,CAAUzT,IAIlC,SAAS0T,EAAgB1T,GACvB,MAAM2T,EAAOL,EAAetT,GACtBvR,EAAM,GAEZ,IAAK,IAAIH,EAAI,EAAGA,EAAIqlB,EAAK3lB,OAAQM,IAC/BG,EAAIklB,EAAKrlB,GAAGgL,MAAQ8Z,EAAeO,EAAKrlB,IAG1C,OAAOG,EAIT,SAASmlB,EAAkB5T,GACzB,OAAOsT,EAAetT,GAAOvR,IAAI2kB,GAGnC,SAASS,EAAUC,GAAO,YACxBC,EAAW,OACX/lB,IAEA,KAAK,OAASA,GACZ,MAAM,IAAIoE,MAAM,sCAAsC2hB,GAAeD,EAAM3mB,YAAYmM,mBAGzF,OAAOwa,EAAME,KAAKhmB,EAAQ+lB,GAG5B,SAASE,EAAcH,EAAO9T,GAC5B,MAAOgI,EAASkM,GAAaN,EAAkB5T,GAC/C,OAAO8T,EAAME,KAAKhM,EAASkM,GAG7B,SAASC,EAAcL,EAAO9T,GAC5B,OAAO8T,EAAME,KAAKR,EAAWxT,IAG/B,MAAMoU,EAAc,CAClB,CAAC,cAAuB,CAAC9V,EAAU0B,IAAUiU,EAAc,IAAUjU,GACrE,CAAC,cAAuB,CAAC1B,EAAU0B,IAAUmU,EAAc,IAAUnU,GACrE,CAAC,aAAsB,CAAC1B,EAAU0B,IAAUmU,EAAc,IAASnU,GACnE,CAAC,oBAA6B,CAAC1B,EAAU0B,IAAU,SAAoBA,EAAM+T,aAAe/T,EAAMkC,MAClG,CAAC,UAAmB,CAAC5D,EAAU0B,KAC7B,MAAM2T,EAAOL,EAAetT,GAC5B,OAAO,SAAU2T,EAAKhP,OAAM,EAC1BzC,KAAAA,KACa,SAATA,IAAmByR,EAAKxlB,QAAO,CAACwX,GACpChC,MAAAA,EACArK,KAAAA,GACCmO,KACD9B,EAAIrM,GAAQqK,GAAS8D,EACd9B,IACN,IAAM+N,EAAgB1T,KAE3B,CAAC,aAAsB,CAAC1B,EAAU0B,IAAUiU,EAAc,IAASjU,GACnE,CAAC,SAAkB,CAAC1B,EAAU0B,IAAU6T,EAAU,IAAK7T,GAEvD,CAAC,aAAsB,CAAC1B,EAAU0B,KAChC,MAAMkC,EAAO,UAAUsR,EAAWxT,MAE5B8T,EAAQ,SAAY,CACxBO,SAAUnS,EACVoS,KAAMpS,IAQR,OALA4R,EAAM/J,UAAUzJ,UAAY,WAE1B,MAAO,WAAWhT,KAAKgnB,KAAKhU,WAAU,OAGjCwT,GAGT,CAAC,UAAmB,CAACxV,EAAU8G,IAAM,IACrC,CAAC,YAAqB,CAAC9G,EAAU0B,KAC/B,IAAKA,EAAMuT,KAAOxlB,MAAM0W,QAAQzE,EAAMuT,KACpC,MAAM,IAAInhB,MAAM,wCAOlB,OAAO+hB,EAAc,IAAQnU,IAE/B,CAAC,WAAoB,CAAC1B,EAAU0B,IAAU1B,EAASiW,aAAavU,EAAMkC,MACtE,CAAC,WAAoB,CAAC5D,EAAU0B,IAAUmU,EAAc,IAAOnU,GAC/D,CAAC,oBAA6B,CAAC1B,EAAU0B,IAAUmU,EAAc,IAAgBnU,GACjF,CAAC,YAAqB,CAAC1B,EAAU0B,KAC/B,MAAOwG,EAAIC,GAAOmN,EAAkB5T,GAEpC,OAAO,SAAY,CACjByG,IAAAA,EACAD,GAAAA,KAGJ,CAAC,SAAkB,CAAClI,EAAU0B,IAAU,SAAcsT,EAAetT,GAAO7R,QAAO,CAACgN,GAClFwI,MAAAA,EACArK,KAAAA,MAEA6B,EAAO7B,GAAQqK,EACRxI,IACN,IAAK6E,EAAMhS,QACd,CAAC,QAAiB,CAACsQ,EAAU0B,IAAUwU,EAAalW,EAAUA,EAASmW,OAAOC,WAAW1U,EAAMkC,OAC/F,CAAC,YAAqB,CAAC5D,EAAU0B,IAAU,SAAY0T,EAAgB1T,GAAQA,EAAM8P,OACrF,CAAC,WAAoB,CAACxR,EAAU0B,IAAU,SAAW4T,EAAkB5T,IACvE,CAAC,UAAmB,CAAC1B,EAAU0B,IAAU6T,EAAU,IAAM7T,GACzD,CAAC,SAAkB,CAAC1B,GAClBiV,IAAAA,MAEA,IAAKA,GAAOxlB,MAAM0W,QAAQ8O,GACxB,MAAM,IAAInhB,MAAM,wCAGlB,MAAoB,OAAbmhB,EAAIrR,KAAgB,IAAQ,SAASkR,EAAeG,KAE7D,CAAC,cAAuB,CAACjV,GACvByV,YAAAA,EACA/lB,OAAAA,EACAulB,IAAAA,MAEA,KAAK,OAASvlB,KAAYulB,GAAOxlB,MAAM0W,QAAQ8O,GAC7C,MAAM,IAAInhB,MAAM,uDAGlB,MAAoB,OAAbmhB,EAAIrR,KAAgB,SAAuB,EAATlU,EAAY+lB,GAAe,SAAcX,EAAeG,GAAMvlB,IAEzG,CAAC,uBAAgC,CAACsQ,EAAU0B,IAAUmU,EAAc,IAAmBnU,GACvF,CAAC,mBAA4B,CAAC1B,EAAU0B,IAAUmU,EAAc,IAAenU,IAE1E,SAAS2U,EAAmBrW,EAAUsW,GAC3C,IACE,MAAMhS,EAAOwR,EAAYQ,EAAQC,MAAMvW,EAAUsW,GAEjD,IAAKhS,EACH,MAAM,IAAIxQ,MAAM,oBAUlB,OANKwQ,EAAKkS,gBAAkBF,EAAQG,eAGlCnS,EAAKkS,eAAiBF,EAAQG,cAGzBnS,EACP,MAAOtL,GACP,MAAM,IAAIlF,MAAM,mCAAkC,OAAUwiB,OAAatd,EAAM6M,YAI5E,SAASqQ,EAAalW,EAAUsW,GACrC,OAAOtW,EAAS0W,UAAUJ,EAAQ1S,MAAM,EAAO0S,GAE1C,SAASnS,EAAkBnE,EAAU4D,GAC1C,OACE5D,EAAS0W,UAAU9S,IACnBsS,EAAalW,EAAUA,EAAS2W,aAAa/S,GAAQ5D,EAASmW,OAAOC,WAAWxS,IAAQ,OAAWA,qICxLvG,SAASgT,EAAcC,EAAS3D,GAC9B,MAAMxM,EAAMmQ,EAAQzW,QACdgD,EAAUyT,EAAQ7U,YAMxB,MAJA,OAAM0E,EAAKwM,IACX,CAAC,QAAS,OAAQ,QAAQ3R,SAAS6B,IAAY8P,EAAQxjB,SAAWmnB,EAAQnnB,QAC1EmnB,EAAQxW,SAAW6S,EAAQ7M,OAAMjK,IAAMA,KAGrC,MAAM,IAAItI,MAAM,GAAGsP,oDAAyD,OAAS8P,EAAS,SAASA,EAAQxjB,2BAA0B,OAASgX,EAAK,SAASA,EAAIhX,iBAcxK,SAASonB,EAAS9W,EAAUsE,EAAMyS,EAAS,IAAI,UAC7CC,EAAS,WACTC,EAAU,WACVC,GACE,IACF,MAAML,EAAU,IAAKI,EAAa,SAAY3S,GAAQA,GAAMtE,KAAa+W,GAOzE,OANAG,GAhBF,SAAuBL,GAAUnV,KAC3B,OAAMA,GACRkV,EAAcC,EAASnV,IACd,QAAMA,IACfkV,EAAcC,GAAS,OAASnV,IAYpByV,CAAcN,EAASE,GAEjCC,IACFH,EAAQO,cAAgBC,EAAiBrX,EAAU,OAAQ,CAACgX,KAGvDH,EAMF,SAASQ,EAAiBrX,EAAU4D,EAAMmT,EAAS,GAAIO,EAAU,IACtE,IAAI9B,EAAQ,KACR+B,EAAa,KAEjB,IAEE,OADA/B,GAAQ,QAAkBxV,EAAU4D,GAC7BkT,EAAS9W,EAAUwV,EAAOuB,EAAQO,GACzC,MAAOte,GACPue,EAAa,IAAIzjB,MAAM,cAAc8P,QAAW5K,EAAM6M,WAGxD,GAAI2P,GAASA,EAAMgB,eACjB,IAEE,OADAhB,GAAQ,QAAkBxV,EAAUwV,EAAMgB,gBACnCM,EAAS9W,EAAUwV,EAAOuB,EAAQO,GACzC,OAIJ,MAAMC,iCCjED,IAAIC,mBAEX,SAAWA,GACTA,EAAYA,EAAsB,SAAI,GAAK,WAC3CA,EAAYA,EAAsB,SAAI,GAAK,WAC3CA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAA4B,eAAI,IAAM,iBAClDA,EAAYA,EAAoB,OAAI,IAAM,SAC1CA,EAAYA,EAAiB,IAAI,IAAM,MACvCA,EAAYA,EAAgB,GAAI,IAAM,KACtCA,EAAYA,EAAoB,OAAI,IAAM,SAC1CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAkB,KAAI,IAAM,OACxCA,EAAYA,EAAiB,IAAI,IAAM,MACvCA,EAAYA,EAAsB,SAAI,IAAM,WAC5CA,EAAYA,EAA+B,kBAAI,IAAM,oBACrDA,EAAYA,EAA2B,cAAI,IAAM,gBAvBnD,CAwBGA,IAAgBA,EAAc,+GCvBjC,MAAMC,EAAiB/V,GAASA,EAAMrF,WAEhCqb,EAAY,CAAC,WAAY,WAAY,UAAW,UAAW,SAAU,SAAU,OAKrF,SAASC,EAAiB3X,EAAUsW,EAAS5V,GAC3C,MAAM,KACJ6V,EAAI,IACJtB,GACEqB,EAEJ,OAAQC,GACN,KAAK,aACL,KAAK,aACL,KAAK,YACL,KAAK,YACL,KAAK,YACL,KAAK,WACL,KAAK,UACL,KAAK,mBACL,KAAK,WACL,KAAK,QACL,KAAK,sBACL,KAAK,kBACH,OAvBC,SAAwB7V,EAAOF,EAAOoX,EAAYH,GACvD,MAAO,GAAG/W,IAAQF,EAAQ,KAAK/Q,MAAM0W,QAAQ3F,GAASA,EAAQ,CAACA,IAAQrQ,IAAIynB,GAAW7W,KAAK,SAAW,KAsB3F8W,CAAenX,EAAOuU,GAAK/lB,GAAK4oB,EAAc9X,EAAU9Q,KAGnE,MAAM,IAAI4E,MAAM,qBAAoB,OAAUwiB,kBAGhD,SAASyB,EAAe/X,EAAUiV,EAAK+C,EAAQC,GAC7C,MAAMC,EAAQjD,EAAI9kB,KAAI,EACpB6K,KAAAA,KACIA,IAEN,IAAKkd,EAAM7R,OAAMpY,KAAOA,IACtB,MAAM,IAAI6F,MAAM,4CAA4CokB,EAAMnX,KAAK,SAGzE,MAAMP,GAAQ,OAAa,GAAIyX,GAE/B,IAAK,IAAIjoB,EAAI,EAAGA,EAAIilB,EAAIvlB,OAAQM,IAAK,CACnC,MAAMiV,EAAMgQ,EAAIjlB,GAChBwQ,EAAMyE,EAAIjK,MAAQ8c,EAAc9X,EAAUiF,GAG5C,OAAO,OAAU+S,EAAS,CACxB1Q,MAAO9G,GACLA,GAKN,MAAM2X,EAAW,CACf,CAAC,cAAuB,CAACnY,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,YACnF,CAAC,cAAuB,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,YACnF,CAAC,aAAsB,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,WAClF,CAAC,oBAA6B,CAACtW,GAC7ByV,YAAAA,EACA2C,YAAAA,EACArD,WAAAA,KACI,kBAAkBA,GAAcU,KAAgB,OAAY2C,GAAe,UAAYpY,EAASqY,iBAAiBD,OACvH,CAAC,UAAmB,CAACpY,GACnBiV,IAAAA,MAEA,IAAKxlB,MAAM0W,QAAQ8O,GACjB,MAAM,IAAInhB,MAAM,8BAKlB,OAAOmhB,EAAI5O,OAAM,EACfzC,KAAAA,KACa,SAATA,KAAmB,OAAU,CACjC0D,MAAO2N,EAAI9kB,KAAI,EACb6K,KAAAA,GACCqK,IAAU,GAAGrK,GAAQ,QAAQqK,UAC7B0S,EAAe/X,EAAUiV,GAAK,IAErC,CAAC,aAAsB,CAACjV,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,WAClF,CAAC,SAAkB,CAACtW,GAClBtQ,OAAAA,EAAS,MACL,OAAOA,KACb,CAAC,aAAsB,CAACsQ,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,WAElF,CAAC,UAAmB,CAACtW,EAAUsW,IAAY,OAC3C,CAAC,YAAqB,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,UAEjF,CAAC,WAAoB,CAACtW,GACpByV,YAAAA,EACA7R,KAAAA,KACI6R,GAAe7R,EACrB,CAAC,WAAoB,CAAC5D,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,SAChF,CAAC,oBAA6B,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,kBACzF,CAAC,YAAqB,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,UAEjF,CAAC,SAAkB,CAACtW,GAClBtQ,OAAAA,EAAS,EACTulB,IAAAA,MAEA,IAAKxlB,MAAM0W,QAAQ8O,GACjB,MAAM,IAAInhB,MAAM,6BAGlB,OAAO,OAAU,CACf0a,KAAMyG,EAAIplB,QAAO,CAACyoB,GAChBjT,MAAAA,EACArK,KAAAA,GACCmO,KAAU,OAAamP,EAAK,CAC7B,CAAC,GAAGtd,GAAQ,UAAUqK,GAAS8D,OAAY9D,GAAS8D,KAClD,CACFoP,WAAY7oB,GAAU,OAK5B,CAAC,QAAiB,CAACsQ,GACjB+U,WAAAA,EACAnR,KAAAA,KACImR,GAAcnR,EACpB,CAAC,YAAqB,CAAC5D,GACrBwR,MAAAA,EACAyD,IAAAA,MAEA,IAAKxlB,MAAM0W,QAAQ8O,GACjB,MAAM,IAAInhB,MAAM,gCAGlB,OAAOikB,EAAe/X,EAAUiV,GAAK,EAAOzD,EAAQ,CAClDgH,OAAQ,IAAIhH,EAAMjL,WAAW1W,QAAO,CAACyoB,GAAMhb,EAAGlB,MAAO,OAAakc,EAAK,CACrE,CAAChb,GAAIlB,KACH,KACF,KAEN,CAAC,WAAoB,CAAC4D,GACpBiV,IAAAA,MAEA,IAAKxlB,MAAM0W,QAAQ8O,GACjB,MAAM,IAAInhB,MAAM,+BAGlB,MAAO,IAAImhB,EAAI9kB,KAAIyT,GAAQkU,EAAc9X,EAAU4D,KAAO7C,KAAK,SAEjE,CAAC,UAAmB,CAACf,GACnBtQ,OAAAA,EAAS,MACL,QAAQA,KACd,CAAC,SAAkB,CAACsQ,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,OAC9E,CAAC,cAAuB,CAACtW,GACvBtQ,OAAAA,EACAulB,IAAAA,MAEA,KAAK,OAASvlB,KAAYulB,GAAOxlB,MAAM0W,QAAQ8O,GAC7C,MAAM,IAAInhB,MAAM,kCAGlB,MAAO,IAAImhB,EAAIrR,QAAQlU,MAEzB,CAAC,uBAAgC,CAACsQ,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,qBAC5F,CAAC,mBAA4B,CAACtW,EAAUsW,IAAYqB,EAAiB3X,EAAUsW,EAAS,kBAG1F,SAASmC,EAAWzY,EAAUsW,EAASoC,GAAa,GAClD,OAAOA,GAAcpC,EAAQvB,WAAauB,EAAQvB,WAAaoD,EAAS7B,EAAQC,MAAMvW,EAAUsW,GAG3F,SAASwB,EAAc9X,EAAUsW,GAItC,OAAOA,EAAQb,cAAgBiC,EAAUjW,MAAKzR,GAAKsmB,EAAQb,cAAgBzlB,IAAKsmB,EAAQb,YAAcgD,EAAWzY,EAAUsW,GAEtH,SAASqC,EAAe3Y,EAAUsW,GACvC,OAAO,OAAa,GAAIA,EAAS,CAC/B1S,KAAM6U,EAAWzY,EAAUsW,GAAS,0HC9KxC,MAAMsC,EAAkB,CAAC,SAAU,aAEnC,SAASC,EAAcC,GACrB,OAAO,OAASA,GAAaA,EAAUzc,WAAaqP,KAAKqN,UAAUD,GAwIrE,SAASE,EAAatX,EAAOoF,EAAGmS,EAAS9P,GAEvC,OADAzH,EAAMuT,IAAyB,IAAnBgE,EAAQvpB,OAAe,IAAK,OAAUupB,GAAS9oB,KAAIqQ,GAAS4V,EAAW5V,EAAO,GAAI2I,KACvFzH,EAKT,SAASwX,EAAcxX,EAAOkC,EAAMkD,EAAGqS,GACrC,MAAOC,EAAW3D,GAAe7R,EAAK8N,UAAUyH,EAAMzpB,OAAS,EAAGkU,EAAKlU,OAAS,GAAGob,MAAM,KACnFpb,EAASgL,SAAS0e,EAAUzG,OAAQ,IAE1C,GAAIjjB,EAAS,MAAQA,EAAS,EAC5B,MAAM,IAAIoE,MAAM,GAAG8P,uBAA0BuV,8DAAkEzpB,KAKjH,OAFAgS,EAAM+T,YAAcA,EACpB/T,EAAMhS,OAASA,EACRgS,EAkBT,SAAS2X,EAAWzV,GAAOjC,EAAOC,IAChC,OAAOgC,EAAK8N,UAAU,EAAG/P,EAAMjS,UAAYiS,GAASiC,EAAK3J,OAAO,EAAI2H,EAAIlS,UAAYkS,EAGtF,MAAM0X,EAAmB,CAAC,CAAC,IAAK,IAAK,aAxFrC,SAAyB5X,EAAOkC,EAAMkD,EAAGqC,GACvC,MAAMoQ,EAAM3V,EAAKlU,OAAS,EAC1B,IAAI2V,GAAS,EACT7E,EAAQ,EAEZ,IAAK,IAAIxQ,EAAI,EAAGA,EAAIupB,IAAkB,IAAXlU,EAAcrV,IACvC,OAAQ4T,EAAK5T,IACX,IAAK,IAEa,IAAVwQ,IACF6E,EAAQrV,GAGV,MAGJ,IAAK,IACL,IAAK,IACL,IAAK,IACHwQ,IACA,MAEF,IAAK,IACL,IAAK,IACL,IAAK,IACHA,IAKN,IAAe,IAAX6E,EACF,MAAM,IAAIvR,MAAM,GAAG8P,wCAGrB,MAAM4V,EAAU5V,EAAK8N,UAAU,EAAGrM,IAC3B+T,EAAW3D,GAAe7R,EAAK8N,UAAUrM,EAAQ,EAAGkU,GAAKzO,MAAM,KAChEpb,EAASgL,SAAS0e,EAAUzG,OAAQ,IAE1C,GAAIjjB,EAAS,KACX,MAAM,IAAIoE,MAAM,GAAG8P,8DAMrB,OAHAlC,EAAM+T,YAAcA,EACpB/T,EAAMhS,OAASA,EACfgS,EAAMuT,IAAMmB,EAAWoD,EAAS,GAAIrQ,GAC7BzH,IA2CoE,CAAC,IAAK,IAAK,WA5GxF,SAAuBA,EAAOkC,EAAMkD,EAAGqC,GACrC,MAAMsQ,EAAS/N,KAAKC,MAAM/H,GACpB0B,EAAOF,OAAOE,KAAKmU,GAEzB,OAAInU,EAAK/D,SAAS,SAlDpB,SAAqBG,EAAOgY,EAASvQ,EAAOsN,GA0B1C,OAzBA/U,EAAM6U,KAAO,SACb7U,EAAM+U,aAAeA,EAEjBhnB,MAAM0W,QAAQuT,GAChBhY,EAAMuT,IAAMyE,EAAQvpB,KAAI,CAAC6K,EAAMqK,KAAU,CACvCA,MAAAA,EACAkR,KAAM,UACNvb,KAAAA,EACA4I,KAAM,WA3BZ,SAAoB8V,GAClB,MAAMvU,EAASC,OAAOD,OAAOuU,GAE7B,GAAIvU,EAAO1D,MAAKrF,IAAK,OAASA,KAAK,CACjC,IAAK+I,EAAOkB,OAAMjK,IAAK,OAASA,IAAMA,GAAK,GAAKA,GAAK,MACnD,MAAM,IAAItI,MAAM,0CAGlB,OAAO,EAGT,OAAO,EAkBIwS,CAAWoT,GACpBhY,EAAMuT,IAAM7P,OAAOmB,QAAQmT,GAASvpB,KAAI,EAAE6K,EAAM8d,GAAYzT,KAAU,OAAa,GAAI+Q,EAAWyC,EAAcC,GAAa,QAAS,CACpI9d,KAAAA,GACCmO,GAAQ,CACT9D,MAAAA,MAGF3D,EAAMuT,IAAM7P,OAAOmB,QAAQmT,GAASvpB,KAAI,EAAE6K,EAAMqK,MAAW,CACzDA,MAAAA,EACAkR,KAAM,UACNvb,KAAAA,EACA4I,KAAM,WAIHlC,EAyBEiY,CAAYjY,EAAO+X,EAAOnS,MAAO6B,EAAOsQ,EAAOG,WAC7CtU,EAAK/D,SAAS,QArB3B,SAAoBG,EAAOgY,EAASjD,GAUlC,OATA/U,EAAM6U,KAAO,QACb7U,EAAM+U,aAAeA,EACrB/U,EAAMhS,OAASgqB,EAAQnB,WACvB7W,EAAMuT,IAAM7P,OAAOmB,QAAQmT,GAAStY,QAAO,EAAEpG,MAAWA,EAAK6e,WAAW,OAAM1pB,KAAI,EAAE6K,EAAMqK,MAAW,CACnGA,MAAAA,EACAkR,KAAM,UACNvb,KAAAA,EACA4I,KAAM,WAEDlC,EAYEoY,CAAWpY,EAAO+X,EAAOjL,KAAMiL,EAAOG,YAG/ClY,EAAM8P,MAAQiI,EAAOjB,OAAS,IAAIjN,IAAInG,OAAOmB,QAAQkT,EAAOjB,cAAWhe,EACvEkH,EAAM+U,aAAegD,EAAOG,UAC5BlY,EAAMuT,IAAM3P,EAAKlE,QAAOpG,IAAS4d,EAAgBrX,SAASvG,KAAO7K,KAAI6K,GAAQob,EAAWyC,EAAcY,EAAOze,IAAQ,CACnHA,KAAAA,GACCmO,KACIzH,KA6FmH,CAAC,IAAK,IAAK,UAAmBsX,GAC1J,CAAC,YAAa,IAAK,aAAsBA,GAAe,CAAC,WAAY,IAAK,YAAqBA,GAAe,CAAC,OAAQ,IAAK,QApB5H,SAAoBtX,EAAOkC,EAAMqV,GAC/B,OAAOC,EAAcxX,EAAOkC,EAAMqV,EAAS,SAmB6G,CAAC,UAAW,IAAK,WAAoBD,GAAe,CAAC,QAAS,IAAK,SAhB7N,SAAqBtX,EAAOkC,EAAMqV,GAChC,OAAOC,EAAcxX,EAAOkC,EAAMqV,EAAS,UAegN,CAAC,kBAAmB,IAAK,mBAXtR,SAA+BvX,EAAOkC,EAAMkD,GAC1C,MAAMiT,EAAc,iBAAiBrqB,OAErC,OADAgS,EAAM+T,YAAc7R,EAAK8N,UAAUqI,EAAc,EAAGnW,EAAKlU,OAAS,GAC3DgS,KASHsY,EAAoB,CAAC,CAAC,YAAa,IAAK,cAAuB,CAAC,WAAY,IAAK,aAAsB,CAAC,WAAY,IAAK,aAAsB,CAAC,UAAW,IAAK,YAAqB,CAAC,SAAU,IAAK,WAAoB,CAAC,kBAAmB,IAAK,oBAA6B,CAAC,OAAQ,IAAK,SAAkB,CAAC,qBAAsB,IAAK,uBAAgC,CAAC,iBAAkB,IAAK,oBAEzY,SAASC,EAAerW,GAAOjC,EAAOC,IACpC,OAAOgC,EAAK8N,UAAU/P,EAAMjS,OAAQkU,EAAKlU,OAASkS,EAAIlS,QAGjD,SAAS0mB,EAAW8D,GAAO,YAChCzE,EAAW,KACXza,GACE,GAAImO,EAAQ,GAEd,MAAMvF,GAAO,QAASsW,GAChBxY,EAAQ,CACZ+T,YAAAA,EACAc,KAAM,UACNvb,KAAAA,EACA4I,KAAAA,GAGF,KAAMuF,EAAQ,GACZ,MAAM,IAAIrV,MAAM,4CAGlB,MAAMqmB,EAASb,EAAiB3V,MAAKwW,GAAUd,EAAWzV,EAAMuW,KAEhE,GAAIA,EAEF,OADAzY,EAAM6U,KAAO4D,EAAO,GACbA,EAAO,GAAGzY,EAAOkC,EAAMqW,EAAerW,EAAMuW,GAAShR,GAG9D,MAAMtB,EAAUmS,EAAkBrW,MAAKkE,GAAWwR,EAAWzV,EAAMiE,KAOnE,OALIA,IACFnG,EAAM6U,KAAO1O,EAAQ,GACrBnG,EAAMuT,IAAMmB,EAAW6D,EAAerW,EAAMiE,GAAU,GAAIsB,IAGrDzH,iCC5NF,SAAS0Y,EAAUxW,GACxB,MAAM/G,EAAS,GAEf,IAAIwd,EAAI,EACJjmB,EAAI,EACJyE,EAAI,EACJ+P,EAAI,EAEJjH,EAAQ,EAEZ,IAAK,IAAI3R,EAAI,EAAGA,EAAI4T,EAAKlU,OAAQM,IAC/B,OAAQ4T,EAAK5T,IAEX,IAAK,IAEKqqB,GAAKjmB,GAAKyE,GAAK+P,IACnB/L,EAAOnJ,KAAKkQ,EAAK8N,UAAU/P,EAAO3R,GAAG2iB,QACrChR,EAAQ3R,EAAI,GAGd,MAIJ,IAAK,IACHqqB,IACA,MAEF,IAAK,IACHA,IACA,MAGF,IAAK,IACHjmB,IACA,MAEF,IAAK,IACHA,IACA,MAGF,IAAK,IACHyE,IACA,MAEF,IAAK,IACHA,IACA,MAGF,IAAK,IACH+P,IACA,MAEF,IAAK,IACHA,IAMN,GAAIyR,GAAKjmB,GAAKyE,GAAK+P,EACjB,MAAM,IAAI9U,MAAM,qDAAqD8P,KAKvE,OADA/G,EAAOnJ,KAAKkQ,EAAK8N,UAAU/P,EAAOiC,EAAKlU,QAAQijB,QACxC9V,gFCpEF,MAAMyd,EAAe,CAAC,gBAAiB,cAAe,WAAY,YAAa,aAAc,mBAAoB,gBAAiB,WAAY,kBAAmB,iBAAkB,MAAO,WAAY,YACtM,SAASC,EAAYC,GAC1B,OAAOF,EAAazqB,QAAO,CAACyoB,EAAKrgB,KAAQ,OAAaqgB,EAAK,CACzD,CAACrgB,GAAM,GAAGA,IAAMuiB,OACd,mECJC,SAASC,EAAatE,GAAQ,KACnCvS,GACC8W,EAASC,GACV,MAAM9d,EAAS,GACT+d,EAAWzE,EAAO0E,UAAUjX,GAAMqB,IAAI6V,UAAUF,SAEtD,IAAK,IAAI5qB,EAAI,EAAGA,EAAI4qB,EAASlrB,OAAQM,KACnC,OAAW6M,EAAQ+d,EAAS5qB,GAAI2qB,EAASD,GAG3C,OAAO7d,sWCET,MAAMke,EAAyB,IAAI9e,WAAW,GACxC+M,GAAI,OAAO,YAEjB,SAASgS,EAAmBltB,EAAGC,GAC7B,OAAO2M,SAAS5M,EAAG,IAAM4M,SAAS3M,EAAG,IAGvC,SAASktB,EAAc7e,GACrB,OAAOA,EAAEC,WAGX,SAAS6e,EAAa/E,EAAQgF,GAC5B,MAAMC,EAAO,IAAI3rB,MAAM0rB,EAAOzrB,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAImrB,EAAOzrB,OAAQM,IACjCorB,EAAKprB,GAAKmmB,EAAOC,WAAW+E,EAAOnrB,GAAG4T,MAAMA,KAG9C,OAAOwX,EAGT,SAASC,EAAYC,GACnB,MAAMhW,EAAOF,OAAOE,KAAKgW,GAEzB,IAAK,IAAItrB,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,WACxBsrB,EAAOhW,EAAKtV,IAIvB,SAASurB,GAAoB,MAC3BlW,IAEA,OAAOA,EAAMhJ,WAyGR,MAAMmf,EACX,GAAW,IAAIjQ,IACf,GAAe,IAAIA,IACnB,GAAkB,KAClB,GACA,GACA,GAAmB,EACnB,GAAiB,GACjB,GAAkB,GAClB,GAAkB,GAClB,GAAgB,IAAIA,IACpB,GACA,GAAU,EAAAxd,EACV,GACA,GACA,GAAc,GACd,GAAoB,KACpB,GAEAc,YAAYuoB,GACVpoB,MAAK,GAAiB,OAAa,CACjCoe,KAAI,IACJqO,SAAQ,IACRC,iBAAgB,IAChBnO,IAAG,KACF,GACHve,MAAK,EAAoB,EACzB,MAAM2sB,EAAWvW,OAAOD,OAAOnW,MAAK,GAEpC,IAAK,IAAIgB,EAAI,EAAGA,EAAI2rB,EAASjsB,OAAQM,IACnChB,KAAK4sB,SAASD,EAAS3rB,GAAG6b,OAGxBuL,IACFpoB,KAAKooB,cAAgBpoB,KAAK6sB,WAAW,OAAQzE,IAI7C9T,oBACF,IAAIwY,EAEJ,GAAwD,QAAnDA,EAAwB9sB,MAAK,SAAwD,IAA1B8sB,GAAoCA,EAAsBC,cAAcnU,OAAQ,CAC9I,MAAMoU,EAAchtB,MAAK,EAAiB+sB,cAAc9Z,SAExD,GAAI+Z,EAAYtsB,OACd,OAAOssB,EAAY7rB,KAAIpC,GAAKA,EAAEgW,aAIlC,MAAO,CAAC,IAGNkY,gBACF,IAAIC,EAEJ,OAA4D,QAApDA,EAAyBltB,MAAK,SAAyD,IAA3BktB,GAAqCA,EAAuBC,WAAWvU,OAAS5Y,MAAK,EAAiBmtB,WAAWla,SAAS8B,gBAAavJ,EAGzMiJ,kBACF,IAAI2Y,EAEJ,GAAyD,QAApDA,EAAyBptB,MAAK,SAAyD,IAA3BotB,GAAqCA,EAAuBC,YAAYzU,OAAQ,CAC/I,MAAM0U,EAAYttB,MAAK,EAAiBqtB,YAAYpa,SAEpD,GAAIqa,EAAU5sB,OACZ,OAAO4sB,EAAUnsB,IAAI8qB,GAIzB,MAAO,CAAC,kBAA4BsB,MAGlCC,qBACF,OAAOxtB,MAAK,GAAmB+rB,EAOjCpE,aAAajV,GACX,MAAO,aAAa+a,KAAK/a,GAO3B2W,iBAAiBqE,GACf,MAAO,SAASA,EAASrgB,aAGvBsgB,iBACF,OAAO3tB,MAAK,EAGVmnB,aACF,OAAO,QAAannB,MAAK,EAAS,4CAGhC4tB,eACF,OAAO,QAAa5tB,MAAK,EAAW,8CAGlC6tB,mBACF,MAAO,IAAI7tB,MAAK,EAAcsW,QAG5BwX,uBACF,OAAO9tB,MAAK,EAGd+tB,aACE/tB,MAAK,EAAW,IAAIuc,IAOtByR,YAAYpZ,GACV,OAAO,QAAkB5U,KAAM4U,GAOjCO,kBAAkBP,GAChB,OAAO,QAAkB5U,KAAM4U,GAOjCiY,WAAWjY,KAASmT,GAClB,OAAO,OAAiB/nB,KAAM4U,EAAMmT,GAOtCM,iBAAiBzT,EAAMmT,EAAQO,GAC7B,OAAO,OAAiBtoB,KAAM4U,EAAMmT,EAAQO,GAI9C2F,aAAaC,GACX,MAAOC,EAASC,GAAU,CAACF,EAAU,GAAIA,EAAU,IACnD,OAAO,QAAaluB,MAAK,EAAe,GAAGmuB,MAAcnuB,MAAK,EAAe,GAAGmuB,KAAW,GAAGC,MAAW,IAAM,iDAAiDD,MAAYC,OAAYF,EAAU7gB,gBAIpMghB,cAAcC,GACZ,MAAOH,EAASC,IAAU,OAAME,GAAc,CAACA,EAAW,GAAIA,EAAW,IAAM,CAACA,EAAWjY,MAAMtB,YAAY,OAAMuZ,EAAWtkB,OAASskB,EAAWtkB,MAAM,GAAKskB,EAAWtkB,MAAM+K,YAC9K,OAAO,QAAa/U,MAAK,EAAgB,GAAGmuB,MAAcnuB,MAAK,EAAgB,GAAGmuB,KAAW,GAAGC,MAAW,IAAM,mDAAmDD,MAAYC,OAAYE,EAAWjhB,gBAGzMkhB,cAAcC,GACZ,MAAOL,EAASC,GAAU,CAACI,EAAW,GAAIA,EAAW,IACrD,OAAO,QAAaxuB,MAAK,EAAgB,GAAGmuB,MAAcnuB,MAAK,EAAgB,GAAGmuB,KAAW,GAAGC,MAAW,IAAM,mDAAmDD,MAAYC,OAAYI,EAAWnhB,gBAGzMpI,IAAI+G,EAAMyiB,EAAaC,GACrB,OAAO1uB,KAAK0nB,UAAU1b,EAAMyiB,EAAaC,GAG3ChH,UAAU1b,EAAMyiB,EAAaC,GAC3B,IAAIpZ,EAAOtV,MAAK,EAASiF,IAAI+G,IAAShM,MAAK,EAAegM,GAE1D,IAAKsJ,EAAM,CACT,MAAMC,EAAavV,MAAK,EAAaiF,IAAI+G,GACzC,IAAI2iB,EAEApZ,EACFoZ,GAAW,QAAkB3uB,KAAMuV,GAC1BmZ,EACTC,GAAW,QAAmB3uB,KAAM0uB,GAC3BD,IACTzU,EAAE4U,KAAK,0BAA0B5iB,mCACjChM,MAAK,EAAcmF,IAAI6G,GAAM,GAC7B2iB,EAAW,SAAoB3iB,IAG7B2iB,IAIFrZ,EAAO,cAAcqZ,IACrB3uB,MAAK,EAASmF,IAAI6G,EAAMsJ,GAGpBoZ,IAAgB,OAASA,EAAatF,cACxCppB,MAAK,EAASmF,IAAInF,KAAKqpB,iBAAiBqF,EAAatF,aAAc9T,IAKzE,OAAOA,EAGTuZ,qBACE,OAAO7uB,MAAK,EAGd6V,aAAaP,GAIX,MAAM4T,EAAQ,GAEd,IAAK,MAAOld,EAAMwa,KAAUpQ,OAAOmB,QAAQvX,MAAK,GAC1CsV,IAASkR,GACX0C,EAAMxkB,KAAKsH,GAIf,IAAK,MAAOA,EAAMwa,KAAUxmB,MAAK,EAASuX,UACpCjC,IAASkR,GACX0C,EAAMxkB,KAAKsH,GAMf,OADAkd,EAAM3J,OAAOxD,UACNmN,EAAMxoB,OAASwoB,EAAM,QAAK1d,EAGnCsjB,cAAc/Y,GACZ,OAAO/V,MAAK,EAAaiF,IAAI8Q,GAG/BgZ,mBAAmBC,EAAUC,GAC3B,IAAIC,EAAkBC,EAAuBC,EAAwBC,EAAwBC,EAE7F,OAAiD,QAAzCJ,EAAmBlvB,MAAK,SAA8C,IAArBkvB,GAAkG,QAA1DC,EAAwBD,EAAiBK,mBAAmD,IAA1BJ,GAAsG,QAAzDC,EAAyBD,EAAsBK,YAA6C,IAA3BJ,GAA6G,QAA/DC,EAAyBD,EAAuBJ,UAAkD,IAA3BK,GAA6G,QAA/DC,EAAyBD,EAAuBI,iBAAkD,IAA3BH,OAApa,EAAidA,EAAuBL,GAGjkBS,WAAW1jB,EAAMb,GACf,MAAMqb,EAAQxmB,KAAKiF,IAAI+G,GAEvB,IAAKwa,EACH,MAAM,IAAI1hB,MAAMqG,GAAO,QAAQa,eAGjC,OAAOwa,EAGTS,aAAajb,GACX,OAAOhM,KAAKiF,IAAI+G,GAAM,GAGxB2jB,0BACE,OAAO,QAAqB3vB,MAAK,EAAmB,UAAWA,MAAK,GAGtE4vB,0BACE,OAAO,QAAqB5vB,MAAK,EAAmB,YAAaA,MAAK,GAGxE6vB,SAAS7jB,GACP,OAAOhM,MAAK,EAAS6hB,IAAI7V,MAAWhM,MAAK,EAAegM,GAG1D8jB,OAAO9jB,GACL,OAAOhM,MAAK,EAAa6hB,IAAI7V,GAG/B+jB,QAAQ/jB,GACN,OAAQhM,MAAK,EAAciF,IAAI+G,KAAUhM,KAAK6vB,SAAS7jB,IAAShM,KAAK8vB,OAAO9jB,IAG9EtC,KAAKkC,GACH,OAAO5L,KAAK6sB,WAAW,YAAa7sB,MAAK,EAAQ4L,IAInDghB,SAASoD,EAAMC,GAEb,IAAI,OAAWD,GACbhwB,MAAK,EAASmF,IAAI6qB,EAAKhkB,KAAMgkB,QACxB,IAAI,OAASA,GAAO,CACzB,KAAK,OAAWC,GACd,MAAM,IAAInrB,MAAM,wCAAwCkrB,mBACnD,GAAIA,IAASC,EAAK5iB,WACvB,MAAM,IAAIvI,MAAM,+BAA+BkrB,SAAYA,KAG7DhwB,MAAK,EAASmF,IAAI6qB,EAAMC,QAExBjwB,KAAKkwB,gBAAgBF,GAIzBE,gBAAgBC,GACd,MAAM5Y,EAAUnB,OAAOmB,QAAQ4Y,GAE/B,IAAK,IAAIlQ,EAAI,EAAGA,EAAI1I,EAAQ7W,OAAQuf,IAAK,CACvC,MAAOjU,EAAM4I,GAAQ2C,EAAQ0I,GAE7B,IAAI,OAAWrL,GAEb5U,MAAK,EAASmF,IAAI6G,EAAM4I,OACnB,CACL,MAAMqB,GAAM,OAASrB,GAAQA,GAAO,OAAUA,GAE9C,GAAI5I,IAASiK,EACX,MAAM,IAAInR,MAAM,+BAA+BkH,SAAYiK,KAIzDjW,MAAK,EAAS6hB,IAAI7V,IACpBhM,MAAK,EAAS6G,OAAOmF,GAGvBhM,MAAK,EAAamF,IAAI6G,EAAMiK,KAMlCma,mBAAmBC,GACbA,IACFrwB,MAAK,EAAmBqwB,GAI5BC,UAAUC,GACRvwB,MAAK,EAAUuwB,GAAU,EAAAxxB,EAG3ByxB,cAAc7C,GACZ3tB,MAAK,EAAc2tB,EAGrB8C,UAAUtJ,GACRnnB,MAAK,EAAUmnB,EAEfA,EAAOyF,WAIT8D,YAAY9C,EAAUE,EAAkB6C,GACtC3wB,MAAK,EAAY4tB,EAASgD,SAC1B5wB,MAAK,EAAmB4tB,EAASpC,QACjCxrB,MAAK,EAAkB,KAEvBA,KAAKywB,UAAUzwB,MAAK,EAAUmnB,QApYlC,SAA0BnW,GAAU,OAClCmW,EAAM,QACN0J,GACCrF,EAAS3d,GACV,MAAMijB,EAAWD,EAAQze,OAAO,MAChCia,EAAYxe,GAEZ,IAAK,IAAI7M,EAAI,EAAGA,EAAI8vB,EAASpwB,OAAQM,IAAK,CACxC,MAAM,MACJ+vB,EAAK,MACL1a,EAAK,KACLrK,GACE8kB,EAAS9vB,GACPgwB,EAAexF,GAAW,GAAKnV,EAAMtB,WAAa/T,GACxD,OAAW6M,EAAQmjB,GAAc,KAAM,OAAa7J,EAAQ4J,EAAM9d,SAAUsZ,GAAqB0E,IAAW,QAAmBjgB,EAAUmW,EAAQ8J,GAAS,QAAgBjlB,GAAOglB,QAuXjLE,CAAiBlxB,KAAMA,MAAK,EAAWA,MAAK,EAAkBA,MAAK,GAncvE,SAAsB8X,GAAG,OACvBqP,EAAM,QACN0J,GACCrF,EAAS3d,GACVwe,EAAYxe,GAEZ,IAAK,IAAI7M,EAAI,EAAGA,EAAI6vB,EAAQnwB,OAAQM,IAAK,CACvC,MAAM,OACJmwB,EAAM,MACN9a,EAAK,KACLrK,GACE6kB,EAAQ7vB,GAEZ,GAAImwB,EAAOvY,OAAQ,CACjB,MAAMwY,GAAc,QAAgBplB,IACpC,OAAW6B,EAAQ2d,GAAW,GAAKnV,EAAMtB,WAAa/T,GAAG,KAAM,OAAammB,EAAQgK,EAAOle,SAAUsZ,GAAqB,EACxH8E,KAAAA,EACAlF,OAAAA,EACA9V,MAAAA,EACArK,KAAAA,MACI,CACJogB,KAAMF,EAAa/E,EAAQgF,GAC3BkF,KAAMA,EAAKlwB,IAAI8qB,GACfE,OAAAA,EACA9V,MAAOA,EAAMtB,WACbqZ,OAAQpiB,EAAKqB,WACbrB,KAAMA,EAAKqB,WACX8gB,QAASiD,UAyabE,CAAatxB,EAAMA,MAAK,EAAWA,MAAK,EAAkBA,MAAK,GAlanE,SAAsBgR,GAAU,OAC9BmW,EAAM,QACN0J,GACCrF,EAAS3d,GACV,MAAMijB,EAAWD,EAAQze,OAAO,KAChCia,EAAYxe,GAEZ,IAAK,IAAI7M,EAAI,EAAGA,EAAI8vB,EAASpwB,OAAQM,IAAK,CACxC,MAAM,OACJuwB,EAAM,MACNlb,EAAK,KACLrK,GACE8kB,EAAS9vB,IACb,OAAW6M,EAAQ2d,GAAW,GAAKnV,EAAMtB,WAAa/T,GAAG,KAAM,OAAammB,EAAQoK,EAAOte,SAAUsZ,GAAqB0E,IACxH,MAAMO,EAAOxgB,EAAS6b,WAAW,uBAAuB,OAAa,GAAIoE,EAAS,CAChF7E,KAAMF,EAAa/E,EAAQ8J,EAAQ9E,WAErC,OAAO,cAAc,IACnBtsB,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0B,EAAO8e,GAAM,QAAgBxlB,GAAOilB,EAAQjlB,KAAKqB,oBAgZvEokB,CAAazxB,KAAMA,MAAK,EAAWA,MAAK,EAAkBA,MAAK,GAG/D,MAAO0xB,GAActb,OAAOE,KAAKtW,MAAK,GAAgBuf,KAAKyM,GAE3D,GAAI0F,EAAY,CACd,MAAOC,GAAavb,OAAOE,KAAKtW,MAAK,EAAe0xB,IAAanS,KAAKyM,GAElE2F,IACF3xB,MAAK,EAAkB,IAAIiN,WAAW,CAACvB,SAASgmB,EAAY,IAAKhmB,SAASimB,EAAW,OAKzF3xB,KAAK4xB,oBAAoB9D,IAAqB9tB,MAAK,EAAU6xB,UAAUrG,QAAQsG,GAAG,MAChF9xB,MAAK,EAAU6xB,UAAU/D,iBAAiB3sB,KAAI,EAC9C4wB,WAAAA,KACIA,EAAW1kB,aAAc,MAAqBsjB,GAEpD3wB,KAAKowB,mBAvYT,SAA2Bpf,EAAU4c,GACnC,MAAMoE,EAAWhhB,EAAS6d,qBACpBoD,GAAY,OAAkBjhB,EAAU4c,EAASgD,SAAUhD,EAASpC,SACpE2B,EAAa8E,EAAUC,SAAWD,EAAUC,OAAOC,YAAcF,EAAUC,OAAOE,YAExF,IAAKjF,EACH,OAAO6E,EAGT,MAAM,cACJjF,EAAa,YACbM,GACE2E,GAAY,GAChB,OAAOhhB,EAASqX,iBAAiB,kBAAmB,CAAC,CACnD8E,WAAAA,EACAJ,cAAAA,EACAM,YAAAA,KAuXwBgF,CAAkBryB,KAAM4tB,IAIlDgE,oBAAoB9D,EAAmB,KAAoB6C,GACzD3wB,MAAK,EAAoB8tB,EACzB9tB,MAAK,EAAkB2wB,EACvB,MAAM2B,GAAU,QAAsBtyB,MAAK,EAAmBA,MAAK,GAE/DsyB,EAAQ5xB,QACVsZ,EAAE4U,KAAK,6BAA6B0D,EAAQvgB,KAAK,sLC9gBvD,SAASwgB,EAAgB7f,GACvB,OAAI,OAAMA,IAAUjS,MAAM0W,QAAQzE,IACzB,OAASA,IACP,QAAMA,KAAU,OAAkBA,EAAMrF,aAC1C,OAASqF,EAAMrF,aACb,OAASqF,IACX,OAASA,GAGXA,EAWF,MAAM8f,UAAiC,IAC5C3yB,YAAYmR,EAAU0B,EAAQ,IAAIzF,YAChCgE,MAAMD,EAAUuhB,EAAgB7f,GAAQ,KAO1CpB,GAAG9P,GACD,OAAOyP,MAAMK,GAAGihB,EAAgB/wB,IAOlCoQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKqN,WAOdA,WACE,OAAO,OAAerN,MAOxBgT,YACE,MAAO,yMC7DJ,MAAMyf,EAAoB,IAAIxlB,WAAW,CAAC,MAoC1C,MAAMylB,UAAoC,IAC/C7yB,YAAYmR,EAAU0B,EAAQ,IAAIzF,YAChCgE,MAAMD,EAfV,SAA8BA,EAAU0B,GACtC,OAAOA,aAAiBggB,EAA8BhgB,EAAMlB,MAAQkB,aAAiB,KAA4BA,aAAiB,IAAsBA,GAAQ,OAAMA,IAAUjS,MAAM0W,QAAQzE,KAAU,QAAMA,GAdhN,SAAmB1B,EAAU0B,GAG3B,GAAqB,KAAjBA,EAAMhS,OACR,OAAOsQ,EAASqX,iBAAiB,oBAAqB,CAAC3V,IAClD,GAAiB,MAAbA,EAAM,GACf,OAAO1B,EAASqX,iBAAiB,oBAAqB,CAAC3V,EAAMzL,SAAS,KAGxE,MAAOxB,EAAQ/E,GAAU,eAA+BgS,GACxD,OAAO1B,EAASqX,iBAAiB,eAAgB,EAAC,OAAQ3V,EAAMzL,SAASxB,EAAQA,EAAS/E,MAI6Huc,CAAUjM,GAAU,OAAS0B,KAAU,OAAKA,KAAU,OAASA,KAAU,OAASA,GAAS1B,EAASqX,iBAAiB,eAAgB,CAAC3V,IArB/V,SAAsB1B,EAAU0B,GAC9B,MAAM+E,GAAU,OAAc/E,GAC9B,OAA0B,KAAnB+E,EAAQ/W,OAAgBsQ,EAASqX,iBAAiB,oBAAqB,CAAC5Q,IAAYzG,EAASqX,iBAAiB,eAAgB,EAAC,OAAQ5Q,GAAS,KAmBgNkb,CAAa3hB,EAAU0B,GAc5WkgB,CAAqB5hB,EAAU0B,IAO7CxB,oBACF,MAAM2hB,EAAY7yB,KAAK8yB,WACvB,OAAOD,GACPA,EAAY,EAAI,EAAI,GAOlBC,iBACF,OAAO9yB,KAAKwR,iBAAiB,IAAsB,eAA+BxR,KAAKwR,OAASxR,KAAKwR,MAAMN,cAO7GnG,QACE,OAAO,OAAS/K,KAAKoR,SAOvB4B,YACE,MAAO,UAQT5B,MAAMY,GACJ,MAAMC,EAAUjS,KAAKwR,MAAMJ,QAAQnK,SAAS,EAAGjH,KAAK8yB,YACpD,OAAO9gB,EAASC,GAAU,OAAUjS,KAAKwR,iBAAiB,IAAsB,gBAAgCS,GAAWwgB,EAAmBxgB,sRCrFlJ,MAAM8gB,EAAW,CAAC,mBAClB,mBAAoB,mBAAoB,mBAAoB,eAI5D,SAASC,EAAahiB,EAAU0B,EAAO8Y,GACrC,GAAI9Y,aAAiBugB,EACnB,OAAOvgB,EAAMO,SAGf,MAAMK,GAAYkY,EAAU,QAAgB,KACtC5W,EAAOme,EAASvH,EAAU,OAAmBuH,EAAS,GAG5D,OAAO/hB,EAASqX,iBAAiBzT,EAAM,CAAClC,EAAO,CAC7CY,SAAAA,EACAkY,QAAAA,KAgCJ,MAAM0H,UAAsB,IAC1BrzB,YAAYmR,EAAU0B,EAAOI,GAC3B7B,MAAMD,EAAU0B,EAAOI,GACvB,MAAMqgB,EAAW/c,OAAOE,KAAKtF,EAAS4e,2BAEhCwD,EAASnqB,GAAOjJ,KAAKwR,MAAMhI,UAAUP,GAI3C,IAAK,IAAIjI,EAAI,EAAGA,EAAImyB,EAASzyB,OAAQM,KACnC,OAAehB,KAAMmzB,EAASnyB,GAAIoyB,GAQlChH,WACF,OAAOpsB,KAAKouB,OAAOhC,KAOjBiH,cACF,OAAOrzB,KAAKouB,OAAOiF,QAOjBnF,gBACF,OAAOluB,KAAKouB,OAAOF,UAOjBtiB,WACF,OAAO5L,KAAKouB,OAAOxiB,KAOjB0nB,UACF,OAAOtzB,KAAKwR,MAAMhI,UAAU8pB,IAO1BpiB,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOlB4S,eACF,OAAOtT,KAAKwR,MAAMhI,UAAU8J,SAO1B5S,aACF,OAAOV,KAAKoR,OAAM,GAAM1Q,OAOtB8wB,WACF,OAAOxxB,KAAKouB,OAAOoD,KAOjBpD,aACF,OAAOpuB,KAAKwR,MAAM4c,OAOhBmF,YACF,OAAOvzB,KAAKwR,MAAMhI,UAAU+pB,MAO1B/pB,gBACF,OAAOxJ,KAAKwR,MAAMhI,UAAUA,UAO1BgqB,aACF,OAAOxzB,KAAKwR,MAAMhI,UAAUgqB,OAO1BC,UACF,OAAOzzB,KAAKwR,MAAMhI,UAAUiqB,IAO1B7e,WACF,OAAO5U,KAAKwR,MAAMga,QAGhBha,YACF,OAAOxR,KAAKiT,SAOVuY,cACF,OAAOxrB,KAAK4U,MAAQ5U,KAAKsT,SAAW,KAAa,MAOnDogB,GAAGlyB,GACD,OAAOxB,KAAKouB,OAAOsF,GAAGlyB,GAGxByR,SACE,OAAOhC,MAAMgC,UAkBV,MAAMggB,UAAyBC,EACpC,GAEArzB,YAAYmR,EAAU0B,GAAO,QAC3B8Y,GACE,IACFva,MAAMD,EA7MV,SAAyBA,EAAU0B,EAAO8Y,EAAU,MAClD,OAAI,OAAM9Y,IAAUjS,MAAM0W,QAAQzE,KAAU,QAAMA,GAapD,SAAmB1B,EAAU0B,EAAO8Y,GAClC,IAAK9Y,EAAMhS,OACT,OAAOsyB,EAAahiB,EAAU,IAAI/D,WAAcue,GAGlD,MAAO/lB,EAAQ/E,IAAU,OAAegS,GAClCvB,EAAQ1L,EAAS/E,EAAOqU,YAC9B,QAAO5D,GAASuB,EAAMhS,QAAQ,IAAM,4DAA4DyQ,YAAgBuB,EAAMhS,WACtH,MAAMkL,EAAO8G,EAAMzL,SAASxB,EAAQ0L,GACpC,OAAO6hB,EAAahiB,EAAUpF,EAAK3E,SAAS,GAAI2E,EAAK,IArB5CqR,CAAUjM,GAAU,OAAS0B,GAAQ8Y,GACnC9Y,aAAiB1B,EAASmE,kBAAkB,QAC9C6d,EAAahiB,EAAU,CAC5Bod,OAAQ1b,GACP8Y,GAGEwH,EAAahiB,EAAU0B,EAAO8Y,GAoMnBmI,CAAgB3iB,EAAU0B,EAAO8Y,IAO/C9hB,WAKF,OAJK1J,MAAK,IACRA,MAAK,EAAaiR,MAAMvH,MAGnB1J,MAAK,EAOd4zB,aAAaJ,EAAQhqB,EAAWqqB,GAG9B,OAFA7zB,KAAKwR,MAAMoiB,aAAaJ,EAAQhqB,EAAWqqB,GAC3C7zB,MAAK,OAAawL,EACXxL,KAOTuR,UACE,MAAMU,GAAU,UAAajS,KAAKkS,cAClC,MAAO,CACLV,MAAOxR,KAAKsT,SAAWtT,KAAKwR,MAAMD,UAAUC,MAAQxR,KAAKwR,MAAM4c,OAAO7c,UAAUC,MAChFE,MAAO,EAAC,OAAaO,EAAQvR,QAAS,IAAIuM,WAAW,CAACjN,KAAKwrB,YAQ/DsI,KAAKC,EAASzL,GAGZ,OAFAtoB,KAAKwR,MAAMsiB,KAAKC,EAASzL,GACzBtoB,MAAK,OAAawL,EACXxL,KAOTg0B,SAASR,EAAQlL,GAGf,OAFAtoB,KAAKwR,MAAMwiB,SAASR,EAAQlL,GAC5BtoB,MAAK,OAAawL,EACXxL,KAOT+K,MAAMiH,GACJ,OAAO,OAAShS,KAAKoR,MAAMY,IAO7BJ,QAAQuC,GACN,OAAO,OAAa,GAAI,CACtBb,SAAUtT,KAAKsT,SACf8a,OAAQpuB,KAAKouB,OAAOxc,QAAQuC,IAC3BnU,KAAKsT,SAAW,CACjBggB,IAAKtzB,KAAKszB,IAAI1hB,QAAQuC,GACtBof,MAAOvzB,KAAKuzB,MAAM3hB,QAAQuC,GAC1B3K,UAAWxJ,KAAKwJ,UAAUuB,QAC1ByoB,OAAQxzB,KAAKwzB,OAAO5hB,QAAQuC,GAC5Bsf,IAAKzzB,KAAKyzB,IAAI7hB,QAAQuC,IACpB,MAONrC,SACE,OAAO9R,KAAK+K,QAOdiI,YACE,MAAO,YAQT5B,MAAMY,GACJ,MAAMC,GAAU,UAAajS,KAAKkS,cAClC,OAAOF,EAASC,GAAU,OAAiBA,GAG7CC,aAGE,MAAO,CAAC,IAAIjF,WAAW,CAACjN,KAAKwrB,UAAWxrB,KAAKwR,MAAMJ,0OCrRvD,SAAS6iB,EAAmBvhB,EAAQ,IAAIzF,YACtC,IAAI,OAAMyF,GACR,OAAQA,EAAMhS,QAAuB,IAAbgS,EAAM,GAAiC,IAAIzF,WAAW,CAAC,EAAGyF,EAAM,GAAIA,EAAM,KAAzD,IAAIzF,WAAW,CAAC,IACpD,IAAKyF,EACV,OAAO,IAAIzF,WAAW,CAAC,IAClB,GAAIyF,aAAiBwhB,EAC1B,OAAOD,EAAmBvhB,EAAMtB,SAC3B,IAAI,QAAMsB,GACf,OAAOuhB,GAAmB,OAASvhB,IAC9B,IAAI,OAASA,GAAQ,CAC1B,MAAM6E,EAAUnB,OAAOmB,QAAQ7E,GAAOvR,KAAI,EAAEmN,EAAGlB,KAAO,CAACkB,EAAEoI,cAAetJ,KAClE+mB,EAAS5c,EAAQ5C,MAAK,EAAErG,KAA2B,cAApBA,EAAEoI,gBACjC0d,EAAW7c,EAAQ5C,MAAK,EAAErG,KAA2B,gBAApBA,EAAEoI,gBAEzC,OAAOyd,EAAS,CACdE,UAAWF,EAAO,IAChBC,EAAW,CACbE,YAAaF,EAAS,IACpB,CACFC,UAAW3hB,GAIf,MAAM,IAAI5N,MAAM,8BASX,MAAMwvB,UAAoB,IAE/Bz0B,YAAYmR,EAAU0B,GAGpBzB,MAAMD,EAAU,OAUb,MAAMqjB,UAAkB,IAC7Bx0B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,CACdujB,OAAQ,IACRC,MAAO,KAlGb,SAAyBxjB,EAAU0B,GACjC,IAAI,OAAMA,KAAU,QAAMA,IAAUjS,MAAM0W,QAAQzE,GAChD,OA2BJ,SAAyB1B,EAAU0B,GACjC,GAAqB,IAAjBA,EAAMhS,OACR,MAAO,CAAC,IAAI,IAAIsQ,GAAW,IAAI,IAAIA,IAGrC,MAEMiB,GAFQ,OAAQS,EAAMzL,SAAS,EAAG,IAAI8N,aAC7B,OAAQrC,EAAMzL,SAAS,EAAG,IAAI8N,YACV,GAC7Bwf,EAAS,GAAKtiB,EAAU,GAExBuiB,GAASviB,GAAW,GADHnM,KAAKykB,IAAIgK,GAAU,GAAI,GAG9C,OADA,QAAOA,GAAU,GAAKC,EAAQD,EAAQ,qCAC/B,CAAC,IAAI,IAAIvjB,EAAUujB,GAAS,IAAI,IAAIvjB,EAAUwjB,IAvC5CC,CAAgBzjB,GAAU,OAAS0B,IACrC,IAAKA,EACV,MAAO,CAAC,IAAI,IAAI1B,GAAW,IAAI,IAAIA,IAC9B,IAAI,OAAS0B,GAClB,OAQJ,SAA4B1B,EAAU0B,GACpC,MAAM,QACJgiB,EAAO,OACPH,GACE7hB,EACJ,IAAIiiB,EAAY7uB,KAAK8uB,IAAI,EAAG9uB,KAAK6V,KAAK7V,KAAK+uB,KAAKN,KAChDI,EAAY7uB,KAAKsf,IAAItf,KAAKykB,IAAIoK,EAAW,GAAI,OAC7C,MAAMH,EAAQE,EAAUC,EAClBG,EAAiBhvB,KAAKykB,IAAIoK,GAAa,GAAI,GAC3CI,EAAiBP,EAAQM,EAAiBA,EAChD,MAAO,CAAC,IAAI,IAAI9jB,EAAU2jB,GAAY,IAAI,IAAI3jB,EAAU+jB,IAlB/CC,CAAmBhkB,EAAU0B,GAGtC,MAAM,IAAI5N,MAAM,qCA0FXmwB,CAAgBjkB,EAAU0B,IAO3BxB,oBACF,OAAO,EAOLqjB,aACF,OAAOv0B,KAAK,GAOVw0B,YACF,OAAOx0B,KAAK,GAOd4R,UACE,MAAO,CACL2iB,QAAQ,OAAav0B,KAAKu0B,QAC1BC,OAAO,OAAax0B,KAAKw0B,QAQ7B1iB,SACE,OAAO9R,KAAK+K,QAedqG,MAAMY,GACJ,MAAMuiB,EAASv0B,KAAKu0B,OAAOxf,WACrB9C,EAAUnM,KAAKsf,IAAI,GAAItf,KAAKykB,IAAI,EA5K1C,SAA0BgK,GACxB,MAAMW,EAASX,EAAOlnB,SAAS,GAC/B,IAAIgJ,EAAQ,EAEZ,KAA6C,MAAtC6e,EAAOA,EAAOx0B,OAAS,EAAI2V,IAChCA,IAGF,OAAOA,EAoKoC8e,CAAiBZ,GAAU,KAAOv0B,KAAKw0B,MAAMzf,WAAajP,KAAKykB,IAAIgK,GAAU,GAAI,IAAM,GAChI,OAAO,IAAItnB,WAAW,CAAW,IAAVgF,EAAgBA,GAAW,IAOpDmjB,MAAMV,GACJ,MAAMF,EAAQx0B,KAAKw0B,MAAMzf,WACnBwf,EAASv0B,KAAKu0B,OAAOxf,WAE3B,UAAWjP,KAAKykB,KAAI,OAAOmK,GAAS3f,WAAYyf,GAASA,GAASD,GAAUA,EAASC,EAOvFa,MAAMX,GAEJ,OAAO10B,KAAKo1B,MAAMV,GAAW10B,KAAKu0B,OAAOxf,YAUtC,MAAMmf,UAA4B,IACvCr0B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,CACdsjB,YAAAA,EACAD,UAAAA,GACCJ,EAAmBvhB,IAOpBxB,oBACF,OAAOlR,KAAKs1B,cAAgBt1B,KAAKu1B,cAAcrkB,cAAgBlR,KAAKw1B,YAAYtkB,cAO9EqkB,oBAEF,OADA,QAAOv1B,KAAKs1B,eAAe,IAAM,mBAAmBt1B,KAAK4U,4BAClD5U,KAAKwR,MAOVgkB,kBAEF,OADA,QAAOx1B,KAAKy1B,aAAa,IAAM,mBAAmBz1B,KAAK4U,0BAChD5U,KAAKwR,MAOV8jB,oBACF,OAAsB,IAAft1B,KAAKqW,MAOVof,kBACF,OAAOz1B,KAAKqW,MAAQ,EAQtBjF,MAAMY,GACJ,OAAOhS,KAAKy1B,YAAcz1B,KAAKw1B,YAAYpkB,MAAMY,GAAUhS,KAAKu1B,cAAcnkB,MAAMY,yFCpQxF,MAAM+gB,EAAW,CAAC,0BAClB,0BAA2B,0BAA2B,0BAA2B,sBAoB1E,MAAM2C,UAAgC,IAC3C71B,YAAYmR,EAAU0B,GAAO,QAC3B8Y,GACE,IACFva,MAAMD,EArBV,SAAgCA,EAAU0B,EAAO8Y,EAAU,MACzD,OAAI9Y,aAAiBgjB,EACZhjB,EAAMO,SAGRjC,EAASqX,iBAAiB0K,EAASvH,IAAYuH,EAAS,GAAI,CAACrgB,EAAO,CACzE8Y,QAAAA,KAegBmK,CAAuB3kB,EAAU0B,EAAO8Y,IAOtDxD,gBACF,OAAOhoB,KAAKwR,MAAMwW,UAOhBsL,UACF,OAAOtzB,KAAKwR,MAAM8hB,IAOhBsC,kBAEF,OAAO51B,KAAKwR,MAAMokB,aAAe51B,KAAKgR,SAASqX,iBAAiB,OAAQ,IAOtE+F,aACF,OAAOpuB,KAAKwR,MAAM4c,OAOhBmF,YACF,OAAOvzB,KAAKwR,MAAM+hB,MAOhBsC,kBAEF,OAAO71B,KAAKwR,MAAMqkB,aAAe71B,KAAKgR,SAASqX,iBAAiB,MAAO,IAOrEoL,UAEF,OAAOzzB,KAAKwR,MAAMiiB,KAAOzzB,KAAKgR,SAASqX,iBAAiB,mBAAoB,IAO1EyN,yBAEF,OAAO91B,KAAKwR,MAAMskB,oBAAsB91B,KAAKgR,SAASqX,iBAAiB,MAAO,IAOhF/W,GAAG9P,GACD,OAAOxB,KAAKwR,MAAMF,GAAG9P,GAOvBsyB,KAAKiC,GACH,MAAMvsB,EAAYxJ,KAAKwR,MAAMsiB,KAAKiC,GAKlC,MAAO,CACLvsB,WAAW,OAASA,IAQxBoI,QAAQC,GACN,OAAO7R,KAAKwR,MAAMI,QAAQC,GAO5BC,SACE,OAAO9R,KAAK+K,QAOdsC,WACE,OAAOrN,KAAK+K,QAOdqG,MAAMY,GAEJ,OAAOf,MAAMG,QAAMY,GAAS,CAC1Boc,QAAQ,oEClJP,MAAM4H,UAAuC,IAClDn2B,YAAYmR,EAAU0B,GAAO,QAC3B8Y,EAAU,GACR,IAEF,MADAva,MAAMD,EAAU,IACV,IAAIlM,MAAM,yCAAyC0mB,gFCJtD,MAAMyK,UAAgC,IAC3Cp2B,YAAYmR,EAAU0B,GAAO,SAC3BY,GAAW,EAAK,QAChBkY,EAAU,GACR,IAEF,MADAva,MAAMD,EAAU,IACV,IAAIlM,MAAM,eAAewO,EAAW,GAAK,gCAAgCkY,EAAU,mHCZ7F,MAAMmC,EAAa,CACjBuI,QAAS,UACTlO,UAAW,OACXmO,YAAa,cACb7C,IAAK,eACLsC,YAAa,OACbxH,OAAQ,OACRmF,MAAO,iBACP6C,eAAgB,iBAChBtI,iBAAkB,YAClB2F,IAAK,mBACLjI,QAAS,MAQJ,MAAM6K,UAA6B,IACxC,GAEAx2B,YAAYmR,EAAU0B,GACpB,MAAM4jB,GAAiB,OAAa,GAAItlB,EAAS4e,0BAA2B5e,EAAS2e,2BACrF1e,MAAMD,GAAU,OAAa,GAAIslB,EAAgB3I,GAAajb,GAC9D1S,MAAK,EAAc,GAEnB,MAAMozB,EAASnqB,GAAOjJ,KAAKiF,IAAIgE,GAG/B,IAAK,MAAOA,EAAK2L,KAASwB,OAAOmB,QAAQ+e,GAClC3I,EAAW1kB,KACdjJ,MAAK,EAAYiJ,GAAO2L,IAG1B,OAAe5U,KAAMiJ,EAAKmqB,GAI1B8C,cACF,OAAOl2B,KAAKse,KAAK,WAGf0J,gBACF,OAAOhoB,KAAKse,KAAK,aAGf6X,kBACF,OAAOn2B,KAAKse,KAAK,eAGfgV,UACF,OAAOtzB,KAAKse,KAAK,OAGfsX,kBACF,OAAO51B,KAAKse,KAAK,eAGf8P,aACF,OAAOpuB,KAAKse,KAAK,UAGfiV,YACF,OAAOvzB,KAAKse,KAAK,SAGf8X,qBACF,OAAOp2B,KAAKse,KAAK,kBAGfwP,uBACF,OAAO9tB,KAAKse,KAAK,oBAGfmV,UACF,OAAOzzB,KAAKse,KAAK,OAGfkN,cACF,OAAOxrB,KAAKse,KAAK,WAOnBiY,YACE,MAAM1oB,EAAS,GACTyI,EAAOF,OAAOE,KAAKtW,MAAK,GAE9B,IAAK,IAAIgB,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAAK,CACpC,MAAMiI,EAAMqN,EAAKtV,GACX0R,EAAQ1S,KAAKiF,IAAIgE,GACNyJ,aAAiB,MAEjBA,EAAMkG,SACrB/K,EAAO5E,GAAOyJ,EAAM3H,SAIxB,OAAO,OAAa8C,EAAQ,CAG1BqoB,QAASl2B,KAAKk2B,QAAQ7oB,WACtB2a,UAAWhoB,KAAKgoB,UAAUjd,QAC1BorB,YAAan2B,KAAKm2B,YAAYprB,QAC9BuoB,IAAKtzB,KAAKszB,IAAIvoB,QACd6qB,YAAa51B,KAAK41B,YAAY7qB,QAC9BqjB,OAAQpuB,KAAKouB,OAAOrjB,QACpBwoB,MAAOvzB,KAAKuzB,MAAMxoB,QAClB+iB,iBAAkB9tB,KAAK8tB,iBAAiB3sB,KAAI8e,GAAKA,EAAE5S,aACnDwoB,YAAa71B,KAAKo2B,eAAeP,YAAY9qB,QAC7C0oB,IAAKzzB,KAAKyzB,IAAI1oB,QACd+qB,mBAAoB91B,KAAKo2B,eAAeN,mBAAmB/qB,QAC3DygB,QAASxrB,KAAKwrB,QAAQzW,aAQ1ByhB,QACE,MAAM3C,EAAU7zB,KAAKu2B,YACf3qB,GAAO,OAAS5L,KAAKgR,SAASqX,iBAAiB,mBAAoB,CAACwL,EAAS,CACjFrI,QAASqI,EAAQrI,WAElBpa,MAAM,CACLgd,QAAQ,KAEV,MAAO,CACL8H,QAASrC,EAAQqC,QACjBtqB,KAAAA,EACAgJ,KAAM,0GCxIL,MAAM6hB,EAAa,IACbC,EAAe,EACfC,EAAY,IAAI1pB,WAChB2pB,EAAkB,EAClBC,EAAe,IAAI5pB,WAAW,CAAC,IAC/B6pB,EAAiB,0SCLvB,MAAMC,EAAa,CACxBlF,UAAW,GACXgC,QAAS,gICQJ,MAAMmD,GAAgB,OAAa,GAAI,IAAW,IAAU,IAAO,KAK7DC,EAAqB,CAAC,eAAgB,eAAgB,WAAY,aAAc,cAAe,2BAA4B,sBACjI,SAASC,EAAsBC,EAAYxG,EAAiB,IACjE,MAAMzH,EAAQ,IAAI9S,OAAOE,KAAK0gB,MAAmB5gB,OAAOE,KAAKqa,IAC7D,OAAOwG,EAAW/kB,QAAO9D,IAAM4a,EAAM3W,SAASjE,KAEzC,SAAS8oB,EAAqBD,EAAYviB,EAAM+b,EAAiB,IACtE,OAAOwG,EACNh2B,KAAImN,GAAKqiB,EAAeriB,IAAM0oB,EAAc1oB,KAAI8D,QAAOmV,KAAUA,IAAM1mB,QAAO,CAACgN,EAAQ0Z,KAAS,OAAa1Z,EAAQ0Z,EAAK3S,KAAQ,mECrB9H,MAAM7E,EAAW,CACtBsnB,uBAAwB,IACxBC,qBAAsB,IACtBC,mBAAoB,IACpBC,sBAAuB,IACvBC,sBAAuB,IACvBC,0BAA2B,oDCNtB,MAAMC,EAAQ,CACnBC,wBAAgB,kDCFX,MAAMvnB,EAAY,CACvBwnB,qBAAsB,CACpBhG,UAAW,CACT4B,IAAK,mBAELqE,QAAS,mBAEXjE,QAAS,mECNb,MAAMkE,EAAiB,CACrBlG,UAAW,CACTyB,IAAK,gBAEPO,QAAS,CACP7L,UAAW,SAGFgQ,EAAY,CACvBC,yBAA0B,CACxBpG,UAAW,CACT4B,IAAK,oBAEPI,QAAS,IAEXqE,mBAAoB,IACpBC,SAAUJ,EACVK,aAAc,CACZvG,UAAW,GACXgC,QAAS,CACP+B,YAAa,SAGjBmC,eAAAA,EACAM,mBAAoB,IACpBC,WAAY,CACVzG,UAAW,CACT0B,MAAO,kBAETM,QAAS,IAEX0E,iBAAkB,CAChB1G,UAAW,GACXgC,QAAS,CACPgC,YAAa,QAGjB2C,eAAgB,CACd3G,UAAW,GACXgC,QAAS,CACPiC,mBAAoB,QAGxB2C,aAAc,CACZ5G,UAAW,GACXgC,QAAS,CACPgC,YAAa,QAGjB6C,YAAa,IACbC,kBAAmB,IACnBC,2BAA4B,mCCnDvB,SAAS9E,EAAK9iB,EAAU+kB,EAAYre,EAAK4Q,GAC9C,MAAMrW,EAAUyF,EAAIhX,OAAS,IAAMsQ,EAAStH,KAAKgO,GAAOA,EACxD,OAAOqe,EAAWjC,KAAK7hB,EAASqW,6FCM3B,MAAMuQ,UAA2B,IACtCh5B,YAAYmR,EAAU0B,GAAO,SAC3BY,GACE,IACFrC,MAAMD,EAAU,CACdxH,UAAW,uBAEX4kB,OAAQ,QACPyK,EAAmBlF,gBAAgB3iB,EAAU0B,EAAOY,IAKzDrT,uBAAuB+Q,EAAU0B,EAAOY,GAAW,GACjD,GAAIZ,aAAiBmmB,EACnB,OAAOnmB,EACF,GAAIA,aAAiB1B,EAASmE,kBAAkB,QACrD,MAAO,CACLiZ,OAAQ1b,GAEL,IAAI,OAAMA,GAAQ,CAEvB,MAAMlJ,EAAYwH,EAASqX,iBAAiB,uBAAwB,CAAC3V,EAAO,CAC1EY,SAAAA,KAGF,MAAO,CACL8a,OAFapd,EAASqX,iBAAiB,OAAQ,CAAC3V,EAAMzL,SAASuC,EAAU0H,iBAGzE1H,UAAAA,GAIJ,OAAOkJ,GAAS,GAOdxB,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOlB0tB,aACF,OAAOpuB,KAAKse,KAAK,UAOf9U,gBACF,OAAOxJ,KAAKse,KAAK,aAOfkN,cACF,OAvE6B,EA8E/BoI,aAAaJ,EAAQhqB,EAAWqqB,GAE9B,OADA7zB,KAAKwJ,UAAUoqB,aAAaJ,EAAQhqB,EAAWqqB,GACxC7zB,KAOT8zB,KAAKC,EAASzL,GAEZ,OADAtoB,KAAKwJ,UAAUsqB,KAAK9zB,KAAKouB,OAAQ2F,EAASzL,GACnCtoB,KAOTg0B,SAASR,EAAQlL,GAEf,OADAtoB,KAAKwJ,UAAUwqB,SAASh0B,KAAKouB,OAAQoF,EAAQlL,GACtCtoB,qGC1FJ,MAAM84B,UAAkC,IAC7C,GAEAj5B,YAAYmR,EAAU0B,GACpBzB,MAAMD,GAAU,OAAa,CAC3Bod,OAAQ,SACPpd,EAAS4e,0BAA2B5e,EAAS2e,2BAA4Bjd,GAI5E1S,MAAK,EAAe,CAClB+4B,SAAU/nB,EAASqX,iBAAiB,qBAAsB,cAAe,KAQ7E9W,UACE,OAAON,MAAMM,QAAQ,CACnB6c,QAAQ,IAQRpG,gBACF,OAAOhoB,KAAKse,KAAK,aAOfgV,UACF,OAAOtzB,KAAKse,KAAK,OAOfsX,kBACF,OAAO51B,KAAKse,KAAK,eAOf8P,aACF,OAAOpuB,KAAKse,KAAK,UAOfiV,YACF,OAAOvzB,KAAKse,KAAK,SAOfuX,kBACF,OAAO71B,KAAKse,KAAK,eAOfmV,UACF,OAAOzzB,KAAKse,KAAK,OAOfwX,yBACF,OAAO91B,KAAKse,KAAK,sBAQfwZ,cACF,OAAO93B,KAAKse,KAAK,WAOnBwV,KAAKiC,GAMH,OAAO,OAAK/1B,KAAKgR,SAAU+kB,EAAY/1B,KAAKoR,MAAM,CAChDgd,QAAQ,IACNpuB,MAAK,qKCnHb,MAAMg5B,EAAiB,IAAI/rB,WAAW,KAAKgsB,KAAK,GAEhD,SAASC,EAAUloB,EAAUklB,GAC3B,OAAOllB,EAASqX,iBAAiB,UAAW,EAAC,OAAM6N,IAAW,OAASA,GAAWA,IAS7E,MAAMiD,UAAoC,IAC/C,GAEAt5B,YAAYmR,EAAU0B,GAAO,SAC3BY,GACE,IACF,MAAM8lB,EAAYpoB,EAAS4e,0BAC3B3e,MAAMD,GAAU,OAChB,CACEwiB,OAAQ,UACRhqB,UAAW,sBACV4vB,GAAYD,EAA4BE,yBAAyB3mB,EAAOY,IAC3EtT,MAAK,EAAYoW,OAAOE,KAAK8iB,IAC7B,OAAiBp5B,KAAMA,MAAK,GAAWsO,GAAKtO,KAAKiF,IAAIqJ,KAKvDrO,gCAAgCyS,EAAOY,GAAW,GAChD,OAAKZ,IAEMA,aAAiBymB,GAIrB7lB,GAHEZ,EAFA,KAYPxB,oBACF,OAAOlR,KAAKsT,SAAWrC,MAAMC,cAAgB,EAO3CoC,eACF,OAAQtT,KAAKwJ,UAAU6H,QAOrBiiB,UACF,OAAOtzB,KAAKse,KAAK,OAOfiV,YACF,OAAOvzB,KAAKse,KAAK,SAOf9U,gBAEF,OAAOxJ,KAAKs5B,eAAe5mB,OAAS1S,KAAKs5B,eAOvCA,qBACF,OAAOt5B,KAAKse,KAAK,aAOfkV,aACF,OAAOxzB,KAAKse,KAAK,UAOfmV,UACF,OAAOzzB,KAAKse,KAAK,OAGnBib,iBAAiB/F,EAAQhqB,EAAWqqB,GAElC,IAAK,IAAI7yB,EAAI,EAAGA,EAAIhB,MAAK,EAAUU,OAAQM,IAAK,CAC9C,MAAMsN,EAAItO,MAAK,EAAUgB,GACnBoM,EAAIymB,EAAQ5uB,IAAIqJ,IAEjB,OAAYlB,IACfpN,KAAKmF,IAAImJ,EAAGlB,GAOhB,OAFApN,KAAKmF,IAAI,SAAUquB,GACnBxzB,KAAKmF,IAAI,YAAaqE,GACfxJ,KAOT4zB,aAAaJ,EAAQhqB,EAAWqqB,GAC9B,OAAO7zB,KAAKu5B,iBAAiBL,EAAUl5B,KAAKgR,SAAUwiB,GAASxzB,KAAKgR,SAASqX,iBAAiB,qBAAsB,CAAC7e,IAAa,IAAI,IAA0BxJ,KAAKgR,SAAU6iB,IAOjL2F,cAAcpL,EAAQ9F,GACpB,MAAM,IACJgL,EACA8C,gBAAgB,YACdP,EAAW,mBACXC,IAEAxN,EACJ,OAAO,IAAI,IAA0BtoB,KAAKgR,UAAU,OAAa,GAAIsX,EAAS,CAC5EgL,IAAKA,GAAO,KACZlF,OAAQA,EAAOrjB,QACf8qB,YAAAA,EACAC,mBAAAA,KAQJhC,KAAK1F,EAAQ2F,EAASzL,IACpB,QAAOyL,GAAWA,EAAQ0F,YAAY,IAAM,gDAA+C,OAAU1F,OACrG,MAAMF,EAAU7zB,KAAKw5B,cAAcpL,EAAQ9F,GAC3C,OAAOtoB,KAAKu5B,iBAAiBL,EAAUl5B,KAAKgR,SAAU+iB,EAAQ0F,YAAaz5B,KAAKgR,SAASqX,iBAAiB,qBAAsB,CAACwL,EAAQC,KAAKC,KAAYF,GAO5JG,SAAS5F,EAAQ8H,EAAS5N,IACxB,QAAO4N,GAAS,IAAM,gDAA+C,OAAUA,OAC/E,MAAMrC,EAAU7zB,KAAKw5B,cAAcpL,EAAQ9F,GAC3C,OAAOtoB,KAAKu5B,iBAAiBL,EAAUl5B,KAAKgR,SAAUklB,GAAUl2B,KAAKgR,SAASqX,iBAAiB,qBAAsB,CAAC2Q,IAAkBnF,GAQ1IziB,MAAMY,GACJ,OAAOhS,KAAKsT,SAAWrC,MAAMG,MAAMY,GAAU,yQChLjD,SAASugB,EAAgB7f,GACvB,IAAI,OAAMA,IAAUjS,MAAM0W,QAAQzE,GAChC,OAAO,OAASA,GACX,IAAKA,EACV,OAAO,IAAIzF,WACN,IAAI,QAAMyF,GACf,OAAO,OAASA,GACX,IAAI,OAASA,GAClB,OAAO,OAAcA,EAAMrF,YAG7B,MAAM,IAAIvI,MAAM,qEAAqE4N,GAWhF,MAAMgnB,UAAyB,IACpC75B,YAAYmR,EAAU0B,GACpB,MAAM+E,EAAU8a,EAAgB7f,IAEhC,QAAO+E,EAAQ/W,QAAU,KAAO+W,EAAQhF,MAAK1T,GAAKA,KAAI,IAAM,wDAAwD0Y,EAAQ/W,WAC5HuQ,MAAMD,EAAUyG,EAAS,KAO3BnG,GAAG9P,GACD,OAAOyP,MAAMK,GAAGihB,EAAgB/wB,IAOlCoQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKqN,WAOdA,WACE,OAAO,OAAcrN,KAAMA,KAAKgR,SAASic,WAO3Cja,YACE,MAAO,sLCrEX,MAIM2mB,EAAY,IAAI,IAAJ,CAJG,KAKfC,EAAY,IAAI,IAAJ,CAAO,GAAGC,KAAK,IAC3BC,EAAY,IAAI,IAAJ,CAAO,GAAGD,KAAK,IAGjC,SAASE,EAAmBrnB,GAE1B,OAAIA,aAAiBsnB,EAGZtnB,EAAMwB,QACJ,OAAKxB,KAAU,OAASA,KAAU,QAAMA,KAAU,OAAMA,KAAU,OAASA,GAC7EA,EAGFqnB,GAAmB,OAAcrnB,IAUnC,MAAMsnB,UAA4B,IACvCn6B,YAAYmR,EAAU0B,EAAQ,IAAI,IAAJ,CAAO,IACnCzB,MAAMD,EAAU+oB,EAAmBrnB,IAGrCzS,kBAAkBgf,GAChB,MAAMvM,GAAQ,OAAOuM,GAErB,OAAIvM,EAAMunB,IAAIN,GACL,EACEjnB,EAAMwnB,GAAGN,GACX,EACElnB,EAAMwnB,GAAGJ,GACX,EAGF,EAGT75B,kBAAkBkiB,GAChB,MAAMgY,EAAQhY,EAAM,GAEpB,OAlDiB,MAkDbgY,EACK,CAAC,EAAG,GAlDI,MAmDNA,EACF,CAAC,EAAG,GAnDI,MAoDNA,EACF,CAAC,EAAG,GAGN,CAAC,EAAG,GAGbl6B,mBAAmBkiB,GACjB,OAAQA,EAAMzhB,QACZ,KAAK,EACH,OAAO,IAAIuM,WAAW,CAhET,MAkEf,KAAK,EACH,OAAO,IAAIA,WAAW,CAlET,MAoEf,KAAK,EACH,OAAO,IAAIA,WAAW,CApET,MAsEf,QACE,OAAO,IAAIA,WAAW,KAQ5BqE,GAAG9P,GAED,OAAI,OAAKA,KAAU,OAASA,GACnByP,MAAMK,GAAG9P,GAIXyP,MAAMK,GAAGtR,KAAKgR,SAASqX,iBAAiB,eAAgB,CAAC7mB,KAOlEoQ,UACE,OAAO5R,KAAK8R,SAOdA,SACE,OAAO9R,KAAKqN,WAOdA,WACE,MAAM3M,EAASs5B,EAAoBI,WAAWp6B,MAC9C,OAAO,OAAcA,KAAKoR,QAAQnK,SAAS,EAAGvG,GAASV,KAAKgR,SAASic,WAOvEja,YACE,MAAO,6ECtHJ,MAAMqnB,UAAqB,IAChCx6B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,CACdnI,OAAQ,SAERyxB,WAAY,kBACX5nB,GAOD6nB,kBACF,OAAOv6B,KAAKgR,SAAStH,KAAK1J,KAAKoR,SAO7BkpB,iBACF,OAAOt6B,KAAKse,KAAK,cAOf5U,WACF,OAAO1J,KAAK6I,OAAOa,KAOjBb,aACF,OAAO7I,KAAKse,KAAK,yICnCrB,SAASkc,EAAWxpB,EAAUwgB,GAC5B,OAAOA,EAAKrF,OAAOtrB,QAAO,CAACgN,GACzB7B,KAAAA,EACA4I,KAAAA,GACCyB,KACDxI,EAAO7B,EAAK8M,SAAS,QAAQzC,KAAShJ,YAAc2D,EAASqY,iBAAiBzU,GACvE/G,IACN,IAsEE,MAAM4sB,UAAyB,IACpC56B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU0B,EAAO,KAUpB,MAAMgoB,UAAoB,IAC/B76B,YAAYmR,EAAU0B,EAAO8e,GAC3B,MAAM/Z,EA9BV,SAAoBzG,EAAU0B,EAAQ,IAAIzF,WAAc0tB,GACtD,IAAI,OAAMjoB,KAAU,QAAMA,GACxB,OA7BJ,SAA0B1B,EAAU0B,EAAOioB,GAEzC,MAAMzM,EAAYld,EAASwc,eAAeviB,QAC1CijB,EAAU/oB,IAAIuN,EAAMzL,SAAS,EAAG,GAAI,GAEpC,MAAMuqB,EAAOmJ,GAAS3pB,EAASid,aAAaC,GAAWsD,KAEvD,MAAO,CACLpF,KAAM1Z,EAAMzL,SAAS,GACrBosB,QAASmH,EAAWxpB,EAAUwgB,GAC9BtD,UAAAA,EACAsD,KAAAA,GAkBOoJ,CAAiB5pB,GAAU,OAAS0B,GAAQioB,GAC9C,IAAI,OAASjoB,IAAUA,EAAMwb,WAAaxb,EAAM0Z,KACrD,OArDJ,SAA6Bpb,EAAU0B,EAAOioB,GAE5C,MAAM,KACJvO,EAAI,UACJ8B,GACExb,EAGE0W,EAAc8E,aAAqBuM,EAAmBvM,EAAU9c,QAAU8c,EAE1EsD,EAAOmJ,GAAS3pB,EAASid,aAAa7E,GAAaoI,KAEzD,MAAO,CACLpF,KAAAA,EACAiH,QAASmH,EAAWxpB,EAAUwgB,GAC9BtD,UAAAA,EACAsD,KAAAA,GAqCOqJ,CAAoB7pB,EAAU0B,EAAOioB,GAG9C,MAAM,IAAI71B,MAAM,8BAA8B4N,qBAAyBA,KAuBrDooB,CAAW9pB,EAAU0B,EAAO8e,GAE5C,IACEvgB,MAAMD,EAAU,CACdkd,UAAWuM,EAEXrO,KAAM,SAAY3U,EAAQ4b,UACzB5b,GACH,MAAOzN,GACP,IAAIokB,EAAS,kBAEb,IACE,MAAM/C,EAAIra,EAASid,aAAaxW,EAAQyW,WACxCE,EAAS,GAAG/C,EAAE8C,WAAW9C,EAAE+C,SAC3B,MAAOpkB,IAGT,MAAM,IAAIlF,MAAM,yBAAyBspB,OAAYpkB,EAAM6M,WAG7D7W,KAAK26B,MAAQljB,EAAQ+Z,KAOnBpF,WACF,MAAO,IAAIpsB,KAAKse,KAAK,QAAQnI,UAO3Bkd,cACF,OAAOmH,EAAWx6B,KAAKgR,SAAUhR,KAAKwxB,MAOpCuJ,kBACF,MAAO,IAAI/6B,KAAKse,KAAK,QAAQ/G,WAO3B2W,gBACF,OAAOluB,KAAKse,KAAK,aAAalN,QAO5BxF,WACF,OAAO5L,KAAKse,KAAK,QAAQlN,QAOvBogB,WACF,OAAOxxB,KAAK26B,MAOVvM,aACF,OAAOpuB,KAAKgR,SAASid,aAAajuB,KAAKkuB,WAAWE,OAOhDD,cACF,OAAOnuB,KAAKgR,SAASid,aAAajuB,KAAKkuB,WAAWC,QAOpDuF,GAAGlyB,GACD,OAAOA,EAAM0sB,UAAU,KAAOluB,KAAKkuB,UAAU,IAAM1sB,EAAM0sB,UAAU,KAAOluB,KAAKkuB,UAAU,GAO3Ftc,QAAQuC,GACN,IAAI6mB,EAAOC,EAEX,IAAIC,EAEJ,IACEA,EAAOl7B,KAAKgR,SAASid,aAAajuB,KAAKkuB,WACvC,MAAOlkB,IAGT,OAAO,OAAa,CAClBoiB,KAAMpsB,KAAK+6B,YAAYl6B,QAAO,CAACurB,GAAOntB,EAAGH,MAAO,OAAastB,EAAM,CACjE,CAACntB,GAAIH,EAAE8S,QAAQuC,MACb,IACJia,OAA2B,QAAlB4M,EAAQE,SAA4B,IAAVF,OAAmB,EAASA,EAAM5M,OACrED,QAA6B,QAAnB8M,EAASC,SAA6B,IAAXD,OAAoB,EAASA,EAAO9M,SACxEha,GAAc+mB,EAAO,CACtB7J,KAAM6J,EAAK1J,KAAKH,KAAKlwB,KAAI0C,GAAKA,EAAEwJ,cAC9B,MAON2F,YACE,MAAO,wGC/NX,SAASmoB,EAAYnqB,EAAU4D,EAAMlC,EAAO0oB,GAAU,GAEpD,OAAI1oB,IAAS,OAAWA,EAAMsG,iBACrBtG,EAGF1B,EAASqX,iBAAiBzT,EAAM,CAACwmB,GAAU,OAAO1oB,KAAU,OAAYA,GAAS,KAAOjS,MAAM0W,QAAQzE,GAASA,EAAQ,CAACA,GAASA,IAmBnI,MAAM2oB,UAA+B,IAC1Cx7B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAdV,SAAgBA,EAAU0B,GACxB,OACAA,IAAS,OAAWA,EAAM6E,SAAW,IAAI7E,EAAM6E,WAAanB,OAAOmB,QAAQ7E,GAAS,KAAK7R,QAAO,CAACyoB,GAAMrgB,EAAKyJ,MAC1G4W,EAAIrgB,GAPR,SAAqB+H,EAAU/H,EAAKyJ,GAClC,MAAe,eAARzJ,EAAuBkyB,EAAYnqB,EAAU,cAAe0B,GAAO,GAAiB,kBAARzJ,EAA0BkyB,EAAYnqB,EAAU,mBAAoB0B,GAAiB,gBAARzJ,EAAwBkyB,EAAYnqB,EAAU,oBAAqB0B,GAASA,EAM/N4oB,CAAYtqB,EAAU/H,EAAKyJ,GAC/B4W,IACN,CACD6D,WAAYnc,EAASqX,iBAAiB,cAAe,IACrD0E,cAAe/b,EAASqX,iBAAiB,mBAAoB,IAC7DgF,YAAarc,EAASqX,iBAAiB,oBAAqB,MAM5CkT,CAAOvqB,EAAU0B,IAO/Bya,iBACF,OAAOntB,KAAKse,KAAK,cAOfyO,oBACF,OAAO/sB,KAAKse,KAAK,iBAOf+O,kBACF,OAAOrtB,KAAKse,KAAK,0JCpDd,MAAMkd,GAAW,OAAY,QACvBC,GAAW,OAAY,QACvBC,GAAW,OAAY,QACvBC,GAAU,OAAY,QAqB5B,MAAMC,UAAiC,IAC5C/7B,YAAYmR,EAAU0B,GACpBzB,MAAMD,GAAU,OAAS0B,IAAS,OAAQA,EAAO,CAC/CK,MAAM,IACHL,EAAO,IAOVmpB,aACF,OAAO77B,KAAKsR,GAAGkqB,GAObM,aACF,OAAO97B,KAAKsR,GAAGmqB,GAObM,gBACF,OAAO/7B,KAAKsR,GAAGoqB,GAObM,YACF,OAAOh8B,KAAKsR,GAAGqqB,GAOjBM,cAAcn1B,EAAOo1B,GACnB,GAAIA,MAAAA,GAA8DA,EAAkBx7B,OAAQ,CAC1F,GAAIV,KAAK67B,OACP,OAjER,SAAuB7qB,EAAUlK,EAAOo1B,GACtC,OAAOA,EAAkBlrB,EAASqX,iBAAiB,mBAAoB,CAACvhB,EAAMsK,OAAM,KAAQ+qB,WAAW18B,IAAI,IAAI,IAAJ,CAAOy8B,EAAkBx7B,SAASqU,YAgEhIqnB,CAAcp8B,KAAKgR,SAAUlK,EAAOo1B,GACtC,GAAIl8B,KAAK87B,OACd,OA/DR,SAAuB9qB,EAAUlK,EAAOo1B,GAEtC,OAAOA,EADQlrB,EAASqX,iBAAiB,yBAA0B,CAACvhB,EAAMsK,OAAM,KAChDsB,MAAMqC,YA6DzBsnB,CAAcr8B,KAAKgR,SAAUlK,EAAOo1B,GAK/C,GAAIl8B,KAAKg8B,OAA0B,KAAjBl1B,EAAMpG,OACtB,OAhEN,SAA0BsQ,EAAUlK,GAClC,OAAOkK,EAASqX,iBAAiB,YAAa,CAACvhB,IA+DpCw1B,CAAiBt8B,KAAKgR,SAAUlK,GAU3C8K,UACE,OAAO5R,KAAKqN,WAOd2F,YACE,MAAO,oBAOT3F,WACE,OAAOrN,KAAKwe,SAAU,OAAYxe,OAAQ,OAASA,yHChFhD,MAAMu8B,UAAyB,IACpC,GACA,GACA,GAAS,KACT,GACA,GAEA18B,YAAYmR,EAAU0B,EAAO8e,EAAMrD,EAAU,YAAaC,EAAS,aACjE,MAAMjC,GAAUqF,MAAAA,OAAmC,EAASA,EAAKrF,SAAW,GAC5Elb,MAAMD,EAAUmb,EAAOhrB,KAAI,EACzByT,KAAAA,KACI5D,EAASqY,iBAAiBzU,KAAQlC,GACxC1S,MAAK,EAAQwxB,EACbxxB,MAAK,EAAUouB,EACfpuB,MAAK,EAAWmuB,EAChBnuB,MAAK,EAAWmsB,EAAOhrB,KAAI,EACzByT,KAAAA,KACI5D,EAASmW,OAAOC,WAAWxS,KACjC,MAAMsU,EAAQiD,EAAOhrB,KAAI,EACvB6K,KAAAA,KACIgF,EAASmW,OAAOqV,cAAcxwB,GAAM,KAAIoG,QAAOnT,KAAOA,IAExDiqB,EAAMxoB,SAAWyrB,EAAOzrB,SAC1BV,MAAK,EAASkpB,GACd,OAAiBlpB,KAAMkpB,GAAO,CAACpR,EAAG9W,IAAMhB,KAAKgB,MAQ7CwwB,WACF,OAAOxxB,MAAK,EAOVouB,aACF,OAAOpuB,MAAK,EAOVkpB,YACF,OAAOlpB,MAAK,EAOVmuB,cACF,OAAOnuB,MAAK,EAOVsnB,cACF,OAAOtnB,MAAK,EAOd4R,QAAQC,GACN,GAAoB,OAAhB7R,MAAK,EAAiB,CACxB,MAAMwb,EAAO,GAEb,IAAK,IAAIxa,EAAI,EAAGA,EAAIhB,MAAK,EAAOU,OAAQM,IACtCwa,EAAKxb,MAAK,EAAOgB,IAAMhB,KAAKgB,GAAG4Q,QAAQC,GAGzC,OAAO2J,EAGT,OAAOvK,MAAMW,QAAQC,IAWlB,MAAM4qB,UAAqB,IAGhC58B,YAAYmR,EAAUiO,GACpB,MAAM,SACJyd,EAAQ,MACRhqB,GA3HN,SAAqB1B,EAAU0B,GAC7B,IAAKA,IAAUA,EAAMhS,OACnB,MAAO,CACLg8B,SAAU,KAId,MAAMrmB,EAAQ3D,EAAMzL,SAAS,EAAG,GAChC,MAAO,CACLy1B,SAAU1rB,EAASud,cAAclY,GACjC3D,MAAO,CACL9G,KAAM8G,EAAMzL,SAAS,GACrBoP,MAAAA,IAgHEsmB,CAAY3rB,EAAUiO,GAC1BhO,MAAMD,EAAU,CACdqF,MAAO,UAEPzK,KAAM8wB,GACLhqB,GAOD9G,WACF,OAAO5L,KAAKse,KAAK,QAOfjI,YACF,OAAOrW,KAAKse,KAAK,SAOfkT,WACF,OAAOxxB,KAAK4L,KAAK4lB,KAOfpD,aACF,OAAOpuB,KAAK4L,KAAKwiB,OAOfD,cACF,OAAOnuB,KAAK4L,KAAKuiB,QAOf7G,cACF,OAAOtnB,KAAK4L,KAAK0b,QAOnB1V,QAAQuC,GACN,OAAO,OAAa,CAClBia,OAAQpuB,KAAKouB,OACbD,QAASnuB,KAAKmuB,SACbha,EAAa,CACdkd,KAAMrxB,KAAKwxB,KAAKH,KAAKlwB,KAAI0C,GAAKA,EAAEwJ,cAC9B,KAAM4D,MAAMW,QAAQuC,sMC5LrB,MAAMse,EAAoB,IAAIxlB,WAAW,CAAC,MAsC1C,MAAM2vB,UAA4B,IACvC/8B,YAAYmR,EAAU0B,EAAQ,IAAIzF,YAChCgE,MAAMD,EAfV,SAA8BA,EAAU0B,GACtC,OAAOA,aAAiBkqB,EAAsBlqB,EAAMlB,MAAQkB,aAAiB,KAAoBA,aAAiB,IAAsBA,GAAQ,OAAKA,KAAU,OAASA,KAAU,OAASA,GAAS1B,EAASqX,iBAAiB,eAAgB,CAAC3V,IAAUjS,MAAM0W,QAAQzE,KAAU,QAAMA,KAAU,OAAMA,GAhBzS,SAAmB1B,EAAU0B,GAG3B,GAAqB,KAAjBA,EAAMhS,OACR,OAAOsQ,EAASqX,iBAAiB,YAAa,CAAC3V,IAC1C,GAAiB,MAAbA,EAAM,GACf,OAAO1B,EAASqX,iBAAiB,YAAa,CAAC3V,EAAMzL,SAAS,KAGhE,MAAOxB,EAAQ/E,GAAU,eAA+BgS,GACxD,OAAO1B,EAASqX,iBAAiB,eAAgB,EAAC,OAAQ3V,EAAMzL,SAASxB,EAAQA,EAAS/E,MAMsNuc,CAAUjM,GAAU,OAAS0B,IAvB/U,SAAsB1B,EAAU0B,GAC9B,MAAM+E,GAAU,OAAc/E,GAC9B,OAA0B,KAAnB+E,EAAQ/W,OAAgBsQ,EAASqX,iBAAiB,YAAa,CAAC5Q,IAAYzG,EAASqX,iBAAiB,eAAgB,EAAC,OAAQ5Q,GAAS,KAqBwMkb,CAAa3hB,EAAU0B,GAc5VkgB,CAAqB5hB,EAAU0B,IAO7CxB,oBACF,MAAM2hB,EAAY7yB,KAAK8yB,WACvB,OAAOD,GACPA,EAAY,EAAI,EAAI,GAOlBC,iBACF,OAAO9yB,KAAKwR,iBAAiB,IAAsB,eAA+BxR,KAAKwR,OAASxR,KAAKwR,MAAMN,cAO7GK,UACE,MAAMmB,EAAQ1S,KAAKwR,MAAMJ,QAAQnK,SAAS,EAAGjH,KAAK8yB,YAClD,MAAO,CACLphB,MAAO,CAAC,IAAIzE,WAAWjN,KAAKwR,iBAAiB,IAAsB,gBAAgCkB,GAAS+f,GAAoB/f,IAQpI3H,QACE,OAAO,OAAS/K,KAAKoR,SAOvB4B,YACE,MAAO,UAQT5B,MAAMY,GACJ,MAAMC,EAAUjS,KAAKwR,MAAMJ,QAAQnK,SAAS,EAAGjH,KAAK8yB,YACpD,OAAO9gB,EAASC,GAAU,OAAUjS,KAAKwR,iBAAiB,IAAsB,gBAAgCS,GAAWwgB,EAAmBxgB,8IC/FlJ,SAASgL,EAAUjM,EAAU0G,GAC3B,MAAI,CAAC,EAAG,IAAInF,SAASmF,EAAIhX,QAChB,CACLm8B,GAAInlB,GAEkB,KAAfA,EAAIhX,OACN,CACLo8B,UAAWplB,GAEJA,EAAIhX,QAAU,EAChB,CACLq8B,MAAO/rB,EAASqX,iBAAiB,eAAgB,CAAC3Q,IAAM3C,YAIrD2C,EAwBF,MAAMslB,UAA4B,IACvCn9B,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,CACd6rB,GAAI,YACJE,MAAO,wBACPxe,IAAK,QAEL0e,UAAW,OAEXH,UAAW,QA9BjB,SAAwB9rB,EAAU0B,GAChC,OAAIA,aAAiB,IACZ,CACLmqB,GAAInqB,IAEG,OAAMA,GAERuK,EAAUjM,EAAU0B,GAClBA,aAAiBsqB,EACnBtqB,EACEA,aAAiB,MAAuB,OAAKA,KAAU,OAASA,GAClE,CACLqqB,OAAO,OAASrqB,GAASA,EAAQA,EAAMqC,aAEhC,OAASrC,GACXuK,EAAUjM,GAAU,OAAc0B,EAAMrF,aAG1CqF,EAaFwqB,CAAelsB,EAAU0B,IAO9BnB,UACE,MAAM,MACJC,EAAK,MACLE,EAAQ,IACN1R,KAAKwR,MAAMD,UACf,MAAO,CACLC,MAAAA,EACAE,MAAO,CAAC,IAAIzE,WAAW,CAACjN,KAAKqW,WAAY3E,IAQ7CrE,WACE,OAAOrN,KAAK0S,MAAMrF,iICpEtB,SAAS8vB,EAAezqB,GACtB,OAAOA,EAAQ,IAAIzF,WAAW,CAACmwB,MAAwB,IAAInwB,WAAW,CAPvD,IA0CV,MAAMowB,UAAoB,IAC/B,GACA,GAEAx9B,YAAYmR,EAAU0B,GAIpB,MAAM+E,EA1BV,SAAoBzG,EAAU0B,GAC5B,OAAI,OAAMA,GAbZ,SAAuBA,GACrB,OAAOA,EAAMhS,OAASgS,EAAMzL,SAAS,EAAG,GAAK,IAAIgG,WAAW,CAb7C,IA0BNqwB,CAAc5qB,IACZ,OAAYA,IAAUA,aAAiByL,UAAW,OAAUzL,GAC9DyqB,EAAe,IAAI,IAAKnsB,EAAU0B,GAAO0K,SACvC,OAAS1K,GACXyqB,EAAezqB,EAAQ,GAZlC,SAAwB1B,EAAU0B,GAChC,OAAO,IAAIzF,WAAW,EAAE,IAAI,IAAK+D,EAAU0B,EAAM6qB,KAAKngB,OApBvC,IACA,GAmBuEpM,EAASqX,iBAAiB,aAAc,CAAC3V,EAAM8qB,YAjBtH,IAiB+InnB,QAcvJonB,CAAezsB,EAAU0B,GAiBdgrB,CAAW1sB,EAAU0B,GACrCzB,MAAMD,EAAUyG,EAAS,GACzBzX,MAAK,EArDQ,UAqDAyX,EAAQ,IACrBzX,MAAK,EAAcA,KAAKgR,SAASqX,iBAAiB,aAAc,CApDnD,IAoDoD5Q,EAAQ,KAOvE+lB,iBACF,OAAOx9B,MAAK,EAOV29B,YACF,OAAO39B,MAAK,EAOV49B,YACF,OAAQ59B,KAAK29B,MAOf/rB,QAAQuC,GACN,MAAO,CACLqpB,WAAYx9B,KAAKw9B,WAAW5rB,QAAQuC,GACpC0pB,KAAM79B,KAAK29B,MAAQ,MAAQ,OAQ/B3qB,YACE,MAAO,qqDClGX,MAAM8qB,EAAa,CACjBC,OAAQ,CACNC,SAAU,gBACVC,YAAa,mBACbC,QAAS,gBACTC,eAAgB,uBAElBC,KAAM,CACJC,kBAAmB,yBAErBC,SAAU,CACRC,OAAQ,iBAEVC,MAAO,CACLC,YAAa,WAEfC,UAAW,CACTC,WAAY,sBAEdC,2BAA4B,CAC1BC,MAAO,iBAETC,SAAU,CACRC,MAAO,WACPC,OAAQ,YACRC,QAAS,aACTC,YAAa,iBACbC,kBAAmB,wBAErBC,IAAK,CACHC,QAAS,aACTC,IAAK,SACLC,SAAU,eAEZC,QAAS,CACPC,aAAc,sBACdpB,kBAAmB,4BAErBqB,SAAU,CACRC,UAAW,qBAEbC,UAAW,CACTC,eAAgB,sBAElBC,aAAc,CACZD,eAAgB,sBAElBE,cAAe,CACbF,eAAgB,sBAElBG,cAAe,CACbH,eAAgB,sBAElBI,WAAY,CACVJ,eAAgB,sBAElBK,WAAY,CACVrD,GAAI,UAENsD,cAAe,CACbN,eAAgB,sBAElBO,eAAgB,CACdP,eAAgB,sBAElBQ,eAAgB,CACdR,eAAgB,sBAElBS,YAAa,CACXT,eAAgB,sBAElBU,iBAAkB,CAChBC,SAAU,qBAEZC,MAAO,CACLC,aAAc,qBAEhBC,UAAW,CACTd,eAAgB,sBAElBe,OAAQ,CACNf,eAAgB,sBAElBgB,QAAS,CACPlB,UAAW,mBACXmB,KAAM,eAERC,QAAS,CACP1rB,QAAS,sBAEX2rB,SAAU,CACRR,SAAU,oBAEZS,IAAK,CACHC,QAAS,cAEXC,UAAW,CACTD,QAAS,eAON,SAASE,GAAc,WAC5BzT,GACCQ,GACD,IAAIkT,EAEJ,OAAO,OAAa,GAAIvD,EAAW3P,GAA8D,QAAnDkT,EAAwB1T,EAAWmQ,kBAAkD,IAA1BuD,OAAmC,EAASA,EAAsBlT,oDC5G7K,SACEmT,IAAK,GACLzkB,MAAO,CACL0kB,iBAAkB,CAChBC,MAAO,YACPC,SAAU,aAEZC,cAAe,CACbC,OAAQ,gBACRC,QAAS,wBAEXC,aAAc,CACZC,QAAS,gBACTC,SAAU,OACVC,aAAc,QAEhBC,oBAAqB,CACnBC,SAAU,eACVC,YAAa,eACbC,UAAW,gBAEbC,aAAc,CACZb,MAAO,YACPc,OAAQ,YACRC,MAAO,YACPC,QAAS,YACTC,OAAQ,gBACRb,QAAS,uBACTc,WAAY,gBACZV,aAAc,OACdE,SAAU,MACVC,YAAa,MACbC,UAAW,MACXL,SAAU,QAEZY,cAAe,CACbf,QAAS,uBACT51B,KAAM,UACN42B,OAAQ,UACRvuB,SAAU,KACV0tB,SAAU,QAEZc,cAAe,MACfC,qBAAsB,6DC3C1B,SACExB,IAAK,GACLzkB,MAAO,CACLkmB,kBAAmB,CACjBC,QAAS,mBACTC,MAAO,iBACPC,QAAS,kBAEXC,eAAgB,CACdC,aAAc,cACdC,QAAS,eACTC,WAAY,OACZC,iBAAkB,cAClBC,WAAY,aAEdC,iBAAkB,oDCftB,SACEnC,IAAK,GACLzkB,MAAO,CACL6mB,iBAAkB,CAChBvH,WAAY,wDCJlB,SACEmF,IAAK,CACHqC,OAAQ,CACNC,YAAa,uFACb7b,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,SACL,CACD5I,KAAM,UACN4I,KAAM,SAERA,KAAM,QAERivB,eAAgB,CACdD,YAAa,mFACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,UAERA,KAAM,QAERkvB,gBAAiB,CACfF,YAAa,qFACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,yBAERA,KAAM,aAERmvB,UAAW,CACTH,YAAa,kCACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,QACL,CACD5I,KAAM,OACN4I,KAAM,QACL,CACD5I,KAAM,YACN4I,KAAM,UAERA,KAAM,SAERovB,WAAY,CACVJ,YAAa,sEACb7b,OAAQ,GACRnT,KAAM,SAERqvB,kBAAmB,CACjBL,YAAa,gEACb7b,OAAQ,GACRnT,KAAM,kBAERsvB,gBAAiB,CACf5wB,UAAU,EACVswB,YAAa,yDACb7b,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,cAERA,KAAM,QAERuvB,wBAAyB,CACvBP,YAAa,gEACbtwB,UAAU,EACVyU,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,cAERwvB,OAAQ,CAAC,kBAAmB,0BAA2B,oBACvDxvB,KAAM,oBAGViI,MAAO,CACLwnB,gBAAiB,CACf/rB,MAAO,CACLgsB,KAAM,OACNC,UAAW,UAGfC,gBAAiB,CACflsB,MAAO,CACLmsB,OAAQ,OACRC,MAAO,OACPC,UAAW,YACXC,QAAS,OACTC,UAAW,OACXC,gBAAiB,OACjBC,UAAW,OACXC,QAAS,OACTC,QAAS,OACTC,QAAS,0DC3FjB,SACE5D,IAAK,GACLzkB,MAAO,CACLsoB,eAAgB,CACd7sB,MAAO,CACL8sB,gBAAiB,cACjBC,MAAO,+ECNf,SACE/D,IAAK,CACHgE,gBAAiB,CACf1B,YAAa,0HACb7b,OAAQ,GACRnT,KAAM,0CAGViI,MAAO,CACL0oB,aAAc,CACZjtB,MAAO,CAAC,eAAgB,gCAAiC,gCAE3DktB,oBAAqB,MACrBC,uBAAwB,CACtBpa,EAAG,aACHqa,aAAc,gBAEhBC,gBAAiB,MACjBC,sBAAuB,CACrBC,SAAU,cACV1J,WAAY,aACZ2J,YAAa,SACbC,aAAc,UAEhBC,WAAY,MACZC,gBAAiB,qBACjBC,SAAU,kBACVC,gBAAiB,CACfC,QAAS,WACTC,UAAW,WACXC,cAAe,YAEjBC,qBAAsB,CACpBjuB,MAAO,CACLkuB,GAAI,OACJC,GAAI,2BAGRC,uBAAwB,CACtBrb,EAAG,aACHqa,aAAc,gBAEhBiB,WAAY,OACZC,iBAAkB,CAChBtuB,MAAO,CACLuuB,QAAS,OAETC,QAAS,0BACTC,eAAgB,iCAChBC,aAAc,iCAGlBC,wBAAyB,CACvBC,eAAgB,MAEhB/K,WAAY,aACZgL,UAAW,YACXC,SAAU,YAEZC,+BAAgC,CAC9BH,eAAgB,MAEhB/K,WAAY,cAEdmL,6BAA8B,CAC5BJ,eAAgB,MAChB/K,WAAY,aACZgL,UAAW,YACXC,SAAU,YAEZG,sBAAuB,CACrBjvB,MAAO,CACLwuB,QAAS,+BACTU,UAAW,mCAGfC,6BAA8B,CAC5BP,eAAgB,MAChB/K,WAAY,aACZuL,OAAQ,kBACRP,UAAW,YACXC,SAAU,YAEZO,+BAAgC,CAC9BT,eAAgB,MAChB/K,WAAY,aACZuL,OAAQ,mBAMVE,uBAAwB,CACtBtvB,MAAO,CACLuvB,KAAM,MACNC,IAAK,MACLC,IAAK,MACLC,MAAO,QAGXC,WAAY,MACZC,QAAS,WACTC,UAAW,WACXC,SAAU,4DCvGd,SACE9G,IAAK,GACLzkB,MAAO,CACLwrB,YAAa,CACXC,KAAM,UACNC,SAAU,UACVC,WAAY,UACZC,UAAW,WAEbC,iBAAkB,CAChBC,GAAI,iBACJhH,OAAQ,UACRiH,MAAO,cACPC,QAAS,mBAEXC,YAAa,CACXH,GAAI,iBACJhH,OAAQ,UACRkH,QAAS,WAEXE,cAAe,CACbzwB,MAAO,CAAC,OAAQ,aAElB0wB,QAAS,CACP1wB,MAAO,CAAC,MAAO,OAAQ,QAEzB2wB,YAAa,CACXN,GAAI,oBACJhH,OAAQ,WAEVuH,kBAAmB,UACnBC,gBAAiB,CACf1jC,OAAQ,UACR2jC,SAAU,UACVC,cAAe,eAEjBC,gBAAiB,CACf9pB,KAAM,CACJ+pB,mBAAoB,EACpBC,SAAU,EACVC,QAAS,EACTC,IAAK,EACLC,IAAK,sDC1Cb,SACErI,IAAK,CACHsI,wBAAyB,CACvBhG,YAAa,wFACb7b,OAAQ,GACRqc,OAAQ,CAAC,iBAAkB,0BAA2B,6BACtDxvB,KAAM,yBAERi1B,iBAAkB,CAChBjG,YAAa,2EACb7b,OAAQ,GACRnT,KAAM,SAGViI,MAAO,CACLitB,gBAAiB,CACfjW,QAAS,eACTsC,YAAa,cACb4T,eAAgB,kBAElBC,QAAS,WACTC,sBAAuB,CACrBC,WAAY,kBACZC,WAAY,+BAEdC,sBAAuB,CACrBzB,GAAI,MACJ//B,IAAK,MACLyhC,KAAM,QAERC,aAAc,cACdC,YAAa,OACbC,eAAgB,uDChCpB,SACElJ,IAAK,GACLzkB,MAAO,CACL4tB,iBAAkB,OAClBC,mBAAoB,cACpBC,cAAe,SACfC,gBAAiB,yBACjBC,WAAY,CACVvyB,MAAO,CACLwyB,WAAY,OACZC,cAAe,2CACfC,cAAe,cAGnBC,QAAS,UACTC,kBAAmB,CACjBxsB,MAAO,eACP9L,IAAK,eAELu4B,gBAAiB,UAEnBC,mBAAoB,CAClB9yB,MAAO,CAAC,gBAAiB,kBAE3B+yB,gBAAiB,CACfC,SAAU,yBACVC,mBAAoB,gBAEtBC,eAAgB,YAChBC,mBAAoB,CAClB5iC,OAAQ,SACR6iC,cAAe,gBACfC,MAAO,QACPC,SAAU,QAEZC,OAAQ,UACRC,YAAa,CACXjY,QAAS,QACTkY,IAAK,WAEPC,wBAAyB,CACvBC,kBAAmB,YACnBC,aAAc,aACdC,KAAM,UAERC,WAAY,CACVC,OAAQ,SACR9Y,MAAO,gBAET+Y,aAAc,MACdC,gBAAiB,CACfN,kBAAmB,mBACnBC,aAAc,aACdC,KAAM,SACNK,YAAa,eACbC,UAAW,gBAEbC,cAAe,CACbp0B,MAAO,CAAC,SAAU,4BAA6B,WAEjDq0B,iBAAkB,CAChBC,oBAAqB,eACrBC,oBAAqB,eACrBC,qBAAsB,gBAExBC,mBAAoB,UACpBC,gBAAiB,CACfnX,YAAa,MACb6R,OAAQ,SACRuF,OAAQ,aACRC,mBAAoB,qBACpBhS,KAAM,SAERiS,UAAW,OACXC,UAAW,YACXC,kBAAmB,CACjBC,QAAS,YACTC,SAAU,qBAEZC,wBAAyB,CACvBC,0BAA2B,eAC3BC,sBAAuB,eACvBC,cAAe,iEClFrB,SACErM,IAAK,CACHsM,UAAW,CACTprB,MAAO,CAAC,iBACRohB,YAAa,4CACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,UAERk5B,SAAU,CACRlK,YAAa,6CACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,eAERm5B,aAAc,CACZnK,YAAa,0CACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,cACNqT,YAAY,IAEdrT,KAAM,aAERi1B,iBAAkB,CAChBrnB,MAAO,CAAC,0BACRohB,YAAa,0DACb7b,OAAQ,GACRnT,KAAM,aAERo5B,kBAAmB,CACjBxrB,MAAO,CAAC,4BAA6B,oBAAqB,uBAC1DohB,YAAa,6CACb7b,OAAQ,GAERqc,OAAQ,CAAC,UAAW,mBAAoB,sBACxCxvB,KAAM,UAERq5B,wBAAyB,CACvBzrB,MAAO,CAAC,gCAAiC,mCACzCohB,YAAa,uDACb7b,OAAQ,GACRqc,OAAQ,CAAC,gBAAiB,0BAA2B,6BACrDxvB,KAAM,UAERs5B,kBAAmB,CACjBtK,YAAa,+CACb7b,OAAQ,GACRqc,OAAQ,CAAC,UAAW,oBAAqB,uBACzCxvB,KAAM,WAGViI,MAAO,CACLsxB,UAAW,wDC7Df,SACE7M,IAAK,CACH8M,QAAS,CACPxK,YAAa,qFACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,SACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,mBAERy5B,aAAc,CACZ7rB,MAAO,CAAC,6BACRohB,YAAa,4EACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,SACN4I,KAAM,cACL,CACD5I,KAAM,QACN4I,KAAM,OACL,CACD5I,KAAM,WACN4I,KAAM,aACNqT,YAAY,GACX,CACDjc,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,mBAER05B,WAAY,CACV1K,YAAa,0DACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,uBAER25B,kBAAmB,CACjB3K,YAAa,4EACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,OACN4I,KAAM,mBACL,CACD5I,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,4BAER45B,eAAgB,CACd5K,YAAa,6DACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,gBAER65B,eAAgB,CACd7K,YAAa,6DACb7b,OAAQ,CAAC,CACP/b,KAAM,WACN4I,KAAM,sBACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,OACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,gBAGViI,MAAO,CAEL6xB,mBAAoB,8DC7GxB,SACEpN,IAAK,GACLzkB,MAAO,CACL8xB,cAAe,CACbr2B,MAAO,CAAC,UAAW,0DCJzB,SACEgpB,IAAK,GACLzkB,MAAO,CACL+xB,iBAAkB,CAChBt2B,MAAO,CACLu2B,QAAS,6BACTC,OAAQ,cAGZC,YAAa,MACbC,cAAe,MACfC,WAAY,CACV54B,MAAO,gBACP64B,UAAW,cACXC,KAAM,iBACNC,KAAM,kBAERC,MAAO,CACLh5B,MAAO,gBACP64B,UAAW,cACXC,KAAM,iBACNC,KAAM,iBACNx8B,IAAK,gECtBX,SACE0uB,IAAK,GACLzkB,MAAO,CACL4hB,YAAa,YACb6Q,aAAc,4DCHlB,SACEhO,aAAG,EACHzkB,MAAO,CACL0yB,kBAAmB,CACjBC,OAAQ,SACRC,YAAa,MACbC,UAAW,MACXC,SAAU,WACVC,cAAe,UACfC,SAAU,UACVC,YAAa,cACbC,UAAW,sBACXC,UAAW,gBAEbC,SAAU,OACVC,WAAY,CACV53B,MAAO,CACL63B,OAAQ,QACRC,SAAU,SAGdC,kBAAmB,CACjBpD,OAAQ,YACRqD,KAAM,QACNC,oBAAqB,mBAEvBC,iBAAkB,+CAClBC,sBAAuB,CACrBd,SAAU,WACV/N,QAAS,WAEX8O,oBAAqB,CACnBzD,OAAQ,YACRnpB,KAAM,YACNpR,MAAO,UACPi+B,SAAU,MACVJ,oBAAqB,kBACrBK,UAAW,SAEbC,+BAAgC,CAC9BC,OAAQ,KACRllC,KAAM,OAERmlC,wBAAyB,CACvBz4B,MAAO,CACL04B,QAAS,iCACTlsC,MAAO,SAGXmsC,+BAAgC,CAC9BC,MAAO,sBACPtlC,KAAM,QACNulC,YAAa,OAEfC,wBAAyB,CACvB94B,MAAO,CACL04B,QAAS,iCACTlsC,MAAO,SAGXusC,qBAAsB,CACpBH,MAAO,sBACPtlC,KAAM,SAER0lC,yBAA0B,8CAC1BC,wBAAyB,CACvBJ,YAAa,MACbK,aAAc,OACd3jC,OAAQ,4BAEV4jC,mBAAoB,CAClBN,YAAa,MACbO,YAAa,MACbC,eAAgB,iBAChBH,aAAc,OACd3jC,OAAQ,4BAEV+jC,aAAc,CACZt5B,MAAO,CACLu5B,MAAO,oBACPC,UAAW,0BAGfC,kBAAmB,CACjBvyB,KAAM,CACJ+J,WAAY,GACZyoB,aAAc,EACdC,WAAY,EACZC,SAAU,EACVC,aAAc,IAGlBC,oBAAqB,CACnB5yB,KAAM,CACJ+J,WAAY,GACZ8oB,OAAQ,IAGZC,mBAAoB,WACpBC,gBAAiB,CACf7C,UAAW,MACXF,OAAQ,UAEVgD,gBAAiB,CACftB,MAAO,sBACPtlC,KAAM,SAER6mC,IAAK,MACLC,mBAAoB,CAClBC,OAAQ,SACRzc,QAAS,SACT0c,QAAS,SACT9Q,QAAS,SACT+Q,iBAAkB,SAClBC,eAAgB,SAChBC,iBAAkB,SAClBnD,cAAe,SACfzZ,YAAa,SACb6c,IAAK,SACLC,YAAa,SACbC,IAAK,SACL/wB,MAAO,SACPgxB,aAAc,SACdC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,UAAW,SACXC,kBAAmB,SACnBC,OAAQ,SACRC,aAAc,SACdC,qBAAsB,SACtBC,oBAAqB,SACrBC,iBAAkB,SAClBC,WAAY,SACZC,kBAAmB,SACnBC,aAAc,SACd1F,WAAY,SACZ2F,kBAAmB,SACnBC,SAAU,SACVhZ,KAAM,SACNiZ,sBAAuB,SACvBC,iBAAkB,SAClBC,kBAAmB,SACnBC,YAAa,SACbC,wBAAyB,SACzBC,yBAA0B,SAC1BC,YAAa,SACbC,mBAAoB,SACpBC,cAAe,SACfC,qBAAsB,SACtBC,cAAe,SACfC,qBAAsB,SACtBC,cAAe,SACfC,qBAAsB,UAExBC,cAAe,CACbtC,OAAQ,SACRzc,QAAS,SACT0c,QAAS,SACT9Q,QAAS,SACT+Q,iBAAkB,SAClBC,eAAgB,SAChBC,iBAAkB,SAClBnD,cAAe,SACfzZ,YAAa,SACb6c,IAAK,SACLC,YAAa,SACbC,IAAK,SACL/wB,MAAO,SACPgxB,aAAc,SACdC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACX4B,qBAAsB,SACtB3B,UAAW,SACX4B,2BAA4B,SAC5BC,8BAA+B,SAC/B5B,kBAAmB,SACnBC,OAAQ,SACRC,aAAc,SACdC,qBAAsB,SACtBC,oBAAqB,SACrBC,iBAAkB,SAClBC,WAAY,SACZC,kBAAmB,SACnBC,aAAc,SACd1F,WAAY,SACZ2F,kBAAmB,SACnBC,SAAU,SACVhZ,KAAM,SACNma,gBAAiB,SACjBlB,sBAAuB,SACvBC,iBAAkB,SAClBC,kBAAmB,SACnBC,YAAa,SACbgB,uBAAwB,SACxBf,wBAAyB,SACzBC,yBAA0B,SAC1Be,uBAAwB,SACxBd,YAAa,SACbC,mBAAoB,SACpBC,cAAe,SACfC,qBAAsB,SACtBC,cAAe,SACfC,qBAAsB,SACtBC,cAAe,SACfC,qBAAsB,SACtBQ,WAAY,UAEdC,qBAAsB,CACpBxI,OAAQ,YACRv6B,MAAO,UACPi+B,SAAU,MACVL,KAAM,QACN1kC,KAAM,QACN8pC,KAAM,SAERC,qBAAsB,CACpB/qB,UAAW,uBACXqiB,OAAQ,YACRv6B,MAAO,UACPi+B,SAAU,MACVJ,oBAAqB,kBACrBD,KAAM,QACN1kC,KAAM,QACN8pC,KAAM,SAERE,mBAAoB,CAClBhrB,UAAW,uBACXqiB,OAAQ,YACRv6B,MAAO,UACPi+B,SAAU,MACVJ,oBAAqB,kBACrBD,KAAM,aACN1kC,KAAM,QACN8pC,KAAM,SAERG,+BAAgC,4CAChCC,+BAAgC,yCAChCC,0BAA2B,CACzBnrB,UAAW,iCACXumB,YAAa,MACbO,YAAa,MACbC,eAAgB,iBAChBH,aAAc,OACd3jC,OAAQ,0BAEVmoC,4BAA6B,CAC3BnoC,OAAQ,kBACRooC,UAAW,YACXC,eAAgB,0BAElBC,yBAA0B,CACxBtoC,OAAQ,kBACRooC,UAAW,aAEbG,uBAAwB,kDACxBC,mBAAoB,CAClBC,SAAU,MACVC,QAAS,MACTC,SAAU,MACVC,OAAQ,MACRC,IAAK,MACLC,GAAI,MACJC,KAAM,MACNC,QAAS,MACTC,gBAAiB,MACjB5b,KAAM,MACN6b,aAAc,MACdC,qBAAsB,MACtBC,SAAU,MACVC,SAAU,MACVC,UAAW,MACXC,UAAW,MACXC,UAAW,MACXC,cAAe,MACfC,WAAY,MACZC,OAAQ,MACRC,OAAQ,MACRC,UAAW,MACXC,OAAQ,MACRC,cAAe,MACfC,cAAe,MACfC,WAAY,MACZC,MAAO,MACPC,MAAO,MACPC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,OAAQ,MACRC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,OAAQ,MACRC,MAAO,MACPC,OAAQ,MACRC,OAAQ,MACRC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,OAEXC,YAAa,CACXC,YAAa,MACbC,YAAa,MACbC,QAAS,MACTC,WAAY,MACZC,YAAa,MACbC,UAAW,MACXC,YAAa,MACbC,WAAY,MACZC,SAAU,OAEZC,OAAQ,CACNT,YAAa,MACbC,YAAa,MACbC,QAAS,MACTC,WAAY,MACZC,YAAa,MACbC,UAAW,MACXC,YAAa,MACbC,WAAY,OAEdG,iBAAkB,CAChBC,gBAAiB,eACjBC,QAAS,eACTC,QAAS,eACTC,SAAU,eACVvK,UAAW,eACXM,KAAM,QACNkK,gBAAiB,OAEnBC,eAAgB,CACdniC,MAAO,CACLoiC,WAAY,cACZC,WAAY,SAGhBC,cAAe,CACbpvB,QAAS,MACTqvB,mBAAoB,MACpBC,YAAa,MACbC,cAAe,MACfC,sBAAuB,MACvBC,qBAAsB,MACtBC,kBAAmB,MACnBC,cAAe,MACfC,oBAAqB,MACrBC,qBAAsB,MACtBC,eAAgB,MAChBC,eAAgB,MAChBC,eAAgB,MAChBC,cAAe,OACfC,cAAe,OAEjBC,cAAe,CACbnwB,QAAS,MACTqvB,mBAAoB,MACpBC,YAAa,MACbC,cAAe,MACfC,sBAAuB,MACvBC,qBAAsB,MACtBC,kBAAmB,MACnBC,cAAe,MACfC,oBAAqB,MACrBC,qBAAsB,MACtBO,aAAc,MACdN,eAAgB,MAChBC,eAAgB,MAChBC,eAAgB,MAChBC,cAAe,OACfC,cAAe,OAEjBG,cAAe,CACbrwB,QAAS,MACTiwB,cAAe,OACfK,OAAQ,cACRC,mBAAoB,qBACpBC,cAAe,sBAEjBC,SAAU,CACRzwB,QAAS,MACTiwB,cAAe,OACfK,OAAQ,SACRC,mBAAoB,qBACpBC,cAAe,iBAEjBE,OAAQ,OACRC,eAAgB,CACd7jC,MAAO,CACL8jC,OAAQ,UACRC,OAAQ,YAGZC,sBAAuB,OACvBC,OAAQ,yDCpZZ,SACErhB,KAAM,CACJ0I,YAAa,gCACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,uBACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,sBAER0/B,YAAa,CACX1Q,YAAa,6BACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,sBACL,CACD5I,KAAM,KACN4I,KAAM,YACN4nC,WAAW,EACXv0B,YAAY,IAEdrT,KAAM,6BAER6nC,WAAY,CAGVC,SAAU,wBACV9Y,YAAa,2DACb7b,OAAQ,CAAC,CACP/b,KAAM,gBACN4I,KAAM,qBACL,CACD5I,KAAM,KACN4I,KAAM,YACN4nC,WAAW,EACXv0B,YAAY,IAEdrT,KAAM,oBAER05B,WAAY,CACV1K,YAAa,gEACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,aACL,CACD5I,KAAM,MACN4I,KAAM,QACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,iBAERshC,eAAgB,CACdtS,YAAa,sFACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,aACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,qFCrEV,MAsKM+nC,EAAqB,CACzB9/B,MAAO,eACP2S,KAAM,0BAcFotB,EAAsB,CAC1BC,OAAQ,wBACRC,SAAU,2BAUZ,GACExb,IAAK,GACLzkB,OAAO,OAAa,GApMP,CACbkgC,qBAAsB,CACpBzkC,MAAO,CAAC,aAAc,WAAY,cAEpC0kC,qBAAsB,MACtBC,oBAAqB,CACnBx3C,OAAQ,oBACRmD,IAAK,MACLs0C,aAAc,MACdC,OAAQ,yBAEVC,mBAAoB,CAClBn0C,IAAK,oBACLo0C,GAAI,kBAENC,mBAAoB,CAClBC,YAAa,oBACb3xB,SAAU,wDAEZ4xB,mBAAoB,CAClB/3C,OAAQ,oBACRg4C,SAAU,gCACVN,OAAQ,yBAEVO,8BAA+B,CAC7BntB,OAAQ,uBACRotB,QAAS,UACTxzC,OAAQ,WAEVyzC,kBAAmB,WACnBC,qBAAsB,CACpB1xB,OAAQ,kCAEV2xB,0BAA2B,CACzBX,OAAQ,wBACRnxC,KAAM,QAER+xC,sBAAuB,CACrBzlC,MAAO,CACL0lC,KAAM,qBACN1Z,KAAM,qBACN7jC,MAAO,sBACPgf,OAAQ,uBACR3I,KAAM,wBAIC,CACXmnC,0BAA2B,CACzBjyC,KAAM,OACNkyC,SAAU,mBACV9xB,KAAM,kCACNiF,KAAM,aAER8sB,0BAA2B,CACzBnyC,KAAM,YACNkyC,SAAU,mBACV9xB,KAAM,kCACNiF,KAAM,aAER+sB,0BAA2B,CACzBC,MAAO,OACPH,SAAU,mBACV9xB,KAAM,kCACNiF,KAAM,aAERitB,0BAA2B,CACzBD,MAAO,OACPH,SAAU,mBACVK,QAAS,OACTnyB,KAAM,kCACNiF,KAAM,aAERmtB,uBAAwB,CACtBC,aAAc,iCACdlR,SAAU,6BACVhc,OAAQ,2BACRF,KAAM,aAERqtB,uBAAwB,CACtBD,aAAc,iCACdlR,SAAU,6BACVhc,OAAQ,2BACRF,KAAM,aAERstB,uBAAwB,CACtBF,aAAc,iCACdlR,SAAU,6BACVhc,OAAQ,2BACRF,KAAM,aAERutB,uBAAwB,CACtBH,aAAc,iCACdlR,SAAU,6BACVhc,OAAQ,2BACRF,KAAM,aAERwtB,oBAAqB,SACrBC,yBAA0B,CACxB9yC,KAAM,OACN+yC,QAAS,OACTnqC,KAAM,mBACNyc,KAAM,aAER2tB,yBAA0B,CACxBX,MAAO,OACPU,QAAS,OACTnqC,KAAM,mBACNyc,KAAM,aAER4tB,oBAAqB,CACnBjzC,KAAM,OACNogB,KAAM,gCACNiF,KAAM,aAER6tB,oBAAqB,CACnBlzC,KAAM,OACNogB,KAAM,gCACNiF,KAAM,aAER8tB,oBAAqB,CACnBd,MAAO,OACPjyB,KAAM,gCACNiF,KAAM,aAER+tB,2BAA4B,CAC1BpzC,KAAM,OACN4I,KAAM,oBAERyqC,2BAA4B,CAC1BhB,MAAO,OACPzpC,KAAM,oBAER0qC,sBAAuB,CACrBtzC,KAAM,OACNkyC,SAAU,mBACVqB,QAAS,OACThB,QAAS,OACTnyB,KAAM,kCACNozB,WAAY,2BACZnuB,KAAM,aAERouB,sBAAuB,CACrBzzC,KAAM,YACNkyC,SAAU,mBACVqB,QAAS,OACThB,QAAS,OACTnyB,KAAM,kCACNozB,WAAY,2BACZnuB,KAAM,aAERquB,sBAAuB,CACrBrB,MAAO,OACPH,SAAU,mBACVqB,QAAS,OACThB,QAAS,OACTnyB,KAAM,kCACNozB,WAAY,2BACZnuB,KAAM,aAERsuB,iBAAkB,UAClBC,iBAAkB,CAChBhrC,KAAM,iBACN6R,YAAa,wBAuBF,CACbo5B,8BAA+B,4BAC/BC,wBAAyB,sBACzBC,6BAA8B,2BAC9BC,+BAAgC,6BAChCC,0BAA2B,wBAC3BC,uBAAwB,sBAIsB,CAC5CtD,oBAAAA,EACAD,mBAAAA,EACAwD,mBA7BuB,CACzBtjC,MAAO,oBACP2S,KAAM,0BA4BJ4wB,mBA1BuB,CACzBvjC,MAAO,oBACP2S,KAAM,0BAyBJ6wB,mBAvBuB,CACzBxjC,MAAO,oBACP2S,KAAM,0BAsBJ8wB,iBAAkB,CAChBhoC,MAAO,CACLkuB,GAAI,qBACJC,GAAI,qBACJ8Z,GAAI,qBACJC,GAAI,uBAGRC,mBAAmB,OAAa,CAC9BC,gBAAiB,QAChB9D,EAAqBD,GACxBgE,gBAAiB,0CACjBC,wBAAyB,CACvBp3B,OAAQ,CACN6H,KAAM,iBAERrlB,KAAM,OACNwf,QAAS,OACTq1B,QAAS,YACTjd,YAAa,eACbvS,KAAM,eACNyvB,WAAY,eACZC,SAAU,eACVC,QAAS,gBAEXC,sBAAuB,CACrBz3B,OAAQ,CACN03B,SAAU,QAEZA,SAAU,WACVC,SAAU,OACVC,SAAU,OACVC,KAAM,yDC3OZ,SACE/f,IAAK,GACLzkB,MAAO,CACLykC,UAAW,MACXC,iBAAkB,CAChBjpC,MAAO,CACLkpC,MAAO,OACPC,UAAW,MACXC,OAAQ,gBAGZC,SAAU,CACRC,UAAW,YACXC,SAAU,sBACVjgB,QAAS,UACTkgB,OAAQ,UACRlvC,IAAK,cACLmvC,IAAK,UACLC,iBAAkB,mBAClBC,YAAa,cACbC,WAAY,cACZC,UAAW,aAEbC,UAAW,uDCvBf,MAaA,GACE9gB,IAAK,GACLzkB,MAfe,CACfwlC,WAAY,CACVC,cAAe,UAEjBC,UAAW,WACXC,gBAAiB,MACjBC,YAAa,MACbC,cAAe,CACbC,UAAW,cACXC,QAAS,cACTC,gBAAiB,6oDCVd,MAQP,GACEvhB,IAAK,GACLzkB,MAAO,CACLimC,YAAa,CACXxqC,MAAO,CACLyqC,SAAU,sBACVC,MAAO,qBAGXC,iBAAkB,CAChB1lB,IAAK,UACL2lB,IAAK,WAEPC,oBAAqB,CACnBtlB,KAAM,OACNiE,QAAS,WAEXshB,WAAY,CACV9qC,MA1BwB,CAC9B,OACA,WACA,WACA,WACA,WACA,WACA,aAqBI+qC,YAAa,CACXC,MAAO,UACPC,QAAS,WAEXC,eAAgB,CACdlrC,MAAO,CACLmrC,QAAS,cACTC,UAAW,4BAGfC,wBAAyB,CACvB/3C,KAAM,QACNg4C,SAAU,YACVhiB,QAAS,UACTiiB,MAAO,cACPC,OAAQ,uBAEVC,UAAW,yBACXC,UAAW,MACXxjB,SAAU,OACVyjB,WAAY,CACV3rC,MAAO,CACL4rC,KAAM,YACNC,OAAQ,cAGZC,gBAAiB,MACjBC,oBAAqB,CACnBzxC,IAAK,cACL0xC,aAAc,OACdpV,UAAW,gBACXqV,MAAO,eAETC,eAAgB,CACdlsC,MAAO,CACLmsC,QAAS,mBACTC,SAAU,2BAGdC,uBAAwB,CACtBC,SAAU,OACVhyC,IAAK,eAEPiyC,iBAAkB,CAChBjyC,IAAK,cACL0xC,aAAc,OACdpV,UAAW,gBACXqV,MAAO,cACPO,MAAO,SAETC,MAAO,CACL5V,KAAM,UACNC,KAAM,UACN4V,QAAS,WAEXC,OAAQ,CACN3sC,MAAO,CACL4sC,OAAQ,eACRC,WAAY,qBAGhBC,aAAc,CACZ9B,MAAO,wBACP+B,YAAa,cACbC,MAAO,aAETC,iBAAkB,iCAClBC,iBAAkB,CAChB1jB,QAAS,UACT2jB,OAAQ,YACRjoB,WAAY,aACZ6nB,YAAa,cACbC,MAAO,8DCpGb,SACEhkB,IAAK,CACHokB,cAAe,CACb9hB,YAAa,4EACb7b,OAAQ,CAAC,CACP/b,KAAM,KACN4I,KAAM,OACNi5B,YAAY,IAEdj5B,KAAM,uBAGViI,MAAO,CACL8oC,WAAY,CACVC,WAAY,MACZC,kBAAmB,MACnBC,SAAU,MACVC,mBAAoB,wDCjB1B,SACEzkB,IAAK,GACLzkB,MAAO,CACLmpC,aAAc,MACdC,aAAc,CACZC,IAAK,YACLC,UAAW,eACXC,eAAgB,gBAElBC,WAAY,CACV/tC,MAAO,CACLw2B,OAAQ,OACRwX,SAAU,OACVC,UAAW,iBAGfC,SAAU,MACV1lB,KAAM,cACN2lB,UAAW,MACXC,UAAW,CACTC,WAAY,YACZC,QAAS,YACTC,IAAK,UACLC,MAAO,WAETC,cAAe,CACbzuC,MAAO,CAAC,yBAA0B,yBAA0B,qEC1BlE,SACEgpB,IAAK,CACH0lB,YAAa,CACXpjB,YAAa,kEACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,QACL,CACD5I,KAAM,WACN4I,KAAM,QACL,CACD5I,KAAM,aACN4I,KAAM,YACNqT,YAAY,IAEdrT,KAAM,gBAERqyC,cAAe,CACbrjB,YAAa,gEACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,aACL,CACD5I,KAAM,gBACN4I,KAAM,gBACNqT,YAAY,IAEdrT,KAAM,SAGViI,MAAO,CACLqqC,aAAc,CACZ19B,OAAQ,CACNxB,UAAW,QAEbA,UAAW,YACXm/B,IAAK,eAEPC,YAAa,CACXC,WAAY,OACZC,2BAA4B,OAC5BC,mBAAoB,OACpBC,iBAAkB,OAClBC,mBAAoB,OACpBC,UAAW,8LCzCjB,MAuEM7qC,GAAQ,OAAa,GAvEhB,CACT8qC,QAAS,CACP9+C,OAAQ,YACR++C,aAAc,qBACdC,OAAQ,kBAEVC,kBAAmB,CACjBv0B,MAAO,OACPw0B,SAAU,OACVpX,SAAU,OACVqX,OAAQ,uBACRt1C,MAAO,OACPyP,MAAO,QACP3Y,UAAW,2BAEby+C,cAAe,qBAEN,CACTC,QAAS,CACPr/C,OAAQ,YACR++C,aAAc,qBACdC,OAAQ,kBAEVM,mBAAoB,CAClBC,QAAS,MACT70B,MAAO,OACPw0B,SAAU,OACVpX,SAAU,OACVqX,OAAQ,uBACRt1C,MAAO,OACPyP,MAAO,QACPkmC,WAAY,gBACZC,WAAY,OACZplD,EAAG,OACH2G,EAAG,QAEL0+C,cAAe,CACbjwC,MAAO,CACLkwC,OAAQ,oBACRC,QAAS,wBAIJ,CACTC,QAAS,CACP7/C,OAAQ,YACR++C,aAAc,qBACdC,OAAQ,kBAEVc,mBAAoB,CAClBP,QAAS,MACT70B,MAAO,OACPq1B,qBAAsB,OACtBC,aAAc,OACdlY,SAAU,OACVqX,OAAQ,uBACRt1C,MAAO,OACPyP,MAAO,QACPkmC,WAAY,gBACZC,WAAY,OACZplD,EAAG,OACH2G,EAAG,QAELi/C,cAAe,CACbxwC,MAAO,CACLkwC,OAAQ,oBACRC,QAAS,qBACTM,QAAS,wBAI4B,CACzCC,kBAAmB,2BACnBC,gBAAiB,2BACjBC,qBAAsB,8BACtBC,kBAAmB,WACnBC,kBAAmB,CACjBlzB,QAAS,aACTmzB,MAAO,aAETC,cAAe,yBACfC,WAAY,CACVrzB,QAAS,aACT4L,QAAS,OACTvO,MAAO,OACPoc,SAAU,OACV6Z,YAAa,OACbC,aAAc,aACdvd,aAAc,wBAEhBwd,WAAY,OACZC,SAAU,CACR9gD,OAAQ,YACR++C,aAAc,sBACdC,OAAQ,kBAEV+B,UAAW,CACTC,WAAY,OACZC,WAAY,OACZC,YAAa,aACbC,UAAW,OACXC,iBAAkB,OAClBC,aAAc,OACdC,UAAW,WACXC,WAAY,OACZr8C,OAAQ,OACR4iC,SAAU,OACV0Z,QAAS,OACTC,UAAW,MACXC,UAAW,QACXC,QAAS,OACTj3B,MAAO,OAETk3B,aAAc,CACZjhC,OAAQ,CACNxB,UAAW,OACX0iC,UAAW,QAEb1iC,UAAW,eACX6hC,WAAY,OACZc,WAAY,OACZC,OAAQ,aACRC,MAAO,aACPb,UAAW,OACXC,iBAAkB,OAClBC,aAAc,OACdn8C,OAAQ,eACRs8C,QAAS,OACT1Z,SAAU,OACV4Z,UAAW,QACXJ,UAAW,WACXG,UAAW,OACXF,WAAY,OACZU,gBAAiB,eACjBC,WAAY,aACZC,OAAQ,YACRpD,aAAc,sBACd8C,UAAW,gBAEbO,SAAU,QACVC,eAAgB,CACd/9C,KAAM,qBACN8W,GAAI,qBACJ8jC,SAAU,eACV7U,IAAK,eACLxgC,MAAO,eACP9G,KAAM,gBACN2nB,MAAO,gBAET43B,UAAW,CACTC,UAAW,sBACXC,QAAS,sBACTrjC,UAAW,eACXkO,QAAS,2BACTo1B,OAAQ,0BAEVC,iBAAkB,CAChBjzC,MAAO,CACLkzC,OAAQ,aACRC,SAAU,kBACVjzC,KAAM,SAGVkzC,iBAAkB,CAChBpzC,MAAO,CACLqzC,KAAM,cACNC,OAAQ,YACRC,MAAO,SAGXC,eAAgB,CACdxzC,MAAO,CACLkzC,OAAQ,sBACRC,SAAU,2BACVjzC,KAAM,SAGVuzC,oBAAqB,eACrBC,oBAAqB,CACnB1zC,MAAO,CACLkzC,OAAQ,sBACRC,SAAU,2BACVjzC,KAAM,SAGVyzC,cAAe,CACbziC,OAAQ,CACNxB,UAAW,OACX0iC,UAAW,QAEb1iC,UAAW,eACX6hC,WAAY,OACZc,WAAY,OACZC,OAAQ,aACRC,MAAO,aACPb,UAAW,OACXC,iBAAkB,OAClBC,aAAc,OACdn8C,OAAQ,eACRs8C,QAAS,OACT1Z,SAAU,OACV4Z,UAAW,QACXJ,UAAW,WACXG,UAAW,OACXF,WAAY,OACZW,WAAY,aACZL,UAAW,gBAEbwB,OAAQ,CACNh2B,QAAS,aACTo1B,OAAQ,YACR1/C,KAAM,QACNoc,UAAW,eACXmO,YAAa,eACbg2B,gBAAiB,eACjBC,iBAAkB,eAClBC,SAAU,eACVC,oBAAqB,eACrBC,QAAS,QAEXC,WAAY,CACVL,gBAAiB,eACjBC,iBAAkB,eAClBpkC,UAAW,eACX7a,KAAM,qBACN8W,GAAI,qBACJkS,YAAa,eACbs2B,kBAAmB,OACnBpC,QAAS,eACTqC,gBAAiB,qBACjBC,KAAM,cACNtiB,KAAM,eACN8f,UAAW,WACXyC,WAAY,eAEdC,gBAAiB,CACf5jD,IAAK,OACLyJ,MAAO,OACPo6C,MAAO,cAETC,WAAY,CACVz0C,MAAO,CAAC,WAAY,OAAQ,yBAA0B,YAExD00C,aAAc,CACZ10C,MAAO,CACLG,KAAM,OACNkzC,KAAM,cAGVsB,aAAc,CACZ30C,MAAO,CACL0mB,OAAQ,gBACRM,IAAK,SACL4tB,gBAAiB,OACjBC,UAAW,kBAGfC,YAAa,CACX/jB,cAAe,OACfgkB,aAAc,OACdC,aAAc,OACdC,iBAAkB,eAClBC,oBAAqB,gBAEvBC,cAAe,CACbn1C,MAAO,CACLo1C,KAAM,cACNj1C,KAAM,SAGVk1C,eAAgB,oBAChBC,wBAAyB,CACvBxgD,EAAG,MACHlK,EAAG,OACH2G,EAAG,QAELgkD,qBAAsB,CACpBv1C,MAAO,CACLw1C,KAAM,OACNC,OAAQ,SAGZC,wBAAyB,CACvB11C,MAAO,CACL21C,MAAO,MACPC,KAAM,QAGVC,sBAAuB,CACrBhhD,KAAM,qBACN8W,GAAI,qBACJ8jC,SAAU,eACV7U,IAAK,eACLxgC,MAAO,eACP9G,KAAM,gBACN2nB,MAAO,gBAET66B,qBAAsB,CACpBjC,gBAAiB,OACjBC,iBAAkB,MAClBj/C,KAAM,aACN8W,GAAI,qBACJyoC,gBAAiB,qBACjBC,KAAM,cACNxC,UAAW,YAEbkE,QAAS,CACPC,QAAS,OACTC,SAAU,OACV9I,OAAQ,OACR13C,OAAQ,iBAGZ,GACEuzB,IAAG,IACHzkB,MAAAA,kDC9TF,MAqCaykB,GAAM,aAAa,GArCjB,CACbktB,UAAW,CACTC,aAAc,MACd7qB,YAAa,yFACb7b,OAAQ,GACRnT,KAAM,QAER85C,UAAW,CACTD,aAAc,MACd7qB,YAAa,6CACb7b,OAAQ,GACRnT,KAAM,UAER4W,QAAS,CACPijC,aAAc,MACd7qB,YAAa,4BACb7b,OAAQ,GACRnT,KAAM,WAGM,CACd+5C,cAAe,CACbF,aAAc,OACd7qB,YAAa,kCACb7b,OAAQ,GACRnT,KAAM,UAERg6C,KAAM,CACJH,aAAc,OACd7qB,YAAa,iCACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,UAERA,KAAM,SAG2C,CACnDstB,SAAU,CACR0B,YAAa,yBACb7b,OAAQ,GACRnT,KAAM,aAERuhB,YAAa,CACXyN,YAAa,0BACb7b,OAAQ,GACRnT,KAAM,QAERsmB,KAAM,CACJ0I,YAAa,4CACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,kBACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,SAERwzC,QAAS,CACPxkB,YAAa,kHACb7b,OAAQ,GACRnT,KAAM,OAERi6C,SAAU,CACRjrB,YAAa,wBACb7b,OAAQ,GACRnT,KAAM,QAERk6C,YAAa,CACXlrB,YAAa,uDACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,kBACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,QAERmzC,SAAU,CACRnkB,YAAa,6BACb7b,OAAQ,GACRnT,KAAM,QAERm6C,WAAY,CACVnrB,YAAa,wCACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,QACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,QAERo6C,eAAgB,CACdprB,YAAa,iCACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,QACL,CACD5I,KAAM,OACN4I,KAAM,SAERA,KAAM,wBAERq6C,iBAAkB,CAChBrrB,YAAa,mCACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,eACL,CACD5I,KAAM,OACN4I,KAAM,SAERA,KAAM,wBAERs6C,+BAAgC,CAC9BtrB,YAAa,iEACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,SAERA,KAAM,QAERu6C,iCAAkC,CAChCvrB,YAAa,yEACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,gBAERA,KAAM,QAERw6C,QAAS,CACPxrB,YAAa,kEACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,QACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,SAERy6C,iBAAkB,CAChBzrB,YAAa,0CACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,SAERA,KAAM,oBAER06C,cAAe,CACb1rB,YAAa,qEACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,SAERA,KAAM,eAER26C,QAAS,CACP3rB,YAAa,6CACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,cAERA,KAAM,eAER46C,SAAU,CACR5rB,YAAa,yCACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,QACL,CACD5I,KAAM,cACN4I,KAAM,aACL,CACD5I,KAAM,SACN4I,KAAM,gBAERA,KAAM,cAER66C,aAAc,CACZ7rB,YAAa,mDACb7b,OAAQ,CAAC,CACP/b,KAAM,UACN4I,KAAM,QACL,CACD5I,KAAM,QACN4I,KAAM,QACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,QAER86C,kCAAmC,CACjC9rB,YAAa,qDACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,QACL,CACD5I,KAAM,QACN4I,KAAM,SAERA,KAAM,kBAER+6C,oCAAqC,CACnC/rB,YAAa,uDACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,eACL,CACD5I,KAAM,QACN4I,KAAM,SAERA,KAAM,kBAERg7C,qBAAsB,CACpBhsB,YAAa,+BACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,SAERA,KAAM,kBAERi7C,oBAAqB,CACnBjsB,YAAa,2FACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,QACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,SACN4I,KAAM,gBAERA,KAAM,QAERk7C,sBAAuB,CACrBlsB,YAAa,mDACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,SAERA,KAAM,cAERm7C,4BAA6B,CAC3BnsB,YAAa,8CACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,QACL,CACD5I,KAAM,QACN4I,KAAM,SAERA,KAAM,gBAERo7C,8BAA+B,CAC7BpsB,YAAa,8CACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,eACL,CACD5I,KAAM,QACN4I,KAAM,SAERA,KAAM,gBAERq7C,yBAA0B,CACxBrsB,YAAa,2DACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,SAERA,KAAM,QAERs7C,2BAA4B,CAC1BtsB,YAAa,mEACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,gBAERA,KAAM,QAERu7C,QAAS,CACPvsB,YAAa,6FACb7b,OAAQ,GACRnT,KAAM,WAERw7C,SAAU,CACRxsB,YAAa,wEACb7b,OAAQ,GACRnT,KAAM,QAERy7C,OAAQ,CACNzsB,YAAa,wDACb7b,OAAQ,GACRnT,KAAM,QAER07C,eAAgB,CACd1sB,YAAa,kCACb7b,OAAQ,GACRnT,KAAM,QAER27C,UAAW,CACT3sB,YAAa,4BACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,cAERA,KAAM,QAER47C,4BAA6B,CAC3B5sB,YAAa,kCACb7b,OAAQ,GACRnT,KAAM,QAER67C,gBAAiB,CACf7sB,YAAa,uEACb7b,OAAQ,GACRnT,KAAM,OAER87C,mBAAoB,CAClB9sB,YAAa,gDACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,UAERA,KAAM,QAER+7C,gBAAiB,CACf/sB,YAAa,kFACb7b,OAAQ,CAAC,CACP/b,KAAM,KACN4I,KAAM,0BAERA,KAAM,QAERg8C,eAAgB,CACdhtB,YAAa,uCACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,QACL,CACD5I,KAAM,OACN4I,KAAM,SAERA,KAAM,QAERi8C,WAAY,CACVjtB,YAAa,gDACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,OACL,CACD5I,KAAM,aACN4I,KAAM,QACL,CACD5I,KAAM,YACN4I,KAAM,SAERA,KAAM,QAERk8C,UAAW,CACTltB,YAAa,iCACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,cACL,CACDqT,YAAY,EACZjc,KAAM,SACN4I,KAAM,iBAERwvB,OAAQ,CAAC,eAAgB,YAAa,eACtCxvB,KAAM,QAERm8C,QAAS,CACPntB,YAAa,8DACb7b,OAAQ,GACRnT,KAAM,iBAERo8C,gBAAiB,CACfptB,YAAa,qBACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,SAERA,KAAM,yDC/YV,SACE0sB,IAAK,GACLzkB,MAAO,CACLo0C,WAAY,CACV19B,MAAO,OACPuO,QAAS,QAEXovB,OAAQ,CACNh7B,QAAS,OACTo1B,OAAQ,YACR1/C,KAAM,SAERulD,YAAa,CACXpJ,SAAU,OACV9a,OAAQ,QAEVmkB,UAAW,CACT94C,MAAO,CACL+4C,eAAgB,OAChBC,cAAe,OACfC,YAAa,OACbC,aAAc,OACdC,kBAAmB,OACnBC,YAAa,OACbC,gBAAiB,OACjBC,oBAAqB,OACrBC,YAAa,OACbC,SAAU,OACVC,UAAW,OACXC,YAAa,OACbC,YAAa,OACbC,MAAO,SAGXC,UAAW,CACT75C,MAAO,CACL85C,aAAc,OACdC,mBAAoB,OACpBC,iBAAkB,YAClBJ,MAAO,SAGXK,WAAY,CACVj6C,MAAO,CACLk6C,QAAS,cACT1tD,MAAO,YACPutC,OAAQ,aACRogB,MAAO,cAGXC,WAAY,CACVp6C,MAAO,CAAC,aAEVq6C,YAAa,CACXr6C,MAAO,CAAC,UAAW,WAAY,8DCtDrC,SACEgpB,IAAK,GACLzkB,MAAO,CACL0nB,UAAW,mBACXquB,aAAc,sBACdC,iBAAkB,0BAClBC,mBAAoB,iBACpBC,YAAa,qBACbC,mBAAoB,4BACpBC,qBAAsB,8BACtBC,iBAAkB,0BAClBC,wBAAyB,iCAEzBC,IAAK,eACL9+B,YAAa,qBACbD,UAAW,mBAEXg/B,aAAc,OACdC,eAAgB,CACdh7C,MAAO,CACLi7C,QAAS,mBACTC,QAAS,mBACTC,MAAO,mBAGX3pD,UAAW,OACX4pD,cAAe,uBACfC,eAAgB,WAChBC,iBAAkB,OAClBC,iBAAkB,wDC7BtB,SACEvyB,IAAK,GACLzkB,MAAO,CACLi3C,aAAc,CACZC,eAAgB,mBAChBC,YAAa,oBAEfC,MAAO,CACL37C,MAAO,CACLG,KAAM,OACNy7C,QAAS,cAGbC,cAAe,CACbC,OAAQ,QACRC,KAAM,QACNC,KAAM,SAERC,mBAAoB,CAClBj8C,MAAO,CACLmuB,GAAI,kBAGR+tB,iBAAkB,iECvBtB,SACElzB,IAAK,GACLzkB,MAAO,CACL43C,WAAY,CACVC,WAAY,cACZ/yB,OAAQ,UACRukB,IAAK,YACLpC,OAAQ,eAEV6Q,iBAAkB,CAChBC,OAAQ,UACRF,WAAY,cACZr+C,MAAO,cACPovC,OAAQ,eAEVoP,YAAa,MACbC,QAAS,CACPnzB,OAAQ,UACRukB,IAAK,8DClBX,SACE5kB,IAAK,CACHyzB,cAAe,CACbnxB,YAAa,wGACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,gBAERA,KAAM,iCAERogD,WAAY,CACVpxB,YAAa,6FACb7b,OAAQ,GACRnT,KAAM,uBAERg1B,wBAAyB,CACvBhG,YAAa,uCACb7b,OAAQ,GACRqc,OAAQ,CAAC,iBAAkB,0BAA2B,6BACtDxvB,KAAM,8BAGViI,MAAO,CACLo4C,eAAgB,MAChBC,cAAe,qBACfC,aAAc,CACZC,mBAAoB,gBACpBzpB,MAAO,MACP0pB,uBAAwB,wBACxBC,qBAAsB,qBACtBC,oBAAqB,uBAEvBC,sBAAuB,CACrBC,MAAO,iCACPC,oBAAqB,uBAEvBC,0BAA2B,CACzBjsD,KAAM,YACNqE,OAAQ,cACRnC,KAAM,gBAENgqD,SAAU,kCAEZC,mBAAoB,qBACpBC,oBAAqB,0BACrBC,gBAAiB,MACjBC,UAAW,CACT19C,MAAO,CACLysB,UAAW,OACXkxB,KAAM,kBAGVC,cAAe,CACbC,oBAAqB,eAEvBC,sBAAuB,QACvBC,oBAAqB,CACnB/9C,MAAO,CACLg+C,QAAS,2BACTC,UAAW,6BAGfC,yBAA0B,CACxB7qB,MAAO,QACP8qB,aAAc,uBAEhBC,yBAA0B,CACxBC,YAAa,MACbj3B,SAAU,cACVvF,MAAO,uCACPy8B,OAAQ,wCAEVC,eAAgB,CACdC,WAAY,OACZC,aAAc,eAEhBC,cAAe,CACbF,WAAY,YACZC,aAAc,cACdE,WAAY,+BAEdC,iBAAkB,CAChBJ,WAAY,YACZC,aAAc,eAEhBI,uBAAwB,CACtBC,UAAW,mBACX5tD,UAAW,qBACXm/B,GAAI,eAEN0uB,qBAAsB,CACpBC,MAAO,MACPC,OAAQ,gBACRC,gBAAiB,eAEnBC,0BAA2B,QAC3BC,cAAe,kBACfC,cAAe,iCACfC,cAAe,CACbC,gBAAiB,gBACjBtT,MAAO,cACPuT,YAAa,cACbC,UAAW,YACXC,UAAW,aAEbC,aAAc,CACZC,YAAa,cACb3T,MAAO,eAET4T,cAAe,CACbD,YAAa,cACb3T,MAAO,eAET6T,WAAY,CACVC,cAAe,MACfC,QAAS,yBAEXC,SAAU,CACRF,cAAe,MACfC,QAAS,yBAEXE,oBAAqB,CACnB7sB,MAAO,MACP8sB,KAAM,aACNC,WAAY,mBAEdC,WAAY,CACVrB,MAAO,MACPsB,YAAa,MACbC,gBAAiB,MACjBC,SAAU,WACV7B,WAAY,cAEd8B,MAAO,MACPC,oBAAqB,CACnBd,YAAa,cACb3T,MAAO,cACPsT,gBAAiB,iBAEnBoB,YAAa,CACX3gD,MAAO,CACL4gD,KAAM,OACNjB,aAAc,eACdkB,OAAQ,OACRhB,cAAe,mEChJvB,SACE72B,IAAK,GACLzkB,MAAO,CACLu8C,eAAgB,CACd55C,KAAM,CACJ+J,WAAY,GAEZ8vC,QAAS,EACTC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,MAAO,GACPC,eAAgB,GAChBC,MAAO,GACPC,QAAS,MAGbC,uBAAwB,eACxBC,kBAAmB,CACjBC,WAAY,8BACZC,QAAS,OACTC,MAAO,OACPC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,eAAgB,eAChBC,MAAO,QAETC,aAAc,CACZ3vC,UAAW,oBACXmvC,WAAY,8BACZC,QAAS,OACTC,MAAO,OACPC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,eAAgB,eAChBC,MAAO,OACPE,QAAS,QAEXC,kBAAmB,CACjBniD,MAAO,CACLoiD,QAAS,OACTC,QAAS,UACTC,WAAY,OACZC,UAAW,OACXC,UAAW,OACXC,WAAY,OACZC,UAAW,SAGfC,sBAAuB,sCACvBC,kBAAmB,CACjBC,WAAY,6BACZv5B,QAAS,UACTra,KAAM,qBAER6zC,aAAc,CACZxwC,UAAW,oBACXuwC,WAAY,6BACZv5B,QAAS,UACTra,KAAM,gBAER8zC,eAAgB,MAChBC,cAAe,CACbvnC,QAAS,YACTgY,IAAK,UACL5f,OAAQ,mECnEd,SACEmV,IAAK,GACLzkB,MAAO,CACL0+C,UAAW,MACXC,mBAAoB,YACpBC,UAAW,CACTtlC,YAAa,cACbulC,aAAc,qBACdC,aAAc,eACdz0B,eAAgB,YAChB00B,cAAe,OAEjBC,eAAgB,CACd1lC,YAAa,cACbulC,aAAc,qBACdC,aAAc,eACdz0B,eAAgB,aAElB40B,gBAAiB,QACjBC,aAAc,QACdC,mBAAoB,CAClBC,OAAQ,eACRC,kBAAmB,yECtBzB,SACE56B,IAAK,GACLzkB,MAAO,CACLs/C,UAAW,WACXC,cAAe,CACbC,MAAO,UACP1pD,MAAO,cACPjS,OAAQ,cACR6jD,MAAO,cACP+X,OAAQ,uICAd,SACEh7B,IAAK,GACLzkB,OAAO,OAAa,GAAI,EAAA0/C,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,CAEnDC,oBAAqB,mBACrBC,oBAAqB,mBACrBC,wBAAyB,uBACzBC,+BAAgC,8BAChCC,uBAAwB,sBACxBC,eAAgB,cAChBC,yBAA0B,wBAC1BC,6BAA8B,4BAC9BC,0BAA2B,yBAC3BC,0BAA2B,yBAC3BC,qBAAsB,oBACtBC,4BAA6B,2BAC7BC,aAAc,kBACdC,8BAA+B,6BAC/BC,2BAA4B,0BAC5BC,2BAA4B,0BAC5BC,uBAAwB,sBACxBC,cAAe,mBAEfC,YAAa,CACXplD,MAAO,CACLkuB,GAAI,6BACJC,GAAI,6BACJ8Z,GAAI,6BACJC,GAAI,6BACJmd,GAAI,6BACJC,GAAI,6BACJC,GAAI,6BACJC,GAAI,6BACJC,GAAI,6BAEJC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,kECjDN,MAAMC,EAAa,CACxBC,WAAY,KAEZC,WAAY,KAEZC,iBAAkB,KAElBC,QAAS,KACTC,QAAS,KACTC,aAAc,KAEdC,SAAU,qDCXL,MAAMC,EAAM,CAEjBC,iBAAkB,kBAClBC,iBAAkB,kBAClBC,4BAA6B,6BAC7BC,oBAAqB,qBACrBC,YAAa,CACXC,QAAS,0BAEXC,0BAA2B,2BAC3BC,kBAAmB,CACjBtzD,KAAM,OACNuzD,QAAS,6BACTxuC,MAAO,mCACPQ,OAAQ,gCACRU,UAAW,iCACXd,OAAQ,yBAEVquC,wBAAyB,yBACzBC,wBAAyB,CACvBzzD,KAAM,OACN0zD,SAAU,0BACV9qD,KAAM,sBACN+qD,SAAU,QACVtuC,KAAM,aAERuuC,oBAAqB,CACnBtnD,MAAO,CACLunD,MAAO,OACPtjD,IAAK,CACHgU,OAAQ,mBACRtnB,IAAK,OACLyJ,MAAO,OACPotD,OAAQ,QAEVC,UAAW,CACTxvC,OAAQ,mBACRyvC,KAAM,OACNC,KAAM,OACNvtD,MAAO,OACPwtD,WAAY,sBAIlBC,mBAAoB,CAClBh2D,OAAQ,OACRi2D,MAAO,gCAETC,iBAAkB,CAChB/nD,MAAO,CACLimD,WAAY,KAEZC,WAAY,KAEZC,iBAAkB,KAElBC,QAAS,KACTC,QAAS,KACTC,aAAc,uDCzDb,MAAM0B,EAAM,CAEjBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,qBAAsB,CACpBj1C,QAAS,KACTsC,iBAAkB,aAEpB4yC,4BAA6B,8BAC7BC,oBAAqB,sBACrBC,YAAa,CACXxB,QAAS,yBACTvtC,UAAW,wBAEbgvC,0BAA2B,4BAC3BC,kBAAmB,CACjB90D,KAAM,OACNuzD,QAAS,6BACTxuC,MAAO,mCACPQ,OAAQ,gCACRU,UAAW,iCACXd,OAAQ,yBAEV4vC,wBAAyB,0BACzBC,wBAAyB,CACvBh1D,KAAM,OACN0zD,SAAU,0BACV9qD,KAAM,sBACN+qD,SAAU,QACVtuC,KAAM,aAER4vC,oBAAqB,CACnB3oD,MAAO,CACLunD,MAAO,OACPtjD,IAAK,CACHgU,OAAQ,mBACRtnB,IAAK,OACLyJ,MAAO,OACPotD,OAAQ,QAEVC,UAAW,CACTxvC,OAAQ,mBACRyvC,KAAM,OACNC,KAAM,OACNvtD,MAAO,OACPwtD,WAAY,sBAIlBgB,mBAAoB,CAClB/2D,OAAQ,OACRi2D,MAAO,gCAETe,iBAAkB,CAChB7oD,eAAO,mDCvDJ,MAAM8oD,EAAM,CAEjBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,qBAAsB,uBACtBC,4BAA6B,8BAC7BC,oBAAqB,sBACrBC,YAAa,CACXtC,QAAS,yBACTvtC,UAAW,wBAEb8vC,0BAA2B,4BAC3BC,kBAAmB,CACjB51D,KAAM,OACNuzD,QAAS,6BACTxuC,MAAO,mCACPQ,OAAQ,gCACRU,UAAW,iCACXd,OAAQ,wBACR9a,MAAO,MAETwrD,wBAAyB,0BACzBC,wBAAyB,0BACzBC,oBAAqB,sBACrBC,mBAAoB,qBACpBC,iBAAkB,mECzBb,MAAMC,EAAM,CAEjBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,qBAAsB,uBACtBC,4BAA6B,8BAC7BC,oBAAqB,sBACrBC,YAAa,CACXpD,QAAS,yBACTvtC,UAAW,wBAEb4wC,0BAA2B,4BAC3BC,kBAAmB,CACjB12D,KAAM,OACNuzD,QAAS,6BACTxuC,MAAO,mCACPQ,OAAQ,gCACRU,UAAW,iCACXd,OAAQ,wBACR9a,MAAO,MAETssD,wBAAyB,0BACzBC,wBAAyB,CACvB52D,KAAM,OACN0zD,SAAU,0BACV9qD,KAAM,sBACN+qD,SAAU,QACVtuC,KAAM,aAERwxC,oBAAqB,CACnBvqD,MAAO,CACLunD,MAAO,OACPtjD,IAAK,CACHgU,OAAQ,mBACRtnB,IAAK,OACLyJ,MAAO,OACPotD,OAAQ,QAEVC,UAAW,CACTxvC,OAAQ,mBACRyvC,KAAM,OACNC,KAAM,OACNvtD,MAAO,OACPwtD,WAAY,oBAEd4C,KAAM,CACJC,OAAQ,YACRC,QAAS,wBACTtwD,MAAO,UAIbuwD,mBAAoB,CAClB94D,OAAQ,OACRi2D,MAAO,gCAET8C,iBAAkB,4FCtDb,MAAMC,EAAM,CAEjBC,gBAAiB,CACfz6B,GAAI,kBACJ/zB,KAAM,WAGRyuD,kBAAkB,OAAa,GAAI,IAAY,CAC7Cj3C,KAAM,cAERk3C,kBAAkB,OAAa,GAAI,IAAY,CAC7Cl3C,KAAM,cAERm3C,4BAA6B,CAC3Bv3D,KAAM,OACN4I,KAAM,OACNmB,SAAU,gBAEZytD,qBAAqB,OAAa,GAAI,IAAY,CAChDp3C,KAAM,qCAGRq3C,qBAAsB,CACpB7uD,KAAM,iBACN4W,QAAS,KACTsC,iBAAkB,mCAEpB41C,YAAa,CACXv8C,OAAQ,mBACR0J,QAAS,yBACTgB,UAAW,uBACXjd,KAAM,kBAER+uD,sBAAuB,CACrB/uD,KAAM,kBAERgvD,0BAA2B,CACzB53D,KAAM,OACN4I,KAAM,iBACNlC,MAAO,QACP2e,KAAM,aAERwyC,uBAAwB,CACtBjvD,KAAM,kBAERkvD,uBAAwB,CACtBlvD,KAAM,kBAERmvD,kBAAmB,CACjB/3D,KAAM,OACNuzD,QAAS,mCACTxuC,MAAO,gCACPQ,OAAQ,iCACRU,UAAW,iCACXd,OAAQ,iCACR9a,MAAO,MAET2tD,yBAA0B,CACxB75D,OAAQ,OAERi2D,MAAO,gCAET6D,2BAA4B,CAC1BlyC,WAAY,OACZnd,KAAM,iBACNsvD,iBAAkB,kBAEpBC,wBAAyB,CACvBn4D,KAAM,OACN0zD,SAAU,0BACV9qD,KAAM,sBACN+qD,SAAU,QACVtuC,KAAM,aAER+yC,wBAAyB,0BACzBC,oBAAqB,CACnB/rD,MAAO,CACLunD,MAAO,iBACPtjD,IAAK,CACHymD,QAAS,wBACT/5D,IAAK,iBAELyJ,MAAO,oBAIb4xD,iBAAkB,kECxFb,MAAM/H,EAAK,CAEhBgI,gBAAiB,CACfv4D,KAAM,OACNqlB,KAAM,aAERmzC,gBAAiB,CACfx4D,KAAM,OACNogB,KAAM,YACNiF,KAAM,aAERozC,2BAA4B,CAC1Bz4D,KAAM,OACN4I,KAAM,QAER8vD,mBAAoB,CAClB14D,KAAM,OACNogB,KAAM,kCACNiF,KAAM,aAERszC,WAAY,CACVvF,QAAS,yBAEXwF,yBAA0B,CACxB54D,KAAM,OACN4I,KAAM,OACNlC,MAAO,QACP2e,KAAM,aAERwzC,iBAAkB,CAChB74D,KAAM,OACNuzD,QAAS,4BACTxuC,MAAO,kCACPQ,OAAQ,+BACRU,UAAW,gCACXd,OAAQ,wBAEV2zC,uBAAwB,CACtB94D,KAAM,OACN0zD,SAAU,yBACV9qD,KAAM,qBACN+qD,SAAU,QACVtuC,KAAM,aAER0zC,uBAAwB,CACtBzsD,MAAO,CAAC,WAAY,UAAW,aAEjC0sD,mBAAoB,CAClB1sD,MAAO,CACLunD,MAAO,OACPtjD,IAAK,CACHgU,OAAQ,kBACRtnB,IAAK,OACLyJ,MAAO,OACPotD,OAAQ,QAEVC,UAAW,CACTxvC,OAAQ,kBACRyvC,KAAM,OACNC,KAAM,OACNvtD,MAAO,OACPwtD,WAAY,qBAIlB+E,gBAAiB,CACf3sD,MAAO,CACLimD,WAAY,KAEZC,WAAY,KAEZE,QAAS,KACTC,QAAS,KACTC,aAAc,OAGlBsG,kBAAmB,CACjB/6D,OAAQ,OACRi2D,MAAO,+EC9EX,SACE9+B,IAAK,CACH6jC,mBAAoB,CAClBvhC,YAAa,iDACb7b,OAAQ,CAAC,CACP/b,KAAM,cACN4I,KAAM,YACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,gBAERwwD,cAAe,CACbxhC,YAAa,2CACb7b,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,OACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,sBAGViI,MAAO,CACLwoD,kBAAmB,CACjBr9C,UAAW,YACXs9C,OAAQ,QACRxY,MAAO,SAETyY,aAAc,CACZv9C,UAAW,YACXw9C,KAAM,QACN1Y,MAAO,0DCtCb,SACExrB,IAAK,CACHmkC,gBAAiB,CACf7hC,YAAa,wDACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,eACL,CACD5I,KAAM,MACN4I,KAAM,SACL,CACD5I,KAAM,QACN4I,KAAM,UAERA,KAAM,QAER8wD,gBAAiB,CACf9hC,YAAa,wDACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,eACL,CACD5I,KAAM,MACN4I,KAAM,UAERA,KAAM,kBAGViI,MAAO,CACL8oD,YAAa,CACXrtD,MAAO,CACLstD,WAAY,EACZC,MAAO,qDChCf,SACEvkC,IAAK,GACLzkB,MAAO,CACLipD,kBAAmB,oDACnBC,KAAM,WACNC,eAAgB,CACdngC,SAAU,WACVogC,UAAW,iBAEbC,SAAU,sBACVC,eAAgB,QAChBC,WAAY,OACZC,SAAU,iGCRd,MA4DA,GACE/kC,IAAK,GACLzkB,OAAO,OAAa,GAjDD,CACnBypD,eAAgB,CACdhuD,MAAO,CAAC,UAAW,UAGF,CACnBiuD,gBAAiB,CACfjuD,MAAO,CAAC,QAAS,WAEnBkuD,cAAe,CACbluD,MAAO,CAAC,QAAS,YAEnBmuD,aAAc,CACZC,cAAe,SACfC,kBAAmB,SACnBh0D,MAAO,cACPi0D,YAAa,uBAEfC,iBAAkB,CAChBvuD,MAAO,CACLwuD,MAAO,4BACP5hC,QAAS,gCAGb6hC,oBAAqB,CACnBC,cAAe,gBACf3jC,QAAS,eACT4jC,WAAY,mEAEdC,yBAA0B,CACxBjkC,MAAO,OACP+jC,cAAe,gBACf3jC,QAAS,gBAEX8jC,4BAA6B,CAC3B7uD,MAAO,CAAC,aAEV8uD,yBAA0B,2BAC1BC,0BAA2B,CACzB/uD,MAAO,CACLgvD,SAAU,OACVC,gBAAiB,OACjBC,aAAc,OACdC,iBAAkB,UAM8B,IA9DjC,CACnBC,kBAAmB,CACjBC,SAAU,YACVC,YAAa,WACbC,WAAY,mBACZ77D,KAAM,QACN81B,QAAS,WAEXgmC,wBAAyB,CACvBD,WAAY,mBACZF,SAAU,cAoDiE,IAAW,CACtFI,yBAA0B,CACxBC,eAAgB,SAChBC,YAAa,OACbC,SAAU,WACVC,SAAU,aACV3+D,UAAW,oBACX4+D,aAAc,OACdC,YAAa,wBAEfC,0BAA2B,CACzBC,YAAa,MACbC,gBAAiB,MACjBC,oBAAqB,MACrBC,mBAAoB,MACpBC,qBAAsB,MACtBC,gCAAiC,MACjCC,8BAA+B,MAC/BC,2BAA4B,cAC5BC,uBAAwB,eAE1BC,oBAAqB,CACnBC,YAAa,MACbC,aAAc,MACdC,eAAgB,MAChBC,SAAU,MACVC,UAAW,MACXC,QAAS,gBAEXC,aAAc,YACdC,eAAgB,CACdlxD,MAAO,CACLmxD,UAAW,OACXC,WAAY,sBAGhBC,kBAAmB,CACjBC,UAAW,2BACXC,cAAe,2BACfC,iBAAkB,UAEpBC,qBAAsB,YACtBC,qBAAsB,SACtBC,2BAA4B,CAC1BC,SAAU,uBACVC,YAAa,eAEfC,gBAAiB,CACfR,UAAW,4BACXC,cAAe,2BACfC,iBAAkB,UAEpBO,sBAAuB,CACrBC,QAAS,cACTzC,WAAY,mBACZ0C,OAAQ,mBACR5O,aAAc,gBAEhB6O,qBAAsB,CACpBC,eAAgB,qBAChBC,mBAAoB,2BACpBC,kBAAmB,yBACnBzC,SAAU,WACV0C,0BAA2B,MAC3BC,cAAe,eAEjBC,oBAAqB,CACnBC,OAAQ,SACR9C,YAAa,iBACb+C,WAAY,aACZC,4BAA6B,OAC7BC,QAAS,OACTC,YAAa,OACb3hE,UAAW,oBACX4hE,SAAU,OACVC,mBAAoB,sBAEtBC,cAAe,OACfC,cAAe,CACbrlB,IAAK,YACLtkB,QAAS,WAEX4pC,6BAA8B,CAC5BC,KAAM,YACN/hE,KAAM,gBACNgiE,WAAY,sBACZC,kBAAmB,SACnBC,QAAS,SACTC,kBAAmB,cACnBC,eAAgB,cAChBC,aAAc,cAEhBC,iBAAkB,CAChBN,WAAY,sBACZO,gBAAiB,QAEnBC,qBAAsB,CACpB3D,YAAa,MACbC,gBAAiB,MACjBryC,YAAa,eAEfg2C,WAAY,OACZC,kBAAmB,YACnBC,0BAA2B,CACzBX,WAAY,sBACZrD,YAAa,wBAEfiE,eAAgB,CACdb,KAAM,YACNV,OAAQ,SACRwB,KAAM,iBACNC,SAAU,cAEZC,UAAW,MACXC,aAAc,CACZp0D,MAAO,CACLoxD,WAAY,kBACZD,UAAW,SAGfkD,iBAAkB,CAChBjtC,SAAU,cACVvF,MAAO,kCACPy8B,OAAQ,kCACR9J,MAAO,kBACP8f,eAAgB,kBAElBC,gBAAiB,QACjBC,WAAY,MACZC,yBAA0B,CACxBxE,YAAa,MACbC,gBAAiB,MACjBryC,YAAa,eAEf62C,SAAU,QACVC,kBAAmB,CACjB1E,YAAa,MACbC,gBAAiB,MACjBC,oBAAqB,MACrBC,mBAAoB,MACpBC,qBAAsB,MACtBC,gCAAiC,MACjCC,8BAA+B,MAC/BC,2BAA4B,cAC5BC,uBAAwB,cACxBmE,WAAY,MACZC,uBAAwB,MACxBC,8CAA+C,SAC/CC,iCAAkC,MAClCC,kCAAmC,MACnCC,mBAAoB,MACpBC,kBAAmB,UACnBC,qBAAsB,UACtBC,uBAAwB,MACxBC,wBAAyB,MACzBC,gCAAiC,MACjCC,iCAAkC,MAClCC,0BAA2B,MAC3BC,oBAAqB,cACrBC,gBAAiB,MACjBC,kBAAmB,MACnBC,uBAAwB,cACxBC,wBAAyB,cACzBC,yBAA0B,cAC1BC,oBAAqB,MACrBC,qBAAsB,cACtBC,cAAe,cACfC,cAAe,eACfC,sCAAuC,cACvCC,oBAAqB,MACrBC,iCAAkC,cAClCC,YAAa,MACbC,eAAgB,MAChBC,wBAAyB,MACzBC,gBAAiB,MACjBC,sBAAuB,OAEzBC,uBAAwB,CACtBC,UAAW,cACXC,OAAQ,mBAEVC,mBAAoB,CAClBC,OAAQ,cACRzjE,KAAM,SAER0jE,oBAAqB,0BACrBC,oBAAqB,CACnBC,WAAY,WACZ1tC,QAAS,UACT2tC,mBAAoB,uBAEtBC,qBAAsB,CACpBC,iBAAkB,8BAClBjF,mBAAoB,yCAEtBkF,kBAAmB,iBACnBC,oBAAqB,CACnBC,UAAW,MACXlkE,KAAM,SAERmkE,wBAAyB,CACvBz3D,MAAO,CAAC,SAAU,YAAa,SAEjC03D,sBAAuB,CACrBC,eAAgB,0BAChBC,gBAAiB,eACjBP,iBAAkB,8BAClBjF,mBAAoB,2CAEtByF,uBAAwB,CACtBC,UAAW,8BACXC,iBAAkB,uBAClBC,SAAU,2BACVC,aAAc,UAEhBC,gBAAiB,CACf5I,YAAa,QACb6I,eAAgB,QAChBC,UAAW,QAEbC,OAAQ,MACRC,SAAU,CACRC,QAAS,YACTjvC,QAAS,UACTkvC,OAAQ,QAEVC,cAAe,CACbz4D,MAAO,CAAC,aAAc,aAAc,YAAa,uBAAwB,0BAA2B,qBAAsB,sBAE5H04D,iBAAkB,CAChBC,aAAc,wBACdC,WAAY,uBAEdC,eAAgB,CACd74D,MAAO,CAAC,SAAU,YAEpB84D,gBAAiB,uBACjBC,qBAAsB,CACpBC,MAAO,wBACPC,eAAgB,OAElBC,gBAAiB,CACfC,MAAO,kBACPC,QAAS,OAEXC,mBAAoB,MACpBC,wBAAyB,CACvBpC,WAAY,WACZ3D,kBAAmB,wBACnBgG,uBAAwB,OACxB3E,WAAY,OAEd4E,iBAAkB,CAChBL,MAAO,kBACPM,WAAY,OAEdC,iBAAkB,MAClBC,sBAAuB,mBACvBC,UAAW,OACXC,eAAgB,YAChBC,OAAQ,WACRC,iBAAkB,CAChBC,WAAY,cACZC,YAAa,eAEfC,UAAW,CACTl6D,MAAO,CACLkpC,MAAO,OACPixB,YAAa,QAGjBC,WAAY,CACVp6D,MAAO,CAAC,SAAU,YAEpBq6D,YAAa,CACX9K,WAAY,mBACZ+K,cAAe,4BACfC,eAAgB,oBAChBC,gBAAiB,iCACjBC,OAAQ,MACRjE,wBAAyB,MACzBE,sBAAuB,MACvBH,eAAgB,MAChBD,YAAa,MACbG,gBAAiB,OAEnBiE,0BAA2B,0BAC3BC,2BAA4B,CAC1Bp/C,QAAS,SACTq/C,eAAgB,qBAChB1pE,UAAW,sBAEb2pE,4BAA6B,kCAC7BC,eAAgB,CACdzX,aAAc,eACd9R,WAAY,QAEdwpB,UAAW,CACT/6D,MAAO,CACLkpC,MAAO,OAEP+E,UAAW,OACXugB,MAAO,OACP5hC,QAAS,SAGbouC,wBAAyB,CACvB/K,YAAa,MACbC,gBAAiB,MACjB1mC,QAAS,UACT2tC,mBAAoB,sBACpB8D,UAAW,OAEbC,eAAgB,CACdl7D,MAAO,CAAC,QAAS,YAEnBm7D,mBAAoB,CAClBn7D,MAAO,CAAC,YAEVo7D,cAAe,QACfC,yBAA0B,CACxBpL,YAAa,MACbqL,iBAAkB,wBAClBnE,mBAAoB,iCAEtBoE,eAAgB,QAChBC,mBAAoB,OACpBC,eAAgB,CACdC,UAAW,0BACXC,UAAW,2BAEbC,mBAAoB,CAClBjE,eAAgB,iBAChBC,gBAAiB,cAEnBiE,mBAAoB,YACpBC,oBAAqB,CACnB97D,MAAO,CACLkpC,MAAO,OAEP6yB,SAAU,qBACV/M,SAAU,uBAGdgN,uBAAwB,CACtBC,uBAAwB,aACxBC,eAAgB,0CAElBC,kCAAmC,gCACnCC,mBAAoB,wBACpBC,sBAAuB,4ECha3B,SACEC,YAAa,CACX3L,YAAa,MACbC,aAAc,MACdC,eAAgB,MAChBC,SAAU,MACVC,UAAW,MACXC,QAAS,eACTuL,cAAe,UACfC,iBAAkB,WAEpBC,cAAe,CACbC,OAAQ,MACRC,SAAU,OAEZC,uBAAwB,CACtBC,UAAW,OACXC,IAAK,eACLP,cAAe,UACf1L,eAAgB,MAChBF,YAAa,MACbC,aAAc,uDCpBlB,MAAMmM,EAAc,CAClB/8D,MAAO,CAAC,WAAY,UAAW,UAAW,YAAa,SAAU,SAAU,WAAY,SAAU,WAAY,eAEzGg9D,EAAY,CAChBh9D,MAAO,CAAC,WAAY,UAAW,UAAW,YAAa,WAAY,WAAY,UAAW,YAAa,SAAU,SAAU,WAAY,UAAW,UAAW,SAAU,WAAY,SAAU,WAAY,UAAW,UAAW,SAAU,WAAY,aAAc,YAAa,YAAa,WAAY,aAAc,WAAY,WAAY,UAAW,YAAa,WAAY,UAAW,YAAa,SAAU,WAAY,eA+Bna,GAAe,aAAa,GA7BX,CACfi9D,OAAQ,CACNj9D,MAAO,CACLk9D,IAAK,YACLplC,SAAU,WAGdqlC,kBAAmB,CACjBn9D,MAAO,CACLo9D,MAAO,YACPC,MAAO,yBACPC,OAAQ,4BAGZC,wBAAyB,CACvBvlC,KAAM,iBACNwlC,gBAAiB,YAEnBC,uBAAwB,CACtBpmC,SAAU,OACVsK,SAAU,MACV67B,gBAAiB,YAEnBE,UAAW,CACT9vB,IAAK,YACLjgC,IAAK,SAEPgwD,MAAO,OAEiC,CACxCC,aAAc,MACdC,YAAa,cACbC,cAAe,cACff,YAAAA,EACAC,UAAAA,EACAe,cAAe,sBAAsBhB,EAAY/8D,MAAM5X,UACvD41E,YAAa,sBAAsBhB,EAAUh9D,MAAM5X,UACnD61E,iBAAkB,yCAClBC,cAAe,0BACfC,YAAa,wBACbC,mBAAoB,8CACpBC,iBAAkB,6FChDpB,MAAMC,EAAe,CAAC,CACpB5qE,KAAM,YACN4I,KAAM,SACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEd,GACEqZ,IAAK,CACHu1C,UAAW,CACTjzC,YAAa,yDACb7b,OAAQ6uD,EACRhiE,KAAM,uBAERkiE,gBAAiB,CACflzC,YAAa,sDACb7b,OAAQ6uD,EACRhiE,KAAM,eAGViI,MAAO,CACLk6D,WAAY,CACVC,aAAc,wBAIhBC,aAAc,CACZC,QAAS,UACTC,OAAQ,UACRC,kBAAmB,WAErBC,oBAAqB,CACnB3vC,OAAQ,SACR4vC,MAAO,gBACPC,WAAY,4DCpClB,SACEj2C,IAAK,GACLzkB,MAAO,CACL26D,UAAW,6DCHf,SACEl2C,IAAK,GACLzkB,MAAO,CACL46D,gBAAiB,CACfh2C,SAAU,YACVi2C,UAAW,YACXnzB,MAAO,eAETozB,UAAW,CACTr/D,MAAO,CAAC,MAAO,cAAe,aAAc,YAE9Cs/D,kBAAmB,CACjBC,KAAM,YACNC,SAAU,OACVC,OAAQ,gECdd,SACEz2C,IAAK,GACLzkB,MAAO,CACLm7D,cAAe,CACbC,SAAU,kBACVC,YAAa,UACbC,cAAe,UACf3uE,UAAW,UACX4uE,IAAK,WAEPC,gBAAiB,CACf//D,MAAO,CAAC,UAAW,YAAa,UAAW,WAAY,YAAa,8DCX1E,SACEgpB,IAAK,GACLzkB,MAAO,CACLy7D,eAAgB,CACdzwD,QAAS,cACT+Z,QAAS,UACT22C,QAAS,kBAEXC,eAAgB,CACdC,YAAa,cACb72C,QAAS,UACT22C,QAAS,iBACTrpC,UAAW,wDCZjB,SACE5N,IAAK,CACHo3C,QAAS,CACP90C,YAAa,iEACb7b,OAAQ,GACRnT,KAAM,eAGViI,MAAO,CACL87D,WAAY,CACVntD,QAAS,MACTktD,QAAS,oFCVf,MAiBaE,EAAe,CAI1BC,QAAS,mBACTC,OAAQ,eACRC,mBAAoB,mBAIpBC,IAAK,YACLC,UAAW,YAIXC,UAAW,kBACXC,eAAgB,oBAElB,GACE73C,IAAK,GACLzkB,OAAO,OAAa,GArCF,CAClBu8D,QAAS,mBACTC,SAAU,oBACVC,SAAU,qBACVC,SAAU,qBACVC,UAAW,sBACXC,UAAW,uBACXC,OAAQ,kBACRC,OAAQ,mBACRC,OAAQ,mBACRC,QAAS,oBACTC,QAAS,mBACTC,QAAS,oBACTC,YAAa,yBAwBwB,CACnCC,UAAW,cACXC,YAAa,2BACbC,YAAa,mBACbC,YAAa,YACbC,aAAc,sBACdnmB,QAAS,eACThzB,QAAS,MACThD,QAAS,qBACTo8C,UAAW,UACXv7C,MAAO,eACPw7C,YAAa,MACbC,eAAgB,cAChBC,cAAe,cACf3sB,KAAM,cACN4sB,SAAU,OACVC,WAAY,WACZC,yBAA0B,CACxBC,eAAgB,MAChBC,aAAc,OAEhBC,kBAAmB,CACjBziE,MAAO,CACL0iE,iBAAkB,qCAGtBC,kBAAmB,2BACnBC,UAAW,OACXC,aAAc,CACZC,MAAO,MACPC,MAAO,KACPC,MAAO,MAETC,OAAQ,CACN5uB,KAAM,mBAER6uB,WAAY,CACVljE,MAAO,CACL45C,MAAO,QAEPupB,kBAAmB,mBAEnBC,gBAAiB,OAEjBC,OAAQ,SAERC,UAAW,YAEXC,KAAM,OAENC,WAAY,aAEZf,kBAAmB,oBAEnBgB,0BAA2B,SAI/BC,iBAAkB,CAChBC,OAAQ,SACRC,YAAa,UAEfC,IAAK,eACLC,IAAK,eACLC,KAAM,iBACNC,KAAM,iBACNC,KAAM,iBACNC,KAAM,iBACNC,MAAO,mBACPC,MAAO,mBACPp4C,KAAM,OACNtF,OAAQ,CACN6qB,WAAY,OACZ97C,OAAQ,uBACRi8C,UAAW,OACX2yB,eAAgB,OAChBC,OAAQ,UAEVC,cAAe,CACbhzB,WAAY,OAEZ97C,OAAQ,eAEV+uE,oBAAqB,sBACrB//C,MAAO,MACPggD,cAAe,4CACfC,qBAAsB,QACtBC,eAAgB,qBAChBC,SAAU,4BACVC,UAAW,MACXC,eAAgB,UAChBC,aAAc,eACdC,aAAc,YACdC,SAAU,iBACVC,aAAc,sBACdC,YAAa,CACXnlE,MAAO,CACLi7C,QAAS,WACTC,QAAS,WACTC,MAAO,aAGXiqB,OAAQ,mBACRC,WAAY,QACZC,OAAQ,yBACRC,aAAc,CACZvlE,MAAO,CAELwgE,OAAQ,iBAGZgF,SAAU,iBACVC,cAAe,eACfC,cAAe,CACb5C,MAAO,MACPC,MAAO,KACPC,MAAO,MAET2C,KAAM,CACJ3lE,MAAO,CAAC,MAAO,OAEjBuuB,QAAS,OACTq3C,YAAa,OACbC,SAAU,CACR7lE,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAEhE8lE,gBAAiB,CACfC,KAAM,SACNC,MAAO,UAETC,YAAa,gCACbC,6BAA8B,CAC5BvwB,MAAO,QACPwwB,cAAe,gCAEjBC,8BAA+B,CAC7BzwB,MAAO,QACP0wB,eAAgB,0BAElBC,KAAM,MACNC,YAAa,QACbC,aAAc,CACZC,UAAW,cAEbC,oBAAqB,MACrBC,gBAAiB,CACfz1D,OAAQ,CACN01D,SAAU,QAEZC,UAAW,OACX5kD,YAAa,OACb2kD,SAAU,MACVE,YAAa,OAEfC,wBAAyB,CACvBC,MAAO,UACPxyB,MAAO,gBAETyyB,YAAa,YACbC,cAAe,cACfC,OAAQ,MACRC,iBAAkB,UAElB5D,WAAY,6BACZH,OAAQ,mBACRE,KAAM,6BACND,UAAW,mHCzMf,SACEt6C,IAAK,GACLzkB,OAAO,OAAa,GAAI,EAAA8iE,GAAI,EAAAC,GAAI,CAE9BC,QAAS,WACTC,eAAgB,kBAChBC,OAAQ,UACRC,OAAQ,UACRC,UAAW,aACXC,eAAgB,kBAChBC,qBAAsB,wBACtBC,iBAAkB,oBAClBC,mBAAoB,sBACpBC,mBAAoB,sBACpBC,kBAAmB,qBACnBC,eAAgB,kBAChBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,UAAW,gECrBR,MAAMhB,EAAK,CAChBiB,SAAU,CACR50E,KAAM,eACN4I,KAAM,kBACNmB,SAAU,eACVsb,KAAM,aAERwvD,gBAAiB,MACjBC,QAAS,YACTC,QAAS,CACPC,KAAM,UACNj5D,OAAQ,uBACR9R,IAAK,cAEPgrE,WAAY,CACV3oE,MAAO,CACL4oE,UAAW,sBACXC,QAAS,oBACTC,SAAU,qBACV3gF,MAAO,kBACPiZ,MAAO,kBACP2nE,UAAW,sBACXhsE,QAAS,oBACTwxB,QAAS,oBACTy6C,YAAa,0BAGjBC,gBAAiB,CACf34E,IAAK,MACLgM,KAAM,mBAER4sE,sBAAuB,CACrBC,aAAc,kBACdC,aAAc,mBAEhBC,kBAAmB,CACjB/sE,KAAM,mBAERgtE,oBAAqB,CACnBz1D,OAAQ,iBAEV01D,kBAAmB,OACnBC,kBAAmB,CACjBl2D,SAAU,mBAEZm2D,oBAAqB,CACnBzpE,MAAO,CAAC,OAAQ,OAAQ,MAAO,KAAM,MAAO,MAAO,MAAO,OAAQ,OAAQ,KAAM,MAAO,MAAO,MAAO,OAAQ,SAE/G0pE,mBAAoB,CAClBptE,KAAM,mBAERqtE,gBAAiB,uBACjBC,iBAAkB,CAChBl2E,KAAM,OACN4I,KAAM,2BAERutE,WAAY,CACVn2E,KAAM,OACNmgB,OAAQ,gBACR9V,MAAO,aACP+rE,aAAc,cACd/wD,KAAM,sEC7DH,MAAMgxD,EAAa,CACxBr2E,KAAM,OACNmgB,OAAQ,gBACR9V,MAAO,KACPgb,KAAM,aAEKuuD,EAAK,CAChB0C,SAAU,CACRt2E,KAAM,eACN4I,KAAM,kBACNmB,SAAU,eACVsb,KAAM,aAERkxD,gBAAiB,eACjBC,QAAS,UACTC,QAAS,CACPzB,KAAM,UACNj5D,OAAQ,wBACR9R,IAAK,aACLob,KAAM,aAERqxD,WAAY,CACVpqE,MAAO,CACL4oE,UAAW,sBACXC,QAAS,oBACTC,SAAU,qBACV3gF,MAAO,kBACPiZ,MAAO,kBACP2nE,UAAW,sBACXhsE,QAAS,oBACTisE,YAAa,wBAGbqB,mBAAoB,SAGxBC,gBAAiB,CACfh6E,IAAK,MACLgM,KAAM,mBAERiuE,sBAAuB,CACrBpB,aAAc,kBACdC,aAAc,mBAEhBoB,kBAAmB,CACjBluE,KAAM,mBAERmuE,oBAAqB,CACnB52D,OAAQ,iBAEV62D,oBAAqB,sBACrBC,mBAAoB,CAClBruE,KAAM,mBAERsuE,gBAAiB,uBACjBC,iBAAkB,CAChBn3E,KAAM,OACN4I,KAAM,2BAERwuE,kBAAmB,CACjBx3D,SAAU,mBAEZy2D,WAAAA,kDC9DF,SACE/gD,IAAK,GACLzkB,MAAO,CACLwmE,OAAQ,qBACRC,SAAU,KACVC,eAAgB,SAChBC,iBAAkB,WAClBC,UAAW,CACTC,QAAS,gBACTC,SAAU,mBACVzoD,KAAM,OACN0oD,cAAe,yBACf32C,OAAQ,iBAEV42C,eAAgB,CACdH,QAAS,gBACTC,SAAU,mBACVzoD,KAAM,OACN0oD,cAAe,0BAEjBE,YAAa,sECdjB,MAqBA,GACExiD,IAAK,GACLzkB,OAAO,aAAa,GAvBL,CAEfknE,SAAU,WAEVC,KAAM,eACNC,aAAc,cACdC,aAAc,yBACdC,aAAc,oCACdC,aAAc,+CACdC,aAAc,0DACdC,aAAc,qEACdC,cAAe,oEACfC,aAAc,gFACdC,cAAe,+EACfC,aAAc,2FACdC,cAAe,0FACfC,aAAc,sGACdC,cAAe,qGACfC,cAAe,iHACfC,eAAgB,iHAIkB,CAChCC,mBAAoB,WACpBC,oBAAqB,oCACrBC,gBAAiB,CACf7hD,QAAS,eACT07C,UAAW,eACXoG,eAAgB,kBAElBC,aAAc,MACdC,eAAgB,wDCtCpB,SACE/jD,IAAK,GACLzkB,MAAO,CACLyoE,IAAK,CACHp/B,IAAK,YACLqmB,KAAM,UACN75D,MAAO,WAET6yE,QAAS,CACPjtE,MAAO,CACLktE,QAAS,UACTC,MAAO,yBAIXC,iBAAkB,CAChBptE,MAAO,CAAC,QAAS,SAAU,YAG7BqtE,YAAa,CACXrtE,MAAO,CAAC,UAAW,SAAU,YAE/BstE,YAAa,MACbC,eAAgB,CACdvtE,MAAO,CAAC,WAAY,4DCvB1B,MAkKA,GACEgpB,IAAK,GACLzkB,OAAO,aAAa,GApKH,CACjBipE,OAAQ,MACRC,UAAW,CACT50E,MAAO,SACP60E,WAAY,gBAGC,CACfC,mBAAoB,2BACpBC,yBAA0B,CACxBC,OAAQ,sDACRC,OAAQ,2EACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,QAAS,gFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,kFAEXC,yBAA0B,CACxBhB,OAAQ,sDACRC,OAAQ,2EACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,OAAQ,gFACRC,QAAS,gFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTE,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,iFACTC,QAAS,kFAEXC,wBAAyB,2BACzBC,wBAAyB,CACvB1B,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,OAAQ,2DACRC,QAAS,2DACTC,QAAS,4DACTC,QAAS,4DACTC,QAAS,4DACTC,QAAS,4DACTC,QAAS,4DACTC,QAAS,6DAEXY,aAAc,qCACdC,oBAAqB,mDACrBC,gBAAiB,CAGf1vE,MAAO,CAAC,UAAW,SAAU,aAE/B2vE,cAAe,CACb3vE,MAAO,CACL4vE,IAAK,KACLC,OAAQ,KACRC,SAAU,sBACVC,UAAW,OAGfC,eAAgB,CACdC,QAAS,kBACTC,UAAW,UACXC,eAAgB,iBAChBC,UAAW,8BAEbC,cAAe,YACfC,aAAc,CACZ/gB,WAAY,0BACZghB,WAAY,2BAEdC,eAAgB,CACdxwE,MAAO,CACLywE,MAAO,OACP7kC,KAAM,gBAGV8kC,gBAAiB,OACjBC,YAAa,oBACbC,kBAAmB,CACjBC,QAAS,2BACTC,MAAO,gBACP9xB,MAAO,OAET+xB,kBAAmB,CACjBF,QAAS,2BACTC,MAAO,gBACP9xB,MAAO,OAETgyB,iBAAkB,oBAClBC,cAAe,CACbC,SAAU,mBACVJ,MAAO,gBACPb,QAAS,mBAEXkB,cAAe,CACbC,OAAQ,+CACRC,QAAS,kBAEXC,WAAY,CACV1jC,IAAK,YACLY,MAAO,UACPllB,QAAS,WAEXioD,iBAAkB,CAChBj/D,UAAW,wBACXs7B,IAAK,YACLtkB,QAAS,UACTkoD,SAAU,cACVC,OAAQ,WAEVC,sBAAuB,CACrB9jC,IAAK,YACLtkB,QAAS,UACTkoD,SAAU,eAEZG,mBAAoB,mBACpBC,uBAAwB,CACtBR,OAAQ,eACRC,QAAS,gBAEXQ,gBAAiB,CACfh5E,MAAO,kBACPu4E,OAAQ,qCAEVU,iBAAkB,oCAClBC,SAAU,mBACVC,oBAAqB,+BACrBC,MAAO,CACLjnC,MAAO,iBACPwD,MAAO,UACPllB,QAAS,WAEX4oD,WAAY,OAIkC,CAC5CC,cAAe,CACbp0E,MAAO,WACP1D,MAAO,kBAET+3E,SAAU,MACVC,gBAAiB,CACfx5E,MAAO,cACP60E,WAAY,oCAEd4E,WAAY,CACVz5E,MAAO,MACP05E,QAAS,YAEXC,SAAU,CACR35E,MAAO,mBACP45E,IAAK,mBACLC,OAAQ,2BAEVC,QAAS,CACP3yE,MAAO,CAAC,aAAc,WAAY,YAAa,gBAEjD4yE,mBAAoB,CAClBhlC,IAAK,YACLxzC,MAAO,oBAETy4E,QAAS,YACTC,SAAU,SACVC,YAAa,CACX1B,QAAS,iBACT2B,YAAa,WACbC,WAAY,QAEdC,eAAgB,MAChBC,sBAAuB,0BACvBC,iBAAkB,SAClBC,wBAAyB,4BACzBC,cAAe,YACf9F,OAAQ,MACR+F,kBAAmB,CACjBvzE,MAAO,CACLwzE,OAAQ,OACRC,MAAO,OACPC,WAAY,OACZ3sD,QAAS,YACT5mB,KAAM,SAGVwzE,YAAa,MACbC,kBAAmB,CACjBhmC,IAAK,YACLvkB,OAAQ,UACRwqD,SAAU,WAEZC,mBAAoB,CAClBC,UAAW,YACXC,UAAW,WACXhnC,MAAO,iBAETinC,cAAe,CACbF,UAAW,YACXC,UAAW,WACXE,iBAAkB,WAClBlnC,MAAO,iBAETmnC,UAAW,MACXC,WAAY,CACVC,QAAS,UACTC,QAAS,WAEXC,mBAAoB,CAClBC,MAAO,YACP37E,MAAO,mBACP47E,OAAQ,mBACRC,UAAW,oBAEbC,mBAAoB,CAClBH,MAAO,YACP37E,MAAO,mBACP47E,OAAQ,mBACRC,UAAW,mBACXE,WAAY,oBAEdC,cAAe,CACbL,MAAO,YACP37E,MAAO,mBACP47E,OAAQ,mBACRC,UAAW,mBACXI,eAAgB,iBAElBC,oBAAqB,uBACrBC,eAAgB,CACdC,UAAW,YACXxC,IAAK,UACLC,OAAQ,2BACR/kB,UAAW,iBACXunB,OAAQ,WAEVC,YAAa,CACX/6E,MAAO,mBACP4gB,IAAK,wBAEPuM,eAAgB,MAChB6tD,sBAAuB,0BACvBC,eAAgB,4BAChBC,6BAA8B,CAC5BC,WAAY,oBAEdC,0BAA2B,CACzBD,WAAY,mBACZE,QAAS,QAEXC,oBAAqB,CACnBC,iBAAkB,oBAEpBC,oBAAqB,CACnBC,iBAAkB,eAClBF,iBAAkB,sEC1RxB,SACE3sD,IAAK,CACHpG,KAAM,CACJ1Y,MAAO,CAAC,gBACRohB,YAAa,2CACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,QACL,CACD5I,KAAM,OACN4I,KAAM,SACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,SAERw5B,QAAS,CACPxK,YAAa,2CACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,mBAERw5E,SAAU,CACRxqD,YAAa,+FACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,iBAERy5B,aAAc,CACZ7rB,MAAO,CAAC,wBACRohB,YAAa,wDACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,QACN4I,KAAM,OACL,CACD5I,KAAM,WACN4I,KAAM,aACNqT,YAAY,GACX,CACDjc,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,mBAER05B,WAAY,CACV9rB,MAAO,CAAC,sBACRohB,YAAa,kCACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,eAER45B,eAAgB,CACdhsB,MAAO,CAAC,0BACRohB,YAAa,6BACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,QAER65B,eAAgB,CACdjsB,MAAO,CAAC,0BACRohB,YAAa,6BACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,OAERy5E,aAAc,CACZzqD,YAAa,6DACb7b,OAAQ,CAAC,CACP/b,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,YACN4I,KAAM,OACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,mBAER05E,gBAAiB,CACf1qD,YAAa,wCACb7b,OAAQ,CAAC,CACP/b,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,YACN4I,KAAM,OACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,eAER25E,oBAAqB,CACnB3qD,YAAa,mCACb7b,OAAQ,CAAC,CACP/b,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,YACN4I,KAAM,OACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,QAER45E,oBAAqB,CACnB5qD,YAAa,mCACb7b,OAAQ,CAAC,CACP/b,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,kBACN4I,KAAM,cACL,CACD5I,KAAM,YACN4I,KAAM,OACL,CACD5I,KAAM,MACN4I,KAAM,cACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,OAER65E,YAAa,CACX7qD,YAAa,+BACb7b,OAAQ,CAAC,CACP/b,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,YAER85E,kBAAmB,CACjBlsE,MAAO,CAAC,2BACRohB,YAAa,0BACb7b,OAAQ,CAAC,CACP/b,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,kBAER+5E,aAAc,CACZ/qD,YAAa,wEACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,mBACL,CACD5I,KAAM,YACN4I,KAAM,QACL,CACD5I,KAAM,UACN4I,KAAM,YACNqT,YAAY,IAEdrT,KAAM,yBAERg6E,eAAgB,CACdhrD,YAAa,sFACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,mBACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,yBAERi6E,kBAAmB,CACjBjrD,YAAa,4EACb7b,OAAQ,CAAC,CACP/b,KAAM,kBACN4I,KAAM,sBACL,CACD5I,KAAM,OACN4I,KAAM,mBACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,aAERk6E,aAAc,CACZlrD,YAAa,6DACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,mBACL,CACD5I,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,aAERm6E,wBAAyB,CACvBvsE,MAAO,CAAC,gCAAiC,mCACzCohB,YAAa,iDACb7b,OAAQ,GACRqc,OAAQ,CAAC,iBAAkB,0BAA2B,6BACtDxvB,KAAM,kBAERo6E,iBAAkB,CAChBprD,YAAa,sDACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,kBACNqT,YAAY,IAEdmc,OAAQ,CAAC,UAAW,mBAAoB,sBACxCxvB,KAAM,oBAERq6E,WAAY,CACVrrD,YAAa,6DACb7b,OAAQ,CAAC,CACP/b,KAAM,QACN4I,KAAM,QACL,CACD5I,KAAM,UACN4I,KAAM,gBACL,CACD5I,KAAM,cACN4I,KAAM,gBACL,CACD5I,KAAM,UACN4I,KAAM,iBAERA,KAAM,sBAERs6E,oBAAqB,CACnBtrD,YAAa,gCACb7b,OAAQ,CAAC,CACP/b,KAAM,KACN4I,KAAM,YACNi5B,YAAY,EACZ5lB,YAAY,IAEdrT,KAAM,0BAGViI,MAAO,CACLsyE,MAAO,UACPC,WAAY,CACVpnE,UAAW,OACX6hC,WAAY,OACZwlC,eAAgB,OAChBC,YAAa,OACbC,MAAO,sBACPh+D,OAAQ,wBAEVi+D,gBAAiB,CACf/pC,OAAQ,OACR75C,KAAM,sBACN6jF,SAAU,eAEZC,oBAAqB,CACnBC,aAAc,uBAEhBC,eAAgB,CACdjnD,GAAI,MACJ8mD,SAAU,cACVzjF,KAAM,OACNy5C,OAAQ,OACRpE,KAAM,QAERwuC,eAAgB,oCAChBC,sBAAuB,CACrBC,sBAAuB,MACvBC,wBAAyB,OAE3BC,UAAW,CACTC,GAAI,OACJpjC,MAAO,cAETqjC,kBAAmB,eACnBC,eAAgB,CACdphE,SAAU,OACVqhE,SAAU,OACVC,iBAAkB,MAClBz6D,YAAa,MACb06D,YAAa,MACbC,KAAM,yBACN16D,mBAAoB,OAEtB26D,sBAAuB,CACrBzhE,SAAU,OACV6G,YAAa,OAEf66D,YAAa,MACbC,iBAAkB,CAChB1iC,MAAO,OACP2iC,QAAS,uBAEXC,mBAAoB,CAClBv4E,MAAO,CACLw4E,WAAY,aACZ1B,WAAY,eAGhB0B,WAAY,CACV9mF,MAAO,yDC3Xb,SACEs3B,IAAK,GACLzkB,MAAO,CACLk0E,uBAAwB,CACtBC,aAAc,UACdC,UAAW,UACXC,SAAU,OACVC,OAAQ,uDCPd,SACE7vD,IAAK,CACH8vD,YAAa,CACX10C,SAAU,yBACV9Y,YAAa,6EACb7b,OAAQ,CAAC,CACP/b,KAAM,MACN4I,KAAM,SAERA,KAAM,SAGViI,MAAO,mDCXT,SACEykB,aAAG,EACHzkB,MAAO,CACLw0E,YAAa,gCACbC,0BAA2B,CACzB/9D,MAAO,QACPgnB,SAAU,KACV3uC,KAAM,eAER2lF,wBAAyB,CACvB3mE,UAAW,4BACX2I,MAAO,QACPgnB,SAAU,WACV3uC,KAAM,eAER4lF,4BAA6B,CAC3B5mE,UAAW,0BACX2I,MAAO,QACPk+D,UAAW,WACXC,UAAW,WACX9lF,KAAM,eAGR+lF,yBAA0B,8BAC1BC,8BAA+B,CAC7BhnE,UAAW,8BACX2I,MAAO,QACPk+D,UAAW,WACXC,UAAW,WACXvvD,YAAa,WACbv2B,KAAM,eAERimF,qBAAsB,oDACtBC,gBAAiB,CACfx5E,MAAO,CAAC,YAAa,WAAY,mBAEnCy5E,YAAa,CACXxnE,IAAK,uBAEPynE,aAAc,CACZC,UAAW,SACXC,SAAU,SACVC,SAAU,mCAEZC,gBAAiB,yBACjBC,UAAW,CACT/5E,MAAO,CACLg6E,YAAa,OACbC,MAAO,OACPr5B,KAAM,OACNs5B,OAAQ,SAGZC,eAAgB,yBAChBC,SAAU,SACVC,cAAe,CACbr6E,MAAO,CAAC,SAAU,cAAe,cAEnCs6E,cAAe,CACbt6E,MAAO,CACL45C,MAAO,OACP2gC,aAAc,OACdC,UAAW,OACXC,OAAQ,sBACRC,kBAAmB,OACnBC,YAAa,OACbC,iBAAkB,OAClBC,MAAO,aACPC,WAAY,kBACZC,cAAe,uBAGnBC,sBAAuB,CACrBj9E,MAAO,KACPrM,MAAO,MAETupF,uBAAwB,CACtBl9E,MAAO,KACPrM,MAAO,WAETwpF,oBAAqB,yBACrBC,mBAAoB,CAClBC,OAAQ,aACR1pF,MAAO,MAET2pF,aAAc,CACZjsD,OAAQ,SACR4vC,MAAO,gBACPsc,QAAS,QAEXC,kBAAmB,CACjBnsD,OAAQ,SACR4vC,MAAO,iBAETwc,kBAAmB,CACjBpsD,OAAQ,SACR4vC,MAAO,gBACPsc,QAAS,QAEXG,gBAAiB,4BACjBC,eAAgB,4BAChBC,iBAAkB,iBAClBC,oBAAqB,mBACrBC,MAAO,eACPC,QAAS,UACTC,WAAY,MACZC,YAAa,CACX9/D,MAAO,QACP+/D,MAAO,QACPjpC,OAAQ,aAEVkpC,OAAQ,CACNC,MAAO,MACPC,UAAW,OACXC,gBAAiB,QAEnBC,mBAAoB,CAClBt8E,MAAO,CACLw1C,KAAM,OACN+mC,QAAS,OACTpwD,OAAQ,OACRqwD,MAAO,OACPC,SAAU,OACVC,kBAAmB,OACnBC,kBAAmB,OACnBzC,OAAQ,KACR0C,aAAc,OACdC,kBAAmB,SAGvBC,IAAK,QACLC,uBAAwB,CACtBx/D,YAAa,eACb7G,SAAU,QAEZsmE,aAAc,CACZr5B,OAAQ,OACRs5B,kBAAmB,YACnBr5B,kBAAmB,YACnBs5B,eAAgB,sBAChBC,kBAAmB,kCACnBC,sBAAuB,MACvBC,oBAAqB,MACrBC,QAAS,uBAEXC,oBAAqB,CACnBC,aAAc,MACdC,MAAO,0CAETC,wBAAyB,CACvBC,UAAW,OACXC,WAAY,OAEdC,SAAU,CACR79E,MAAO,CACL89E,KAAM,OACNC,YAAa,OACbnd,UAAW,OACXod,YAAa,OAGjBC,iBAAkB,CAChBC,eAAgB,YAChBC,eAAgB,mBAChBC,cAAe,gBAEjBC,KAAM,CACJC,QAAS,OACTl6C,SAAU,eACV85C,eAAgB,YAChBC,eAAgB,WAChBI,KAAM,OACNH,cAAe,QAEjBI,aAAc,CACZtoC,UAAW,oBAEbuoC,iBAAkB,CAChBvtE,OAAQ,CACNwtE,UAAW,aACXC,aAAc,kBAEhBD,UAAW,OACXC,aAAc,QAEhBC,SAAU,CACRC,MAAO,MACPC,KAAM,OAERC,SAAU,CACRp7B,OAAQ,OACRq7B,MAAO,OACP7mC,gBAAiB,MACjB8mC,SAAU,OACVC,WAAY,eAEdC,oBAAqB,CACnBxb,OAAQ,MACRC,YAAa,MACbwb,UAAW,OAEbC,uBAAwB,CACtB1b,OAAQ,SACRC,YAAa,SACbwb,UAAW,UAEbE,gCAAiC,CAC/B3b,OAAQ,iBACRC,YAAa,iBACbwb,UAAW,kBAEb74D,MAAO,CACLvmB,MAAO,CACLu/E,eAAgB,MAChBC,aAAc,OACdC,eAAgB,SAGpBC,UAAW,CACT1/E,MAAO,CACL2/E,KAAM,OACN9P,OAAQ,YACR1vE,KAAM,SAGVy/E,SAAU,MACVC,cAAe,KACfhrC,UAAW,CACT9jB,cAAe,cACfgkB,aAAc,cACdC,aAAc,uBAEhB8qC,aAAc,YACdC,WAAY,CACV//E,MAAO,CAAC,UAAW,WAAY,eAAgB,eAAgB,eAAgB,SAAU,cAEzF,YAAa,aAEfggF,yBAA0B,CACxBhgF,MAAO,CACL4sB,QAAS,qBACTw1B,QAAS,uBAGb69B,mBAAoB,CAClBjgF,MAAO,CAAC,eAAgB,YAE1BkgF,mBAAoB,CAClBlgF,MAAO,CACLu6E,aAAc,OACd4F,oBAAqB,OACrBjG,OAAQ,OAGZkG,eAAgB,CACdC,cAAe,SACfC,aAAc,iBACdC,SAAU,iBACVtwD,SAAU,mECrQT,MAAMjH,EAAM,CACjBw3D,iBAAkB,CAChBt2E,MAAO,CAAC,qBACRohB,YAAa,2DACb7b,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,cAERA,KAAM,SAERmkF,aAAc,CACZn1D,YAAa,yDACb7b,OAAQ,CAAC,CACP/b,KAAM,aACN4I,KAAM,SAERA,KAAM,QAERokF,gBAAiB,CACfp1D,YAAa,uBACb7b,OAAQ,CAAC,CACP/b,KAAM,OACN4I,KAAM,SAERA,KAAM,QAERqkF,MAAO,CACLr1D,YAAa,sBACb7b,OAAQ,GACRnT,KAAM,QAERskF,UAAW,CACTt1D,YAAa,2BACb7b,OAAQ,GACRnT,KAAM,aAERukF,OAAQ,CACN32E,MAAO,CAAC,mBACRohB,YAAa,wCACb7b,OAAQ,CAAC,CACP/b,KAAM,YACN4I,KAAM,SACL,CACDi5B,YAAY,EACZ5lB,YAAY,EACZjc,KAAM,KACN4I,KAAM,cAERA,KAAM,wBAERwkF,OAAQ,CACNx1D,YAAa,mCACby1D,YAAY,EACZtxE,OAAQ,GACRnT,KAAM,UAER0kF,qBAAsB,CACpB11D,YAAa,2JACb7b,OAAQ,GACRnT,KAAM,aAER2kF,YAAa,CACX31D,YAAa,gDACb7b,OAAQ,GACRnT,KAAM,QAER5I,KAAM,CACJ43B,YAAa,0BACb7b,OAAQ,GACRnT,KAAM,QAER8mD,aAAc,CACZl5C,MAAO,CAAC,gCACRohB,YAAa,uCACb7b,OAAQ,GACRnT,KAAM,gBAER4kF,UAAW,CACT51D,YAAa,2CACb7b,OAAQ,GACRnT,KAAM,iBAER6/E,MAAO,CACL7wD,YAAa,wCACb7b,OAAQ,GACRnT,KAAM,iBAERyb,WAAY,CACVuT,YAAa,6EACb7b,OAAQ,GACRnT,KAAM,mBAER6kF,mBAAoB,CAClB71D,YAAa,yBACb7b,OAAQ,CAAC,CACP/b,KAAM,SACN4I,KAAM,SAERA,KAAM,QAER8kF,cAAe,CACb91D,YAAa,qCACb7b,OAAQ,GACRnT,KAAM,aAER+kF,eAAgB,CACd/1D,YAAa,8CACb7b,OAAQ,GACRnT,KAAM,QAERglF,UAAW,CACTh2D,YAAa,+CACb7b,OAAQ,GACRnT,KAAM,aAER4W,QAAS,CACPoY,YAAa,oCACb7b,OAAQ,GACRnT,KAAM,wDCpHV,SACE0sB,IAAK,GACLzkB,MAAO,CACLg9E,OAAQ,CACNlyB,SAAU,YACVj1D,MAAO,UACPq5B,IAAK,UACL+tD,eAAgB,UAChBC,KAAM,UACNjpD,OAAQ,gBAEVkpD,YAAa,MACbC,aAAc,CACZ3hF,MAAO,CACL4hF,SAAU,OACVC,SAAU,OACVC,OAAQ,OACRC,gBAAiB,8BACjBl2C,OAAQ,qBACRm2C,cAAe,8BAGnBC,mBAAoB,CAClBC,QAAS,YACTC,UAAW,eAEbC,4BAA6B,CAC3BF,QAAS,aAEXG,0BAA2B,CACzBH,QAAS,YACTzwC,YAAa,YACb6wC,SAAU,eAEZC,QAAS,CACPC,OAAQ,OACR50C,IAAK,YACL60C,OAAQ,YACRn5D,QAAS,UACTo5D,OAAQ,sBACRC,KAAM,kBACNC,WAAY,QAEdC,aAAc,CACZL,OAAQ,OACR50C,IAAK,YACL60C,OAAQ,6BACRC,OAAQ,sBACRC,KAAM,mBAERG,mBAAoB,uBACpBC,WAAY,uBACZC,iBAAkB,CAChB3zB,SAAU,YACVj1D,MAAO,UACPq3C,YAAa,YACbgwC,KAAM,4DC3DZ,SACEz4D,IAAK,GACLzkB,MAAO,CACL0+E,WAAY,2DCAhB,SACEj6D,IAAK,GACLzkB,MAAO,CACL2+E,QAAS,MACTC,WAAY,MACZC,eAAgB,UAChBC,iBAAkB,UAClBC,aAAc,CACZp6D,MAAO,YACPc,OAAQ,YACRC,MAAO,YACPC,QAAS,YACTq5D,aAAc,iBACdC,YAAa,OACbrsE,UAAW,MACXssE,kBAAmB,MACnBC,WAAY,MACZj6D,SAAU,QAEZ5D,eAAgB,CACd1O,UAAW,eACXssE,kBAAmB,eACnBC,WAAY,gBAEdC,gBAAiB,CACfz6D,MAAO,YACPojB,SAAU,oBACV7iB,SAAU,OACVH,QAAS,kBAEXs6D,cAAe,CACbt6D,QAAS,iBACTh2B,KAAM,UACNm2B,SAAU,QAEZo6D,iBAAkB,CAChBv6D,QAAS,iBACTh2B,KAAM,UACNm2B,SAAU,yDCtChB,SACET,IAAK,GACLzkB,MAAO,CACLu/E,SAAU,CACRC,KAAM,YACNz6D,QAAS,UACTggB,UAAW,YACXxf,UAAW,kBAEbk6D,UAAW,CACTvkB,OAAQ,cACR1hE,MAAO,uDCXb,SACEirB,IAAK,GACLzkB,MAAO,CACL0/E,YAAa,CACXzrB,OAAQ,UACR1nC,SAAU,UACVC,cAAe,0HCDrB,MAgEA,GACE/H,IAAK,GACLzkB,OAAO,OAAa,GA1CL,CACf2/E,OAAQ,CACNlkF,MAAO,CACLmkF,KAAM,OACNC,MAAO,UACP3/D,MAAO,eACP4/D,UAAW,OACXC,UAAW,OACXC,YAAa,OACbC,SAAU,SAGdC,SAAU,CACRzkF,MAAO,CACL0kF,MAAO,OACPnuD,QAAS,eACTouD,SAAU,CACRC,IAAK,eACLC,MAAO,gBAETC,kBAAmB,CACjBF,IAAK,eACLC,MAAO,gBAETE,mBAAoB,CAClBH,IAAK,eACLC,MAAO,kBAIbG,sBAAuB,YACvBC,UAAW,CACTjlF,MAAO,CACLklF,IAAK,OACLd,MAAO,UACPe,SAAU,OACVC,OAAQ,UA3DF,CACVC,UAAW,CACTrlF,MAAO,CACL0gE,IAAK,kBAGT4kB,kBAAmB,CACjBtlF,MAAO,CAAC,2BAA4B,0BAA2B,YAEjEulF,WAAY,CACVvlF,MAAO,CACLwlF,SAAU,gBACVC,SAAU,UAGdC,cAAe,CACb1lF,MAAO,CAAC,KAAM,cAEhB2lF,eAAgB,CACd3lF,MAAO,CAAC,KAAM,cAEhB4lF,YAAa,mBA4C0B,EAAAve,GAAI,EAAAC,GAAI,EAAAue,IAAI,OAlElC,MAkE2D,CAC1EC,kBAAmB,CACjBnsF,QAAS,WAEXosF,cAAe,CACb/lF,MAAO,CAAC,SAAU,mBAAoB,YAAa,QAErDgmF,QAAS,CACPhmF,MAAO,CACLimF,SAAU,SACVC,WAAY,uBACZ15F,MAAO,eAGX25F,QAAS,MACTC,YAAa,CACXpmF,MAAO,CACLqmF,QAAS,CACPC,UAAW,yBACXC,YAAa,mBACbC,QAAS,eAEXp6D,MAAO,CACLq6D,SAAU,oBACV7O,GAAI,iBAIV8O,gBAAiB,CACfC,iBAAkB,MAClBC,cAAe,MACfC,gBAAiB,MACjBtmC,gBAAiB,SACjBumC,oBAAqB,UAEvBC,sBAAuB,CACrB/mF,MAAO,CACLgnF,wBAAyB,OACzBC,wBAAyB,OACzBC,qBAAsB,gBACtBC,2BAA4B,SAGhCC,oBAAqB,CACnBpnF,MAAO,CACLkuB,GAAI,eACJC,GAAI,eACJ8Z,GAAI,iBAGRo/C,qBAAsB,CACpBrnF,MAAO,CACLkuB,GAAI,oBACJC,GAAI,gBACJ8Z,GAAI,kBAGRq/C,uBAAwB,CACtBtnF,MAAO,CACLkuB,GAAI,kBACJC,GAAI,kBACJ8Z,GAAI,oBAGRs/C,kBAAmB,CACjBr5D,GAAI,aACJC,GAAI,aACJ8Z,GAAI,cAENu/C,aAAc,CACZxnF,MAAO,CACLkuB,GAAI,QACJC,GAAI,QACJ8Z,GAAI,UAGRw/C,WAAY,yDCnJT,MAAMpgB,EAAK,CAChBqgB,cAAe,gBACfC,kBAAmB,oBACnBC,gBAAiB,CACf5nF,MAAO,CACL6nF,UAAW,OACXC,OAAQ,KACRC,QAAS,eACTC,QAAS,eACTC,QAAS,eACTC,SAAU,gBACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,WACTC,QAAS,WACTC,KAAM,YAGVC,WAAY,CACVxoF,MAAO,CACLyoF,OAAQ,OACRt3B,UAAW,eACX0Q,YAAa,CACX6mB,QAAS,YACTr4D,GAAI,aAENs4D,eAAgB,CACdD,QAAS,YACT3qF,MAAO,gBAET6qF,aAAc,CACZF,QAAS,YACT/3F,IAAK,YAEPk4F,eAAgB,KAChBC,aAAc,gBACdC,WAAY,UACZC,UAAW,OACXC,UAAW,CACT54D,GAAI,SACJ64D,KAAM,cAIZC,aAAc,CACZnpF,MAAO,CACLG,KAAM,OACNipF,IAAK,OACLC,YAAa,OACbC,eAAgB,OAChBC,oBAAqB,UACrBC,uBAAwB,UACxBC,oBAAqB,kBACrBC,uBAAwB,kBACxBC,iBAAkB,CAChBt5D,GAAI,UACJ7qB,SAAU,iBAEZokF,oBAAqB,CACnB5qB,MAAO,UACPx5D,SAAU,mBAEZqkF,iBAAkB,CAChBx5D,GAAI,kBACJhH,OAAQ,iBAEVygE,oBAAqB,CACnB9qB,MAAO,kBACPx5D,SAAU,qBAIhBukF,gBAAiB,CACf/pF,MAAO,CACLgqF,KAAM,OACN7gG,GAAI,aACJG,GAAI,2BACJiB,GAAI,uCACJ0/F,GAAI,mDACJC,GAAI,+DACJC,GAAI,2EACJC,GAAI,uFACJC,GAAI,qGAGRC,aAAc,CACZtqF,MAAO,CAAC,SAAU,mBAAoB,YAAa,QAErDuqF,WAAY,CACVvqF,MAAO,CACLwqF,OAAQ,sBAGZC,MAAO,CACLzqF,MAAO,CACL0qF,cAAe,CACbjlE,OAAQ,oBACRklE,QAAS,mBAEXC,oBAAqB,CACnBnlE,OAAQ,oBACRklE,QAAS,mBAEXE,uBAAwB,CACtBplE,OAAQ,oBACRklE,QAAS,mBAEXG,cAAe,CACbC,QAAS,eACTtE,SAAU,cAEZuE,cAAe,CACbvlE,OAAQ,oBACRja,KAAM,mBAERy/E,qBAAsB,CACpBxlE,OAAQ,oBACRja,KAAM,kBACNm/E,QAAS,mBAEXO,SAAU,CACRC,WAAY,gBACZC,oBAAqB,MACrBxoE,KAAM,qBAERyoE,0BAA2B,CACzB3uB,OAAQ,eACR7L,eAAgB,eAChBF,YAAa,gBAEf26B,oBAAqB,CACnB9zB,UAAW,gBAEb+zB,mBAAoB,CAClBC,UAAW,eACX9uB,OAAQ,eACRlF,UAAW,gBAEbi0B,YAAa,CACX79C,IAAK,kBACLrvC,QAAS,WAIfmtF,WAAY,CACV1rF,MAAO,CACL6nF,UAAW,OACX8D,SAAU,OACVC,cAAe,OACfC,oBAAqB,OACrBC,oBAAqB,OACrBC,gBAAiB,OACjBC,sBAAuB,OACvBC,yBAA0B,OAC1BC,0BAA2B,OAC3BC,0BAA2B,OAC3BC,WAAY,OACZC,uBAAwB,uBACxBC,kBAAmB,OACnBC,eAAgB,OAChB/R,UAAW,OACXgS,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,SACpBC,SAAU,OACVC,sBAAuB,OACvBC,eAAgB,OAChBC,oBAAqB,OACrBC,QAAS,OACTC,gBAAiB,OACjBC,mBAAoB,OACpBC,aAAc,OACdC,cAAe,OACfC,sBAAuB,SAG3BC,WAAY,CACVrtF,MAAO,CACLE,KAAM,OACNotF,aAAc,CACZ7nE,OAAQ,oBACRja,KAAM,mBAER+hF,oBAAqB,CACnB9nE,OAAQ,oBACRja,KAAM,kBACNm/E,QAAS,mBAEX6C,cAAe,CACbC,KAAM,oBACNC,QAAS,qBAEXC,wBAAyB,CACvBloE,OAAQ,oBACRmoE,QAAS,kBACTjD,QAAS,mBAEXkD,iBAAkB,CAChBpoE,OAAQ,kBACRja,KAAM,kBACNm/E,QAAS,mBAEXmD,aAAc,CACZ/C,QAAS,eACTv/E,KAAM,kBACNia,OAAQ,qBAEVsoE,aAAc,CACZC,KAAM,aACN5+D,OAAQ,MACR6+D,KAAM,MACNC,YAAa,OACbvlE,IAAK,iECpNN,MAAM2+C,EAAK,CAChB6mB,gBAAiB,CACfnuF,MAAO,CACL6nF,UAAW,OACXpjE,MAAO,gBACP0jE,OAAQ,UACRC,OAAQ,UACRC,QAAS,WACTC,QAAS,WACTC,KAAM,UAGV6F,cAAe,CACbpuF,MAAO,CACLquF,SAAU,gBACVC,YAAa,oBAGjBC,WAAY,CACVvuF,MAAO,CACLmxD,UAAW,eACX0Q,YAAa,CACX6mB,QAAS,YACTr4D,GAAI,aAENs4D,eAAgB,CACdD,QAAS,YACT3qF,MAAO,gBAET6qF,aAAc,CACZF,QAAS,YACT/3F,IAAK,YAEPk4F,eAAgB,KAChBC,aAAc,gBACdC,WAAY,UACZC,UAAW,OACXC,UAAW,CACT54D,GAAI,SACJ64D,KAAM,cAIZsF,YAAa,CACXxuF,MAAO,CACLgqF,KAAM,OACN7gG,GAAI,aACJG,GAAI,2BACJiB,GAAI,uCACJ0/F,GAAI,mDACJC,GAAI,+DACJC,GAAI,2EACJC,GAAI,uFACJC,GAAI,qGAGRoE,cAAe,oBACfC,aAAc,CACZr+D,GAAI,aACJs+D,YAAa,iBAEfC,mBAAoB,CAClB5uF,MAAO,CACL6uF,SAAU,gBACVC,KAAM,qBAGVC,gBAAiB,CACfC,QAAS,KACTC,SAAU,eAEZC,aAAc,eACdC,WAAY,CACVnvF,MAAO,CACLwqF,OAAQ,kBAGZ4E,kBAAmB,CACjBpvF,MAAO,CAAC,WAAY,gBAEtBqvF,iBAAkB,CAChBrvF,MAAO,CACLopF,IAAK,OACLkG,MAAO,CACLj/D,GAAI,aACJs+D,YAAa,uBAInBY,MAAO,CACLvvF,MAAO,CACL0qF,cAAe,CACbjlE,OAAQ,gBACRklE,QAAS,mBAEXC,oBAAqB,CACnBnlE,OAAQ,gBACRklE,QAAS,mBAEXE,uBAAwB,CACtBplE,OAAQ,gBACRklE,QAAS,mBAEXG,cAAe,CACbC,QAAS,eACTtE,SAAU,cAEZuE,cAAe,CACbvlE,OAAQ,gBACRja,KAAM,mBAERy/E,qBAAsB,CACpBxlE,OAAQ,gBACRja,KAAM,kBACNm/E,QAAS,mBAEXO,SAAU,CACRC,WAAY,gBACZC,oBAAqB,MACrBxoE,KAAM,qBAERyoE,0BAA2B,CACzB3uB,OAAQ,eACR7L,eAAgB,eAChBF,YAAa,gBAEf26B,oBAAqB,CACnB9zB,UAAW,gBAEb+zB,mBAAoB,CAClBC,UAAW,eACX9uB,OAAQ,eACRlF,UAAW,gBAEbi0B,YAAa,CACX79C,IAAK,kBACLrvC,QAAS,WAIfixF,WAAY,CACVxvF,MAAO,CACL6nF,UAAW,OACX8D,SAAU,OACVC,cAAe,OACfC,oBAAqB,OACrBC,oBAAqB,OACrBC,gBAAiB,OACjBC,sBAAuB,OACvBC,yBAA0B,OAC1BC,0BAA2B,OAC3BC,0BAA2B,OAC3BC,WAAY,OACZC,uBAAwB,2BACxBC,kBAAmB,OACnBC,eAAgB,OAChB/R,UAAW,OACXgS,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,SACpBC,SAAU,OACVC,sBAAuB,OACvBC,eAAgB,OAChBC,oBAAqB,OACrBC,QAAS,OACTC,gBAAiB,OACjBC,mBAAoB,OACpBC,aAAc,OACdC,cAAe,OACfsC,uBAAwB,OACxBrC,sBAAuB,SAG3BsC,WAAY,CACV1vF,MAAO,CACL2vF,KAAM,OACNrC,aAAc,CACZ7nE,OAAQ,qBACRmqE,UAAW,MACXn+C,YAAa,mBAEf87C,oBAAqB,CACnB9nE,OAAQ,qBACRmqE,UAAW,MACXpkF,KAAM,kBACNm/E,QAAS,mBAEX6C,cAAe,CACbC,KAAM,qBACNC,QAAS,iBAEXC,wBAAyB,CACvBloE,OAAQ,qBACRmoE,QAAS,kBACTjD,QAAS,mBAEXkD,iBAAkB,CAChBpoE,OAAQ,qBACRja,KAAM,kBACNm/E,QAAS,mBAEXmD,aAAc,CACZ/C,QAAS,eACTv/E,KAAM,kBACNia,OAAQ,sBAEVsoE,aAAc,CACZC,KAAM,eACN5+D,OAAQ,MACR6+D,KAAM,MACNC,YAAa,OACb2B,aAAc,iECnNf,MAAMhK,EAAK,CAChBiK,gBAAiB,kBACjBC,cAAe,gBACfC,WAAY,aACZC,YAAa,cACbC,cAAe,gBACfC,aAAc,eACdC,mBAAoB,qBACpBC,gBAAiB,kBACjBC,aAAc,eACdC,kBAAmB,oBACnBC,WAAY,CACVxwF,MAAO,CACLE,KAAM,OACNsqF,OAAQ,gBACRiG,gBAAiB,qBAGrBC,gBAAiB,oBACjBC,iBAAkB,gCAClBC,cAAe,CACb5wF,MAAO,CACL6wF,UAAW,OACXC,QAAS,iBAGbC,cAAe,CACb/wF,MAAO,CACL0qF,cAAe,gBACfsG,sBAAuB,gBACvBnG,uBAAwB,gBACxBC,cAAe,CACbC,QAAS,eACTtE,SAAU,aACVwK,UAAW,gBAEbjG,cAAe,CACbvlE,OAAQ,gBACRgsB,YAAa,mBAEfw5C,qBAAsB,CACpBxlE,OAAQ,gBACRja,KAAM,kBACNmd,IAAK,SAEPuiE,SAAU,CACRC,WAAY,eACZC,oBAAqB,MACrBxoE,KAAM,qBAERyoE,0BAA2B,CACzB3uB,OAAQ,eACR7L,eAAgB,eAChBF,YAAa,gBAEf26B,oBAAqB,CACnB9zB,UAAW,gBAEb+zB,mBAAoB,CAClBC,UAAW,eACX9uB,OAAQ,eACRlF,UAAW,gBAEb05B,YAAa,OACbC,cAAe,wBACfC,YAAa,CACXrG,QAAS,eACTv/E,KAAM,kBACN6lF,kBAAmB,gBAErB/D,aAAc,CACZ7nE,OAAQ,qBACRmqE,UAAW,MACXn+C,YAAa,mBAEf87C,oBAAqB,CACnB9nE,OAAQ,qBACRmqE,UAAW,MACXpkF,KAAM,kBACNmd,IAAK,SAEP6kE,cAAe,CACbC,KAAM,qBACNC,QAAS,iBAEXC,wBAAyB,CACvBloE,OAAQ,qBACRmoE,QAAS,kBACTjlE,IAAK,SAEPklE,iBAAkB,CAChBpoE,OAAQ,qBACRja,KAAM,kBACNmd,IAAK,SAEPmlE,aAAc,CACZwD,SAAU,eACV9lF,KAAM,kBACNia,OAAQ,qBACR8rE,mBAAoB,gBAEtBxD,aAAc,CACZC,KAAM,eACNwD,YAAa,iBAEfC,cAAe,OACfC,gBAAiB,QACjBC,YAAa,QACbC,WAAY,OACZC,WAAY,CACVpsE,OAAQ,gBACRqsE,OAAQ,mBAEVC,KAAM,QAGVC,iBAAkB,mBAClBC,MAAO,qBACPC,WAAY,CACVlyF,MAAO,CACL6nF,UAAW,OACX8D,SAAU,OACVC,cAAe,OACfC,oBAAqB,OACrBC,oBAAqB,OACrBC,gBAAiB,OACjBC,sBAAuB,OACvBC,yBAA0B,OAC1BC,0BAA2B,OAC3BC,0BAA2B,OAC3BG,kBAAmB,OACnB6F,2BAA4B,OAC5B5F,eAAgB,OAChB/R,UAAW,OACXgS,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,SACpBC,SAAU,OACVC,sBAAuB,OACvBC,eAAgB,OAChBC,oBAAqB,OACrBC,QAAS,OACTC,gBAAiB,OACjBC,mBAAoB,OACpBC,aAAc,OACdC,cAAe,OACfsC,uBAAwB,OACxBrC,sBAAuB,OACvBgF,UAAW,OACXC,WAAY,OACZC,sBAAuB,OACvBP,KAAM,MACNQ,aAAc,OACdC,gBAAiB,SAGrBC,WAAY,2EC9JP,MAAMC,EAAe,WAErB,MAAMC,UAAoB,IAC/BprG,YAAYmR,EAAU0B,GAGpB,GAFAzB,MAAMD,EAAU0B,IAEX1S,KAAKqR,UAAYrR,KAAKsR,GAAG05F,GAC5B,MAAM,IAAIlmG,MAAM,kCAAkCkM,EAASqX,iBAAiB,MAAO,CAAC2iF,IAAejgG,kBAAkB/K,KAAK+K,4GCLhI,MAEMmgG,EAAiB,IAAIj+F,WAAW,CAAC,IAAM,IAAM,IAAM,GAAM,IA0BxD,MAAMwf,UAAiB,IAC5B5sB,YAAYmR,EAAU0B,GAEpBzB,MAAMD,GAAU,OAAM0B,KAAU,OAASA,GA1B7C,SAAmB1B,EAAU0B,GAC3B,MAAMgF,EAAuB,IAAjBhF,EAAMhS,OAAewqG,EAAiBx4F,EAIlD,GAAyB,IAArBgF,EAVc,GAWhB,IACE,OAAO,IAAI,IAAkB1G,EAAU0G,GACvC,MAAO1N,GAEP,OADA0N,EAdc,GAcK,GACZA,EAIX,OAAOA,EAY6CuF,CAAUjM,GAAU,OAAS0B,IAAUA,oKClBtF,MAAMy4F,UAA0B,IACrC,GAAa,IAAI5uF,IAEjB1c,YAAYmR,EAAU0B,GAEpBzB,MAAMD,EAAU,CACdo6F,YAAa,IACbx9E,SAAU,eACTlb,GAGL,GAAiB8Y,IACf,GAAIxrB,KAAKwrB,QAAUA,EACjB,MAAM,IAAI1mB,MAAM,wCAAwC9E,KAAKwrB,cAAcA,KAG7E,OAAOxrB,KAAKwrB,UAAYA,GAE1B,GAAc,CAACA,EAAS6/E,KACtB,MAAMC,EAAS,MAAM9/E,IACf+/E,EAAqB,WAAZ//E,EAAuB,QAAyB,OAAMA,EAAU,GAE/E,MAAgB,WAAZA,GAAwBxrB,MAAK,EAAewrB,GACvCxrB,MAAK,IAAYsrG,IAGrBtrG,MAAK,EAAW6hB,IAAI2J,IACvBxrB,MAAK,EAAWmF,IAAIqmB,EAAS6/E,EAASrrG,KAAKgR,SAAUhR,KAAKurG,GAASvrG,KAAKwrB,UAGnExrB,MAAK,EAAWiF,IAAIumB,KAM7B,GAAY,IACHxrB,KAAKse,KAAK,YAMfktF,kBACF,OAAO,IAAIL,EAAkBnrG,KAAKgR,SAAU,CAC1Co6F,YAAaprG,KAAKorG,YAClBx9E,SAAU5tB,KAAKgR,SAASqX,iBAAiB,cAAe,EAAC,OAAYroB,KAAKgR,SAAUhR,KAAK4wB,UArDxE,OA6DjB66E,WAEF,OADAzrG,MAAK,EAAe,GACbA,MAAK,IAAYyrG,KAOtBC,YACF,OAAO1rG,MAAK,EAAY,GAAI,KAO1B2rG,YACF,OAAO3rG,MAAK,EAAY,GAAI,KAO1B4rG,YACF,OAAO5rG,MAAK,EAAY,GAAI,KAO1B6rG,YACF,OAAO7rG,MAAK,EAAY,GAAI,KAO1B8rG,YACF,OAAO9rG,MAAK,EAAY,GAAI,KAO1B4wB,eACF,OAAO5wB,MAAK,EAAY,SAAU,KAOhCorG,kBACF,OAAOprG,KAAKse,KAAK,eAOfkN,cACF,OAAOxrB,MAAK,IAAYqW,MAG1B01F,aAAaC,GACX,OAAO,OAAahsG,KAAKgR,SAAUhR,KAAK4wB,SAAUo7E,GAOpDl6F,SAKE,OADA9R,KAAK4wB,SACE3f,MAAMa,wNCnJjB,MAAMkI,GAAI,OAAO,oBAEXiyF,EAAc,CAClBl3F,SAAU,KAAO,GAGbm3F,EAAkB,CACtBC,KAAM,MAENC,IAAK,QAGDC,EAAcC,EAAe,CAEnC,+BAAgC,gCAAiC,yCACjE,uBAAwB,mDAExB,0BAA2B,kCAAmC,0BAC9D,qBAAsB,+BACtB,sBAEMC,EAAYD,EAAe,CAAC,qCAI5BE,EAAY,CAFK,sBAAuB,eACvB,sBAAuB,gBAGxCC,EAAW,CAAC,kBAAmB,kBAAmB,aAAc,MAAO,WAAY,WAAY,MAAO,SAAU,QAAS,iBAAkB,SAAU,iBAAkB,oBAAqB,iBAE5LC,EAAW,CAAC,UAAW,OAAQ,OAAQ,MAAO,QAE9CC,EAAkB,CAAC,UAAW,OAAQ,SAAU,SAAU,SAGhE,SAASC,EAAav7E,GACpB,MAAMxjB,EAAS,IAAIpN,MAAM4wB,EAAK3wB,QAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAIqwB,EAAK3wB,OAAQM,IAC/B6M,EAAO7M,GAAKqwB,EAAKrwB,GAAGqM,WAGtB,OAAOQ,EAKT,SAASy+F,EAAen2F,GACtB,MAAMtI,EAAS,IAAIpN,MAAM0V,EAAOzV,QAEhC,IAAK,IAAIM,EAAI,EAAGA,EAAImV,EAAOzV,OAAQM,IACjC6M,EAAO7M,GAAKmV,EAAOnV,GAAG8a,MAAM,MAG9B,OAAOjO,EAKT,SAASg/F,EAAW1yE,EAAOy8B,GACzB,OAAOz8B,EAAMz5B,SAAWk2D,EAAOl2D,QAAUy5B,EAAM9iB,OAAM,CAACvY,EAAGuX,KACvD,MAAMtX,EAAI63D,EAAOvgD,GAAOhJ,WAExB,GAAU,MAANvO,GAAaA,IAAMC,EACrB,OAAO,EAGT,GAAID,EAAEyT,SAAS,MAAQzT,EAAEyT,SAAS,MAAQxT,EAAEwT,SAAS,KAAM,CACzD,IAAIu6F,EAAOhuG,EAAEgd,MAAM,KACfixF,EAAOhuG,EAAE+c,MAAM,KAEnB,GAAgB,MAAZgxF,EAAK,GAAY,CACnB,MAAMl2F,EAAUm2F,EAAKn2F,QAAQk2F,EAAK,KAEjB,IAAbl2F,IACFk2F,EAAOA,EAAK7hG,MAAM,GAClB8hG,EAAOA,EAAK9hG,MAAM2L,IAKtB,OAAoB,IAAhBk2F,EAAKpsG,QAA4B,MAAZosG,EAAK,IAAcA,EAAK,KAAOC,EAAK,IAItDF,EAAWC,EAAMC,GAG1B,OAAO,KAcX,SAASC,EAAgBC,EAAU7jF,EAAarB,EAAQi5D,EAAMksB,GAAa,GACzE,MAAM/yF,EAAQ6mE,EAAKtgF,OAEnB,GAAc,IAAVyZ,GAAesyF,EAASl6F,SAASyuE,EAAK7mE,EAAQ,GAAG9M,YACnD,OAAO,KAGT,MAAM8/F,EAAS,IAAI1sG,MAAM0Z,GACnBizF,EAAS,IAAI3sG,MAAM0Z,GAIzB,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMqqB,GAAI,QAAiB6hF,EAAalsB,EAAKhgF,GAAGmiB,QAAQ,UAAW,IAAM69D,EAAKhgF,IACxEgZ,EAAIqR,EAAE3U,cACZy2F,EAAOnsG,GAAKqqB,EACZ+hF,EAAOpsG,GAAKgZ,EAGd,IAAIhO,EAAO,GAEX,IAAK,IAAIhL,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMgZ,EAAIozF,EAAOpsG,GAEP,IAANA,GAAY2rG,EAAgBp6F,SAASyH,IAGnCA,IAAMozF,EAAOpsG,EAAI,KACnBgL,GAAQmhG,EAAOnsG,IAMrB,GAAkB,cAAdmsG,EAAO,IAAgC,IAAVhzF,GAAiC,IAAlB4N,EAAOrnB,QAAgBqnB,EAAO,GAAGnT,KAAKgE,OAAQ,CAC5F,MAAMy0F,EAAeJ,EAASllF,EAAO,GAAGnT,KAAK3B,SAAS8B,YAEhB,IAAlCs4F,EAAaz4F,KAAKosE,KAAKtgF,SACzBsL,EAAO,GAAGA,IAAOqhG,EAAaz4F,KAAKosE,KAAK,GAAG3zE,cAI/C,MAAO,CACL+b,YAAAA,EACApd,KAAAA,EACA+b,OAAAA,GAMJ,SAASulF,EAAYL,EAAU7jF,GAC7BxU,MAAM,OACJmT,EAAM,KACNi5D,KAGF,OAAOgsB,EAAgBC,EAAU7jF,EAAarB,EAAQi5D,GAqBxD,SAASusB,EAAaprF,EAAOqrF,GAC3B,MAAMrzF,EAAQgI,EAAMzhB,OAEpB,IAAK,IAAIM,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMlC,EAAIqjB,EAAMnhB,GAEhB,IAAK,IAAIyM,EAAIzM,EAAI,EAAGyM,EAAI0M,EAAO1M,IAAK,CAClC,MAAM1O,EAAIojB,EAAM1U,GAEhB,GAAI3O,EAAEsqB,cAAgBrqB,EAAEqqB,aAAetqB,EAAEkN,OAASjN,EAAEiN,KAClD,OAAO,GAMb,IAAK,IAAIhL,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMd,EAAIiiB,EAAMnhB,GAChBwsG,EAAQttG,EAAEkpB,aAAelpB,EAAE8L,KAG7B,OAAO,EAsOT,IAAIwd,GAAsB,OAA2B,SAEjDikF,GAAwB,OAA2B,WAEnDC,GAAsB,OAA2B,SAEjDC,GAAuB,OAA2B,UAElDC,GAAyB,OAA2B,YAEpDC,GAAsB,OAA2B,SAEjDC,GAA4B,OAA2B,eAEvDC,GAA4B,OAA2B,eAEvDC,GAAwB,OAA2B,WAEnDC,GAA6B,OAA2B,gBAExDC,GAAmC,OAA2B,sBAE9DC,GAA+B,OAA2B,kBAE1DC,GAAiC,OAA2B,oBAE5DC,GAAoC,OAA2B,uBAE/DC,GAA8B,OAA2B,iBAEzDC,GAAmC,OAA2B,sBAE9DC,GAAgC,OAA2B,mBAE3DC,GAAiC,OAA2B,oBAE5DC,GAAiC,OAA2B,oBAE5DC,GAAgC,OAA2B,mBAE3DC,GAA6B,OAA2B,gBAExDC,GAA+B,OAA2B,kBAE1DC,IAAmC,OAA2B,sBAE3D,MAAMpiF,WAAyB,IACpC7sB,YAAYmR,EAAU0B,EAAOq8F,GAE3B99F,MAAMD,EAAU,CACd6L,MAAO,qBACNnK,GACH0D,OAAO44F,eAAehvG,KAAM8uG,GAAqB,CAC/Cp8F,MAAOu8F,KAET74F,OAAO44F,eAAehvG,KAAM6uG,EAAiB,CAC3Cn8F,MAAOw8F,KAET94F,OAAO44F,eAAehvG,KAAM4uG,EAAe,CACzCl8F,MAAOy8F,KAET/4F,OAAO44F,eAAehvG,KAAM2uG,EAAkB,CAC5Cj8F,MAAO08F,KAETh5F,OAAO44F,eAAehvG,KAAM0uG,EAAmB,CAC7Ch8F,MAAO28F,KAETj5F,OAAO44F,eAAehvG,KAAMyuG,EAAmB,CAC7C/7F,MAAO48F,KAETl5F,OAAO44F,eAAehvG,KAAMwuG,EAAkB,CAC5C97F,MAAO68F,KAETn5F,OAAO44F,eAAehvG,KAAMuuG,EAAqB,CAC/C77F,MAAO88F,KAETp5F,OAAO44F,eAAehvG,KAAMsuG,EAAgB,CAC1C57F,MAAO+8F,KAETr5F,OAAO44F,eAAehvG,KAAMquG,EAAsB,CAChD37F,MAAOg9F,KAETt5F,OAAO44F,eAAehvG,KAAMouG,EAAmB,CAC7C17F,MAAOi9F,KAETv5F,OAAO44F,eAAehvG,KAAMmuG,EAAiB,CAC3Cz7F,MAAOk9F,KAETx5F,OAAO44F,eAAehvG,KAAMkuG,EAAqB,CAC/Cx7F,MAAOm9F,KAETz5F,OAAO44F,eAAehvG,KAAMiuG,EAAe,CACzCv7F,MAAOo9F,KAET15F,OAAO44F,eAAehvG,KAAMguG,EAAU,CACpCt7F,MAAOq9F,KAET35F,OAAO44F,eAAehvG,KAAM+tG,EAAc,CACxCr7F,MAAOs9F,KAET55F,OAAO44F,eAAehvG,KAAM8tG,EAAc,CACxCp7F,MAAOu9F,KAET75F,OAAO44F,eAAehvG,KAAMwpB,EAAQ,CAClC0mF,UAAU,EACVx9F,WAAO,IAET0D,OAAO44F,eAAehvG,KAAMytG,EAAU,CACpCyC,UAAU,EACVx9F,WAAO,IAET0D,OAAO44F,eAAehvG,KAAM0tG,EAAQ,CAClCwC,UAAU,EACVx9F,WAAO,IAET0D,OAAO44F,eAAehvG,KAAM2tG,EAAS,CACnCuC,UAAU,EACVx9F,WAAO,IAET0D,OAAO44F,eAAehvG,KAAM4tG,EAAW,CACrCsC,UAAU,EACVx9F,MAAO,KAET0D,OAAO44F,eAAehvG,KAAM6tG,EAAQ,CAClCqC,UAAU,EACVx9F,WAAO,IAET,MAAM,QACJy9F,EAAO,MACPjnF,EACAnB,OAAQqoF,EAAQ,MAChBvzF,GA7KN,SAAyBsK,EAAQ8lF,GAC/B,MAAMoD,EAAW,GACXxzF,EAAQ,GACRyzF,EAAWrD,EAASvsG,OAE1B,IAAK,IAAIM,EAAI,EAAGA,EAAIsvG,EAAUtvG,IAAK,CACjC,MAAM4T,EAAOq4F,EAASjsG,GAChBooB,EAAcxU,EAAK+zB,GAAG5zB,WACtBw7F,EAAYjD,EAAYL,EAAU7jF,EAAa6jF,EAASjsG,IAE1DuvG,GACFF,EAAS3rG,KAAK6rG,GAGhB1zF,EAAMuM,GAAexU,EAGvB,MAAMu7F,EAAU,GACVjnF,EAAQ,GACRnB,EAAS,GACTyoF,EA3MR,SAAyBrpF,EAAQ8lF,EAAU/jF,GACzC,MAAMskF,EAAU,GAChB,OAAOtkF,EAAM/nB,KAAI,CAAC6wB,EAAU9X,KAC1B,MAAM,YACJkP,EAAW,KACXpd,EAAI,OACJ+b,GACEiK,EAEJ,IAAKhmB,EAEH,OAAO,KACF,GAAIwhG,EAAQpkF,GAEjB,OAAO4I,EAIT,MAAMy+E,EA5DV,SAAyBzkG,EAAMkO,EAASgP,GACtC,MAAMrb,EAAS,CAACqb,EAAMhP,IAEtB,IAAK,IAAIlZ,EAAIkZ,EAAU,EAAGlZ,EAAIkoB,EAAMxoB,OAAQM,IAAK,CAC/C,MAAMoM,EAAI8b,EAAMloB,GAEZoM,EAAEpB,OAASA,GACb6B,EAAOnJ,KAAK0I,GAIhB,OAAOS,EAiDW6iG,CAAgB1kG,EAAMkO,EAASgP,GAE/C,GAAuB,IAAnBunF,EAAQ/vG,OACV,OAAOsxB,EAMT,IAFgBy+E,EAAQh+F,MAAKoT,GAAKkC,EAAOrnB,SAAWmlB,EAAEkC,OAAOrnB,QAAUqnB,EAAOtV,MAAK,CAACvS,EAAGmW,KAAWnW,EAAE8L,KAAKsF,GAAGuU,EAAEkC,OAAO1R,GAAOrK,OAAS9L,EAAE0U,KAAKkE,SAASmzF,GAAal3F,aAAe8Q,EAAEkC,OAAO1R,GAAOzB,KAAKkE,SAASmzF,GAAal3F,eAG1N,OAAOid,EAMT,MAAM2+E,EAAW5oF,EAAO6oF,WAAU,EAChCh8F,KAAAA,GACCyB,IAAUo6F,EAAQp5F,OAAM,EACzB0Q,OAAAA,GACC8oF,IAAW9oF,EAAO1R,GAAOzB,KAAKgE,SAAsB,IAAXi4F,IAAiB9oF,EAAO1R,GAAOzB,KAAKtD,GAAGsD,QAEnF,IAAkB,IAAd+7F,EACF,OAAO3+E,EAIT,MAAM8+E,EAAW,IAAIrwG,MAAMgwG,EAAQ/vG,QAGnC,IAAK,IAAIM,EAAI,EAAGA,EAAIyvG,EAAQ/vG,OAAQM,IAAK,CACvC,MAAM,YACJooB,EAAW,KACXpd,EAAI,OACJ+b,GACE0oF,EAAQzvG,IACN,IACJiV,EAAG,KACH+qE,GACE75D,EAAO0E,UAAU9D,EAAO4oF,GAAU/7F,KAAK3B,UAG3C,IAAKgD,EAAI86F,cAAgB/vB,EAAKtgF,OAC5B,OAAO,KAGTowG,EAAS9vG,GAAK,CACZooB,YAAAA,EACApd,KAAMiK,EAAI86F,YAAc,GAAG/kG,IAAOiK,EAAI+6F,YAAY3jG,aAAe,GAAGrB,IAAOg1E,EAAKA,EAAKtgF,OAAS,GAAG2M,cAKrG,GAAIkgG,EAAauD,EAAUtD,GACzB,OAAOx7E,EAST,IAAK,IAAIhxB,EAAI,EAAGA,EAAIyvG,EAAQ/vG,OAAQM,IAAK,CACvC,MAAM,YACJooB,EAAW,KACXpd,EAAI,OACJ+b,GACE0oF,EAAQzvG,IACN,IACJiV,EAAG,KACH+qE,GACE75D,EAAO0E,UAAU9D,EAAO4oF,GAAU/7F,KAAK3B,UACrCg+F,EAAOjE,EAAgBC,EAAU7jF,EAAarB,EAAQi5D,GAAM,GAElE,GAAI/qE,EAAI86F,cAAgBE,EACtB,OAAO,KAGTH,EAAS9vG,GAAK,CACZooB,YAAAA,EACApd,KAAM,GAAGA,IAAOilG,EAAKjlG,QAKzB,OAAIuhG,EAAauD,EAAUtD,GAClBx7E,EAGF,QACN5f,QAAOnT,KAAOA,IAAGkC,KAAI,EACtBioB,YAAAA,EACApd,KAAAA,EACA+b,OAAAA,MACI,CACJqB,YAAAA,EACApd,KAAMwhG,EAAQpkF,IAAgBpd,EAC9B+b,OAAAA,MAuFYmpF,CAAgB/pF,EAAQ8lF,EAAUoD,GAC1Cc,EAAaX,EAAM9vG,OAEzB,IAAK,IAAIM,EAAI,EAAGA,EAAImwG,EAAYnwG,IAAK,CACnC,MAAM,YACJooB,EAAW,KACXpd,EACA+b,OAAQ7nB,GACNswG,EAAMxvG,GACVkoB,EAAME,GAAepd,EACrBmkG,EAAQnkG,GAAQmb,EAAOnW,SAASqY,iBAAiBD,GACjDrB,EAAO/b,GAAQ9L,EAGjB,MAAO,CACLiwG,QAAAA,EACAjnF,MAAAA,EACAnB,OAAAA,EACAlL,MAAAA,GAwIIu0F,CAAgBpxG,KAAMA,KAAK6c,QAC/B,OAA4B7c,KAAMwpB,GAAQA,GA5M9C,SAAwBzB,EAAQgnF,GAC9B,MAAMsC,EAAYj7F,OAAOE,KAAKyR,GAAQtV,MAAKnE,IAAMA,EAAEuc,WAAW,YACxDrI,EAAQ,GAEd,GAAIuF,EAAOupF,4BAA6B,CAEtC,MAAO,EAAE,KACP18F,IACGmT,EAAOupF,4BACZ9uF,EAAM5N,EAAK3B,SAAS8B,YAAc,YACzBs8F,IAActC,GACvB/0F,EAAE4U,KAAK,sHAGT,GAAI7G,EAAOwpF,uBAAwB,CAEjC,OAAO,KACL38F,IACGmT,EAAOwpF,uBACZ/uF,EAAM5N,EAAK3B,SAAS8B,YAAc,aACzBs8F,IAActC,GACvB/0F,EAAE4U,KAAK,oFAGT,OAAOpM,EAoL+CgvF,CAAepB,EAAUrB,IAC7E,OAA4B/uG,KAAMytG,GAAUA,GAAY0C,GACxD,OAA4BnwG,KAAM0tG,GAAQA,GAAUxkF,GACpD,OAA4BlpB,KAAM2tG,GAASA,GAAWyC,GACtD,OAA4BpwG,KAAM6tG,GAAQA,GAAUhxF,EAGlDqM,YACF,OAAO9S,OAAOD,QAAO,OAA4BnW,KAAM0tG,GAAQA,IAASnuF,OAOtE1C,YACF,OAAO7c,KAAKse,KAAK,SAGnBsO,YA/PF,SAAuBzF,EAAQgpF,EAASjnF,EAAOnB,GAI7C,GAFAZ,EAAOnW,SAAS4b,SAASujF,GAErBpoF,EAAOupF,4BAA6B,CAEtC,MAAOG,EAAU,CAAEC,GAAY3pF,EAAOupF,4BAChCK,EAAYxqF,EAAO0E,UAAU4lF,EAAU78F,KAAK3B,UAE5C2+F,EADczqF,EAAO0E,UAAU6lF,EAAS98F,KAAK3B,UACnB+tE,KAAKjvE,KAAK,MAC1C,IAAI8/F,EAAcF,EAAU3wB,KAAKjvE,KAAK,MACtC,MAAM+/F,EAAiC,2CAAhBD,EAEvB,GAAIC,EAAgB,CAElB,MAAOC,GAAWJ,EAAU5pF,OAC5B8pF,EAAc1qF,EAAO0E,UAAUkmF,EAAQn9F,KAAK3B,UAAU+tE,KAAKjvE,KAAK,MAGlEoV,EAAOnW,SAAS4b,SAAS,CACvBqtD,UAAW,CAAC,gCAAgC1nE,SAASs/F,GAAe,cAAgB,CAAC,uBAAwB,yBAAyBt/F,SAASs/F,GAAe,cAAgB,cAE9K39C,QAAS49C,EAAiB,eAAiB,YAC3Ch/C,mBAAoB,CAAC,8BAA8BvgD,SAASq/F,GAAe,iBAAmB1oF,EAAMwoF,EAAS98F,KAAK3B,SAAS8B,aAAe,oBAyO5Ii9F,CAAchyG,MAAM,OAA4BA,KAAMytG,GAAUA,IAAW,OAA4BztG,KAAM0tG,GAAQA,IAAS,OAA4B1tG,KAAM2tG,GAASA,IAO3KjiF,QAAQgC,GACN,OAAO,OAA4B1tB,KAAM0tG,GAAQA,IAAQ,OAA4B1tG,KAAM+tG,GAAcA,GAAcrgF,IAOzH7B,UAAU6B,GAGR,MAAMukF,IAAS,OAA4BjyG,KAAM6tG,GAAQA,IAAW7tG,KAAK6c,QAAO,OAA4B7c,KAAM+tG,GAAcA,GAAcrgF,IAE9I,IAAKukF,EACH,MAAM,IAAIntG,MAAM,uDAAuD4oB,EAASrgB,cAGlF,OAAO4kG,EAAMr9F,KAOfwS,WAAWsG,GACT,MAAMtE,GAAc,OAA4BppB,KAAM+tG,GAAcA,GAAcrgF,GAElF,KAAK,OAA4B1tB,KAAM4tG,GAAWA,GAAWxkF,GAAc,CACzE,MAAMrD,GAAa,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAE/D8oF,EAAQ,CACZ3qF,KAAM,mBACN6B,YAAAA,EACArD,WAAAA,EACAnR,KAAM5U,KAAKgR,SAASqY,iBAAiBD,IAGnCrD,KACF,OAA4B/lB,KAAM4tG,GAAWA,GAAWxkF,GAAe8oF,GAGzE,MAAM3B,GAAY,OAA4BvwG,KAAMguG,GAAUA,GAAUhuG,KAAK6rB,UAAU6B,GAAWtE,GAG7FrD,KACH,OAA4B/lB,KAAM4tG,GAAWA,GAAWxkF,GAAe8oF,GAGzE97F,OAAOE,KAAKi6F,GAAWr1F,SAAQ5M,KACnB,eAANA,GAAsBiiG,EAAUjiG,OAElC,OAA4BtO,KAAM4tG,GAAWA,GAAWxkF,GAAa9a,GAAKiiG,EAAUjiG,OAIpFiiG,EAAUhpF,OAAS,aACrB,OAA4BvnB,KAAM4tG,GAAWA,GAAWxkF,GAAa+oF,gBAAiB,OAA4BnyG,KAAM4tG,GAAWA,GAAWxkF,GAAarD,kBACpJ,OAA4B/lB,KAAM4tG,GAAWA,GAAWxkF,GAAarD,YAIhF,OAAO,OAA4B/lB,KAAM4tG,GAAWA,GAAWxkF,GAGjEoT,cAAcxwB,GACZ,IAAIomG,EAAY,KACZC,EAAW,KAcf,OAZIrmG,EAAK4M,SACPw5F,GAAY,QAAgBpmG,EAAKiH,UAE7Bm/F,EAAU7/F,SAAS,MACrB8/F,EAAWD,EACXA,EAAYC,EAASlvF,QAAQ,KAAM,MAC1BupF,EAASn6F,SAAS6/F,KAC3BC,EAAWD,EACXA,EAAY,GAAGA,OAIZ,CAACA,EAAWC,IAKvB,SAASpC,GAAcviF,GACrB,MAAMpG,EAAUtnB,KAAKonB,WAAWsG,GAC1BtE,EAAcsE,EAAS3Y,WAE7B,MAAO,CAAC,mBAA4B,SAAkB,YAAoBxC,SAAS+U,EAAQC,OAASD,EAAQvB,WAAa,CACvHsL,KAAM/J,EAAQ+J,KACd9J,KAAM,OACN6B,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAC9DxU,KAAM5U,KAAKgR,SAASqY,iBAAiBqE,IACnCpG,EAGN,SAAS0oF,GAActiF,GACrB,IAAI,OAASA,GAAW,CACtB,IAAK1tB,KAAKgR,SAAS2W,aAAa+F,GAC9B,MAAM,IAAI5oB,MAAM,0DAA0D4oB,KAG5E,OAAOhiB,SAASgiB,EAASvK,QAAQ,SAAU,IAAK,IAC3C,OAAI,OAASuK,GACXA,EAGFA,EAAS3Y,WAGlB,SAASg7F,GAAUn7F,EAAMwU,GACvB,MAAMkpF,EAAY19F,EAAKosE,KAAKjvE,KAAK,MACjC,IAAIuV,EACJ,MAAMirF,GAAY,OAA4BvyG,KAAMwpB,GAAQA,GAAQJ,MAnmBhD43D,EAmmB6EpsE,EAAKosE,MAjmB1FtgF,QAAU2rG,EAAY55F,MAAK3T,GAAK+tG,EAAW/tG,EAAGkiF,KAASA,EAAKA,EAAKtgF,OAAS,GAAG2M,WAAa,MAFxG,IAAsB2zE,EAqmBpB,IACE,GAAIuxB,EACFjrF,GAAU,OAA4BtnB,KAAM0uG,GAAmBA,GAAmBtlF,EAAampF,QAE/F,OAAQ39F,EAAKqB,IAAIrB,MACf,IAAK,QACH0S,GAAU,OAA4BtnB,KAAMiuG,GAAeA,GAAe7kF,EAAaxU,EAAKqB,IAAImlB,SAChG,MAEF,IAAK,cACH9T,GAAU,OAA4BtnB,KAAMkuG,GAAqBA,GAAqB9kF,EAAaxU,EAAKqB,IAAIu8F,eAC5G,MAEF,IAAK,UACHlrF,GAAU,OAA4BtnB,KAAMmuG,GAAiBA,GAAiB/kF,EAAaxU,EAAKqB,IAAIw8F,WACpG,MAEF,IAAK,YACHnrF,GAAU,OAA4BtnB,KAAMouG,GAAmBA,GAAmBhlF,EAAaxU,EAAMA,EAAKqB,IAAIy8F,aAC9G,MAEF,IAAK,qBACHprF,GAAU,OAA4BtnB,KAAMwuG,GAAkBA,GAAkBplF,EAAaxU,EAAKqB,IAAI08F,sBACtG,MAEF,IAAK,YACHrrF,GAAU,OAA4BtnB,KAAMyuG,GAAmBA,GAAmBrlF,EAAaxU,GAC/F,MAEF,IAAK,WACH0S,GAAU,OAA4BtnB,KAAM2uG,GAAkBA,GAAkBvlF,EAAaxU,EAAKqB,IAAI28F,YACtG,MAEF,IAAK,QACHtrF,GAAU,OAA4BtnB,KAAM4uG,GAAeA,GAAexlF,EAAaxU,EAAKqB,IAAI48F,SAChG,MAEF,IAAK,UACHvrF,GAAU,OAA4BtnB,KAAM6uG,GAAiBA,GAAiBzlF,EAAaxU,EAAMA,EAAKqB,IAAI6V,WAC1G,MAEF,SACE,QAAkBlX,EAAKqB,IAAIrB,OAGjC,MAAO5K,GACP,MAAM,IAAIlF,MAAM,qBAAqBskB,IAAckpF,EAAY,KAAKA,KAAe,yBAAwB,OAAU19F,OAAU5K,EAAM6M,WAGvI,OAAO,OAAa,CAClBwa,KAAMu7E,EAAah4F,EAAKyc,MACxBihF,UAAAA,GACChrF,GAGL,SAASwoF,GAAeh4F,GAAG,IACzBlP,EAAG,KACHgM,IAEA,MAAMlU,EAASkI,EAAImM,WAEnB,GAAIrU,EAAS,KACX,MAAM,IAAIoE,MAAM,2DAGlB,OAAO,QAAe9E,KAAKgR,SAAU,CACnCuW,KAAM,aACN7mB,OAAAA,EACAulB,KAAK,OAA4BjmB,KAAM8tG,GAAcA,GAAcl5F,KAIvE,SAASi7F,GAAqB/3F,GAAG,aAC/B4pE,EAAY,aACZD,IAIA,MAAM3iF,GAAI,OAA4BkB,KAAM8tG,GAAcA,GAAcpsB,GAElE3iF,GAAI,OAA4BiB,KAAM8tG,GAAcA,GAAcrsB,IAEjEqxB,EAAUC,GAAYvG,EAAUj6F,SAASzT,EAAEwzG,WAAa,IAAM,CAACxzG,EAAGC,GAAK,CAACA,EAAGD,GAIlF,IAAK0tG,EAAUj6F,SAASugG,EAASR,WAAa,IAC5C,MAAM,IAAIxtG,MAAM,gCAAgCguG,EAASR,WAAa,eACjE,GAAIS,EAASxrF,OAAS,WAAuC,OAAlBwrF,EAASn+F,KACzD,MAAM,IAAI9P,MAAM,kDAAkDiuG,EAASn+F,QAG7E,MAAO,CACL2S,KAAM,UACN3S,KAAM,UAIV,SAASg7F,GAAiB93F,GAAG,KAC3BlD,IAEA,OAAO,QAAe5U,KAAKgR,SAAU,CACnCuW,KAAM,YACNtB,KAAK,OAA4BjmB,KAAM8tG,GAAcA,GAAcl5F,KAIvE,SAAS+6F,GAAmBvmF,GAAa,OACvCrB,EAAM,KACNi5D,IACC,OACD70D,IAEA,MAAM6mF,EAAYhyB,EAAK,GAAG3zE,WACpB4lG,EAAWjyB,EAAKA,EAAKtgF,OAAS,GAAG2M,WAEvC,OAAoB,IAAhB2zE,EAAKtgF,QAA8B,aAAdsyG,GAChB,QAAehzG,KAAKgR,SAAU,CACnCuW,KAAM,aACNtB,IAAK8B,EAAO5mB,KAAI,EACdyT,KAAAA,MACI,OAA4B5U,KAAM8tG,GAAcA,GAAcl5F,EAAK3B,cAElD,IAAhB+tE,EAAKtgF,QAA8B,aAAdsyG,GACvB,QAAehzG,KAAKgR,SAAU,CACnCuW,KAAM,aACNtB,KAAK,OAA4BjmB,KAAM8tG,GAAcA,GAAc/lF,EAAO,GAAGnT,KAAK3B,YAE3E,CAAC,QAAS,kBAAkBV,SAASygG,IACvC,QAAehzG,KAAKgR,SAAU,CACnCuW,KAAoB,UAAdyrF,EAAwB,UAAoB,mBAClD/sF,KAAK,OAA4BjmB,KAAM8tG,GAAcA,GAAc/lF,EAAO,GAAGnT,KAAK3B,UAClF2B,KAAMo+F,IAEC,CAAC,oBAAqB,iBAAiBzgG,SAAS0gG,IAClD,QAAejzG,KAAKgR,SAAU,CACnCuW,KAAmB,sBAAb0rF,EAAmC,sBAAgC,kBACzEhtF,KAAK,OAA4BjmB,KAAM8tG,GAAcA,GAAc/lF,EAAO,GAAGnT,KAAK3B,UAClF2B,KAAMq+F,IAIH1G,EAAU95F,MAAKvS,GAAK2sG,EAAW3sG,EAAG8gF,MAAS,OAA4BhhF,KAAMquG,GAAsBA,GAAsBjlF,EAAarB,EAAQoE,IAAU,OAA4BnsB,KAAMsuG,GAAgBA,GAAgBllF,EAAa+C,GAGhP,SAASujF,GAAsB53F,EAAGiQ,EAAQoE,GACxC,GAAsB,IAAlBpE,EAAOrnB,QAAkC,IAAlByrB,EAAOzrB,OAChC,MAAM,IAAIoE,MAAM,sDAGlB,OAAO,QAAe9E,KAAKgR,SAAU,CACnCuW,KAAM,QACN7mB,OAAQV,KAAKgR,SAASqX,iBAAiBroB,KAAKgR,SAASqY,iBAAiB8C,EAAO,GAAGvX,MAAO,IAAIvB,YAC3F4S,IAAKjmB,KAAK6rB,UAAU9D,EAAO,GAAGnT,KAAK3B,UAAUgD,IAAI6V,UAAUF,SAASzqB,KAAI,EACtEkV,MAAAA,EACArK,KAAAA,MACI,CAEJqK,MAAOA,EAAMtB,WACbwS,KAAM,UACNvb,KAAMA,EAAKqB,WACXuH,KAAM,aAKZ,SAAS66F,GAAgBrmF,EAAa+C,GACpC,IAAI+mF,GAAW,EACXC,GAAU,EAEd,IAAK,IAAI/tG,EAAI,EAAGA,EAAI+mB,EAAOzrB,OAAQ0E,IAAK,CACtC,MAAM,KACJ4G,GACEmgB,EAAO/mB,GACX8tG,EAAWA,GAAYlnG,EAAK4M,OAC5Bu6F,EAAUA,GAAWnnG,EAAK+L,OAG5B,IAAKo7F,IAAYD,EACf,MAAM,IAAIpuG,MAAM,2FAGlB,GAAsB,IAAlBqnB,EAAOzrB,OACT,MAAO,CACL6mB,KAAM,SACN3S,KAAM,QAEH,GAAIu+F,GAA6B,IAAlBhnF,EAAOzrB,OAAc,CACzC,MAAM4mB,GAAU,OAA4BtnB,KAAM8tG,GAAcA,GAAc3hF,EAAO,GAAGvX,MAExF,OAAO,OAAa,GAAI0S,GAA0B,IAAjB8B,EAAqB,KAAO,CAC3DA,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAC9D+oF,eAAgB7qF,EAAQvB,YACvBoG,EAAO,GAAGpW,SAAS6C,OAAS,CAC7B7C,UAAU,QAASoW,EAAO,GAAGpW,SAAS9C,WACpC,MAGN,MAAOgT,EAAKzD,IAAS,OAA4BxiB,KAAMuuG,GAAqBA,GAAqBpiF,GAEjG,OAAO,QAAensB,KAAKgR,UAAU,OAAa,CAChDuW,KAAM4rF,EACJ,UAAoB,WACtBltF,IAAAA,GACCzD,EAAMlH,KAAO,CACdkH,MAAAA,GACE,MAAuB,IAAjB4G,EAAqB,KAAO,CACpCA,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,MAIlE,SAASomF,GAAqBrjF,GAC5B,MAAM3J,EAAQ,IAAIjG,IACZ0J,EAAM,IAAIxlB,MAAM0rB,EAAOzrB,QAE7B,IAAK,IAAIM,EAAI,EAAGA,EAAImrB,EAAOzrB,OAAQM,IAAK,CACtC,MAAM,KACJqwB,EAAI,KACJrlB,EAAI,KACJ4I,EAAI,SACJmB,GACEoW,EAAOnrB,GAELsmB,GAAU,OAA4BtnB,KAAM8tG,GAAcA,GAAcl5F,GAE9E,GAAI5I,EAAK+L,OACPkO,EAAIjlB,GAAKsmB,MACJ,CACL,MAAO8qF,EAAWC,GAAYryG,KAAKw8B,cAAcxwB,GAE7ComG,GAAaC,GACf7vF,EAAMrd,IAAIitG,EAAWC,GAGvBpsF,EAAIjlB,IAAK,OAAa,CACpBqwB,KAAMu7E,EAAav7E,GACnBrlB,KAAMomG,GACL9qF,EAASvR,EAAS6C,OAAS,CAC5B7C,UAAU,QAASA,EAAS9C,WAC1B,OAIR,MAAO,CAACgT,EAAKzD,GAGf,SAAS+sF,GAAkBz3F,EAAGlD,GAC5B,OAAO,OAAa,CAClB6R,YAAa7R,EAAKvH,WAClB+lG,UAAU,IACT,OAAWx+F,IAGhB,SAAS06F,GAAmBx3F,EAAGlD,GAC7B,MAAMy+F,EAAUz+F,EAAKqB,IAAI+6F,YAAYp8F,KAAKvH,WAC1C,MAAO,CACLka,KAAM,UACN3S,KAAMs3F,EAAgBmH,IAAYA,EAAQ38F,eAI9C,SAAS24F,GAAmBv3F,EAAGlD,GAC7B,MAAO,CACL2S,KAAM,UACN3S,KAAAA,GAIJ,SAASw6F,GAAkBhmF,GAAa,KACtCxU,IAEA,MAAMqR,GAAM,OAA4BjmB,KAAM8tG,GAAcA,GAAcl5F,GAE1E,MAAiB,OAAbqR,EAAIrR,KACC,CACL2S,KAAM,UACN3S,KAAM,UAIH,QAAe5U,KAAKgR,SAAU,CACnCuW,KAAM,QACN6B,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAC9DnD,IAAAA,IAIJ,SAASkpF,GAAe/lF,EAAakqF,GACnC,GAAmB,IAAfA,EAAI5yG,OACN,MAAO,CACL6mB,KAAM,SACN3S,KAAM,QAEH,GAAmB,IAAf0+F,EAAI5yG,OACb,OAAOV,KAAKonB,WAAWksF,EAAI,IAG7B,MAAMrtF,EAAMqtF,EAAInyG,KAAIyY,IAAK,OAA4B5Z,KAAM8tG,GAAcA,GAAcl0F,KACvF,OAAO,QAAe5Z,KAAKgR,SAAU,CACnCuW,KAAM,UACN6B,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAC9DnD,IAAAA,IAIJ,SAASipF,GAAiB9lF,GAAa,OACrCrB,EAAM,KACNi5D,IACC,SACDp1D,IAEA,MAAM2nF,EAAiBvyB,EAAK,GAAG3zE,WAE/B,GAAuB,WAAnBkmG,EAA6B,CAC/B,MAAMttF,GAAM,OAA4BjmB,KAAM8tG,GAAcA,GAAc/lF,EAAO,GAAGnT,KAAK3B,UASzF,OAAO,QAAejT,KAAKgR,SAAU,CACnCuW,KAAM,WACNtB,IAAAA,IAEG,MAAuB,WAAnBstF,GACF,QAAevzG,KAAKgR,SAAU,CACnCuW,KAAM,WACNtB,IAAK8B,EAAO5mB,KAAI,EACdyT,KAAAA,GACCyB,KAAU,OAAa,CACxBrK,KAAM,CAAC,KAAM,SAASqK,KACrB,OAA4BrW,KAAM8tG,GAAcA,GAAcl5F,EAAK3B,eAE3C,IAApB2Y,EAASlrB,OACX,CACL6mB,KAAM,SACN3S,KAAM,SAIH,OAA4B5U,KAAM8uG,IAAqBA,IAAqB1lF,EAAawC,GAGlG,SAASqjF,GAAqB7lF,EAAawC,GACzC,MAAM3F,EAAM,GAwBZ,OArBA2F,EAAS3gB,QAAQsU,MAAK,CAACzgB,EAAGC,IAAMD,EAAEuX,MAAM4O,IAAIlmB,EAAEsX,SAAQ6E,SAAQ,EAC5DiR,OAAAA,EACA9V,MAAOm9F,EACPxnG,KAAAA,MAEA,MAAMqK,EAAQm9F,EAAQz+F,WAEtB,KAAOkR,EAAIvlB,SAAW2V,GACpB4P,EAAIvhB,KAAK,CACP2R,MAAO4P,EAAIvlB,OACX6mB,KAAM,SACNvb,KAAM,WAAWia,EAAIvlB,SACrBkU,KAAM,SAIVqR,EAAIvhB,MAAK,QAAa,OAA4B1E,KAAMsuG,GAAgBA,IAAiB,EAAGniF,GAAS,CACnG9V,MAAAA,EACArK,KAAMA,EAAKqB,kBAGR,QAAerN,KAAKgR,SAAU,CACnCuW,KAAM,SACN6B,YAAAA,EACArD,YAAY,OAA4B/lB,KAAM0tG,GAAQA,GAAQtkF,GAC9DnD,IAAAA,oGC9jCG,SAASwtF,EAAkBziG,GAAU,QAC1C6f,GACC6iF,GACD,MAAM7lG,EAAS,GAEf,IAAK,IAAI7M,EAAI,EAAGA,EAAI6vB,EAAQnwB,OAAQM,IAAK,CACvC,MAAM,UACJixB,EAAS,KACTjmB,GACE6kB,EAAQ7vB,GAEPixB,EAAU5gB,UACb,OAAWxD,GAAQ,QAAgB7B,IAAO,KAAM,OAAY,GAAIimB,GAAW0hF,IACzE,MAAMC,EAAQ5iG,EAASqX,iBAAiBrX,EAASqY,iBAAiBsqF,EAAS/+F,MAAO,EAAC,OAAS++F,EAASjhG,MAAM3H,WAE3G,OADA6oG,EAAMpiF,KAAOmiF,EACNC,IACN,OAIP,OAAO/lG,gECjBF,SAASgmG,EAAgB7iG,EAAUmd,EAASD,EAAW4lF,GAC5D,MAAMC,EAAeD,EAAa3nF,OAC5B6nF,GAAW,QAAgBF,EAAa9nG,MAExCioG,EAAc,IAAI7nF,KACtB,GAAI2nF,EAAarzG,SAAW0rB,EAAK1rB,OAC/B,MAAM,IAAIoE,MAAM,aAAaqpB,KAAW6lF,aAAoBD,EAAarzG,yBAAyB0rB,EAAK1rB,WAGzG,OAAOsQ,EAASqX,iBAAiB,OAAQ,CAAC,CACxC+D,KAAAA,EACA8B,UAAAA,GACC4lF,KAYL,OATAG,EAAYvgF,GAAKwgF,GArBnB,SAAcA,EAAIhmF,GAChB,OAAOgmF,EAAGhmF,UAAU,KAAOA,EAAU,IAAMgmF,EAAGhmF,UAAU,KAAOA,EAAU,GAoBlDimF,CAAKD,EAAIhmF,GAEhC+lF,EAAY/lF,UAAYA,EACxB+lF,EAAYziF,KAAOsiF,EACnBG,EAAY7lF,OAAS4lF,EACrBC,EAAY9lF,QAAUA,EAEtB8lF,EAAYniG,OAAS,IAAMgiG,EAAahiG,SAEjCmiG,4EC9BT,SAASG,EAAiBt8F,GAAG,IAC3BmO,IAEA,MAAM,WACJF,EAAU,KACVnR,GACEqR,EACJ,OAAOouF,EAAa,CAACtuF,GAAcnR,IAGrC,SAAS0/F,EAAgBx8F,GAAG,IAC1BmO,IAEA,OAAOouF,EAAapuF,EAAI9kB,KAAI,EAC1B4kB,WAAAA,EACAnR,KAAAA,KACImR,GAAcnR,KAGtB,SAAS2/F,EAAU3/F,GAAM,KACvB2S,IAEA,MAAM,IAAIziB,MAAM,sDAAsD8P,WAAc,IAAY2S,OAIlG,MAAMitF,EAAU,CACd,CAAC,cAAuBF,EACxB,CAAC,cAAuBF,EACxB,CAAC,aAAsBA,EACvB,CAAC,oBAA6BG,EAC9B,CAAC,UAAmBD,EACpB,CAAC,aAAsBA,EACvB,CAAC,SAAkBC,EACnB,CAAC,aAAsBH,EACvB,CAAC,UAAmBG,EACpB,CAAC,YAAqBH,EACtB,CAAC,WAAoB,CAACt8F,EAAGwP,IAAYA,EAAQvB,YAAcuB,EAAQ1S,KACnE,CAAC,WAAoBw/F,EACrB,CAAC,oBAA6BA,EAC9B,CAAC,YAAqBE,EACtB,CAAC,SAAkBA,EACnB,CAAC,QAAiBC,EAClB,CAAC,YAAqBD,EACtB,CAAC,WAAoBA,EACrB,CAAC,UAAmBC,EACpB,CAAC,SAAkBH,EACnB,CAAC,cAAuBA,EACxB,CAAC,uBAAgCA,EACjC,CAAC,mBAA4BA,GAIxB,SAASC,EAAax3F,GAC3B,MAAM1C,EAAQ0C,EAAMnc,OACdmN,EAAS,IAAIpN,MAAM0Z,GAEzB,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAM4T,EAAOiI,EAAM7b,GACbsmB,GAAU,OAAW1S,GAC3B/G,EAAO7M,GAAKwzG,EAAQltF,EAAQC,MAAM3S,EAAM0S,GAG1C,OAAOzZ,iCC/DF,SAAS4mG,EAAYC,EAAM7mG,EAAS,IACzC,IAAK,IAAI7M,EAAI,EAAGA,EAAI0zG,EAAKh0G,OAAQM,IAAK,CACpC,MAAMmX,EAAQu8F,EAAK1zG,GAEfP,MAAM0W,QAAQgB,GAChBs8F,EAAYt8F,EAAOtK,GAEnBA,EAAOnJ,KAAKyT,GAIhB,MAAO,IAAI,IAAI0C,IAAIhN,mDCbd,SAAS8mG,EAAUxtF,EAAQvS,GAChC,MAAM0S,EAAUH,EAAOC,WAAWxS,GAClC,OAAO0S,EAAQvB,YAAcuB,EAAQ1S,+FCEvC,SAASy/F,EAAaltF,EAAQtK,GAC5B,OAAOA,EAAM1b,KAAI,EACfyT,KAAAA,KACIuS,EAAOC,WAAWxS,GAAMA,OAKhC,SAASggG,EAAkBztF,EAAQvS,GACjC,OAAOuS,EAAO0E,UAAUjX,GAAMqB,IAAI6V,UAAUF,SAASzqB,KAAI,EACvDgrB,OAAAA,KACIkoF,EAAaltF,EAAQgF,KAgDtB,SAAS4/E,EAAa/6F,EAAUwgB,EAAMw6E,GAC3C,OAAO,OAAch7F,EAAUg7F,GAAY,OA5C7C,UAAwB,OACtB7kF,EAAM,QACN0J,IAEA,OAAOA,EAAQhwB,QAAO,CAACyoB,GACrByH,MAAAA,EACAkB,UAAAA,EACAV,OAAAA,EACAguC,QAAAA,MAEAj2C,EAAI5kB,KAAK,CAAC2vG,EAAaltF,EAAQ8K,KAE3BlB,EAAMnY,QACR0Q,EAAI5kB,KAAKkwG,EAAkBztF,EAAQ4J,EAAM9d,SAAS2B,OAGhD2c,EAAO3Y,QACT0Q,EAAI5kB,KAAKkwG,EAAkBztF,EAAQoK,EAAOte,SAAS2B,OAGjD2qD,EAAQ3mD,QACV0Q,EAAI5kB,KAAK66D,EAAQtsD,SAASmtD,MAAMj/D,KAAI,EAClCyT,KAAAA,MAEA,GAAIA,EAAKigG,QACP,MAAO,CAAC1tF,EAAOC,WAAWxS,EAAKkgG,SAASlgG,MAG1C,MAAM,QACJouD,EAAO,IACP/5D,EAAG,MACHyJ,GACEkC,EAAKmgG,MACT,OAA0B,IAAnB/xC,EAAQtiE,OAAe,CAACymB,EAAOC,WAAW1U,GAAOkC,KAAMuS,EAAOC,WAAWne,GAAK2L,MAAQ,CAACuS,EAAOC,WAAW1U,GAAOkC,QAASuS,EAAO0E,UAAU5iB,GAAKgN,IAAI48F,QAAQ1xG,KAAIyY,GAAKuN,EAAOC,WAAWxN,GAAGhF,YAI7L0U,IACN,IAMoD0rF,CAAexjF,mCChExE,SAASyjF,EAAS5jF,GAChB,MAAM9V,EAAU8V,EAAKlwB,KAAI0C,GAAKA,EAAEwJ,WAAWsW,SACrCuxF,EAAa35F,EAAQq1F,WAAU/sG,IAAMA,EAAEnD,SAC7C,OAAuB,IAAhBw0G,EAAoB35F,EAAUA,EAAQtQ,MAAM,EAAGiqG,GAKjD,SAASC,EAAYnkG,GAAU,UACpC6gB,EAAS,OACT1K,EAAM,QACN0J,IAEA,OAAO7f,EAASqX,iBAAiB,iBAAkB,CAAC,CAClDwJ,UAAAA,EACA1K,OAAQ,CACNtK,MAAOsK,EAAOtK,MAAM1b,KAAI,EACtBwnC,GAAAA,EACA/zB,KAAAA,KACI5D,EAASqX,iBAAiB,eAAgB,CAAC,CAC/CsgB,GAAAA,EACA/zB,KAAM,IAAKA,EACTyc,KAAM4jF,EAASrgG,EAAKyc,aAI1BR,QAASA,EAAQ1vB,KAAI,EACnB4vB,MAAAA,EACA1a,MAAAA,EACArK,KAAAA,MACI,CACJ+kB,MAAO/f,EAASqX,iBAAiB,mCAAoC,CAAC0I,EAAMjY,SAAS,QACrFzC,MAAAA,EACArK,KAAAA,SAEA8F,8GChCN,MAAMkI,GAAI,OAAO,YAGV,SAASo7F,EAAcpkG,EAAUg7F,EAAYnvF,GAClD,MAAMy7C,GAAU,QAAY,OAAaz7C,IAAQzK,QAAOwC,IAAS5D,EAAS+e,QAAQnb,KAAU5D,EAAS2W,aAAa/S,KAAO2K,OAEzH,GAAuB,IAAnB+4C,EAAQ53D,OAAc,CACxB,MAAMmW,EAAU,qCAAqCyhD,EAAQvmD,KAAK,QAElE,GAAIi6F,EACF,MAAM,IAAIlnG,MAAM+R,GAEhBmD,EAAE4U,KAAK/X,GAIX,OAAOgG,iCCjBF,SAASw4F,EAAMrkG,GAAU,QAC9BouD,IAEA,OAAOpuD,EAASqX,iBAAiB,cAAe,CAAC,CAG/CwJ,UAAW,CACT/D,iBAAkB,GAClBtC,QAAS,GAEX4zC,QAAAA,oDCRG,SAASk2C,EAAMtkG,GAAU,UAC9B6gB,EAAS,QACTutC,IAEA,OAAOpuD,EAASqX,iBAAiB,cAAe,CAAC,CAC/CwJ,UAAAA,EACAutC,QAASA,EAAQj+D,KAAI1B,GAAOuR,EAASqX,iBAAiB,oBAAqB,CAAC,IAAK5oB,EAC/E4W,MAAO,2DCPN,SAASk/F,EAAMvkG,EAAU4c,GAC9B,OAAO5c,EAASqX,iBAAiB,cAAe,CAACuF,yGCFnD,MAAM4nF,EAAQ,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAM7F,SAASC,EAAWC,EAAOxqF,GACzB,MAAMtW,EAAOsW,EAAM7d,WAEbgJ,EAAQq/F,EAAM9E,WAAU,EAC5B36F,IAAAA,KACIA,EAAI0sE,qBAAuB/tE,IAEjC,OAAe,IAAXyB,EACKA,EAGFq/F,EAAMhxG,KAAK,CAChBuR,IAAK,CACH0sE,mBAAoB/tE,KAEnB,EASP,SAAS+gG,EAAcD,EAAOn+F,GAC5B,OAAOm+F,EAAMhxG,KAAK,CAChBuR,IAAK,CACHyD,MAAOnC,KAEN,EAGP,SAASq+F,EAAgBC,EAASC,EAAaJ,EAAO9pF,GACpD,OAAO8pF,EAAMhxG,KAAK,CAChBuR,IAAK,CACHkrE,QAAS,CACPv1D,SAAAA,IAGJo1D,KAAM,CAAC,UAAU60B,EAAQxoG,aAAc,SAAUyoG,KAC9C,EA4BP,SAASC,EAAgBC,EAAcn5F,GACrCA,EAAM3B,SAAQtG,IACZ,MAAM2L,EAAWnK,OAAOE,KAAK0/F,GAAcrhG,MAAKshG,GAAWrhG,EAAKtD,GAAG2kG,KAEnE,GAAI11F,EACF3L,EAAK4I,YAAYw4F,EAAaz1F,QACzB,CAEL,MAAM21F,EAAOthG,EAAKvH,WACZmV,EAAQpM,OAAOmB,QAAQy+F,GAAcn1G,QAAO,CAACgN,GAASgW,EAAKsyF,KAASX,EAAM30G,QAAO,CAACgN,GAAS/O,EAAGiB,KAAO8N,EAAOsV,QAAQ,GAAGrkB,IAAI+kB,IAAM9jB,IAAK,GAAGjB,IAAIq3G,IAAMp2G,MAAM8N,IAASqoG,GAEpKA,IAAS1zF,GACX5N,EAAK4I,YAAYgF,OAWzB,SAAS4zF,EAAaV,EAAO1kG,EAAU6kG,EAAS9kF,EAAOilF,GACrD,MAAMpqF,EAAWmF,EAAM5vB,KAAI,EACzBirB,KAAAA,EACAiF,KAAAA,EACArlB,KAAAA,GACCqK,KACD0/F,EAAgBC,EAAc5pF,EAAKjrB,KAAI,EACrCyT,KAAAA,KACIA,KACC5D,EAASqX,iBAAiB,YAAa,CAAC,CAC7CgJ,KAAAA,EACAlF,OAAQC,EAAKjrB,KAAI,EACf6K,KAAAA,EACA4I,KAAAA,KACI5D,EAASqX,iBAAiB,UAAW,CAAC,CAC1Crc,KAAAA,EACA4I,KAAM6gG,EAAWC,EAAO9gG,QAE1ByB,MAAAA,EACArK,KAAAA,QAGJ,OAAOgF,EAASqX,iBAAiB,wBAAyB,CAAC,CACzDzT,KAAMghG,EAAgBC,EAAS,OAAQH,EAAO9pF,MASlD,SAASyqF,EAAiBX,EAAO1kG,EAAUihB,EAAW+jF,GACpD,OAAO/jF,EAAU9wB,KAAI,EACnBkwB,KAAAA,EACArlB,KAAAA,EACA4I,KAAAA,EACAlC,MAAAA,MAEAqjG,EAAgBC,EAAc,CAACphG,IACxB5D,EAASqX,iBAAiB,4BAA6B,CAAC,CAC7DgJ,KAAAA,EACArlB,KAAAA,EACA4I,KAAM6gG,EAAWC,EAAO9gG,GACxBlC,MAAAA,QAWN,SAAS4jG,EAAcZ,EAAO1kG,EAAU6kG,EAAS1kF,EAAQolF,GACvD,MAAM3qF,EAAWuF,EAAOhwB,KAAI,EAC1BkwB,KAAAA,EACArlB,KAAAA,GACCqK,IAAUrF,EAASqX,iBAAiB,YAAa,CAAC,CACnDgJ,KAAAA,EACAlF,OAAQ,GACR9V,MAAAA,EACArK,KAAAA,OAEF,OAAOgF,EAASqX,iBAAiB,yBAA0B,CAAC,CAC1DzT,KAAMghG,EAAgBC,EAAS,QAASH,EAAO9pF,MASnD,SAAS4qF,EAAcd,EAAO1kG,EAAU6kG,EAAStkF,EAAQykF,GACvD,MAAMpqF,EAAW2F,EAAOpwB,KAAI,EAC1BirB,KAAAA,EACAiF,KAAAA,EACArlB,KAAAA,GACCqK,KACD0/F,EAAgBC,EAAc5pF,GACvBpb,EAASqX,iBAAiB,YAAa,CAAC,CAC7CgJ,KAAAA,EACAlF,OAAQC,EAAKjrB,KAAIyY,GAAK5I,EAASqX,iBAAiB,UAAW,CAAC,CAC1DzT,KAAM6gG,EAAWC,EAAO97F,QAE1BvD,MAAAA,EACArK,KAAAA,QAGJ,OAAOgF,EAASqX,iBAAiB,yBAA0B,CAAC,CAC1DzT,KAAMghG,EAAgBC,EAAS,QAASH,EAAO9pF,MAInD,SAAS6qF,EAAef,EAAO1kG,EAAUglG,GAAc,QACrDhzC,EAAO,SACP0zC,EAAQ,WACRzuF,EAAU,KACV3R,EAAI,MACJ5D,IAGA,OADAqjG,EAAgBC,EAAc,CAACtjG,KAAWjS,MAAM0W,QAAQb,GAAQA,EAAO,CAACA,KACjEtF,EAASqX,iBAAiB,sBAAuB,CAAC,CACvD9L,IAAK,CACHymD,QAAAA,EACA/5D,IAAwB,IAAnB+5D,EAAQtiE,OAAe+0G,EAAWC,EAAOp/F,EAAK,IAAMq/F,EAAcD,EAAOp/F,EAAKnV,KAAIyY,GAAK67F,EAAWC,EAAO97F,MAC9GlH,MAEE+iG,EAAWC,EAFNgB,EAEa,IAAIzuF,EAAa,UAAUvV,EAAMrF,cAAgBqF,EAAMrF,uBAAuBiJ,EAAK,GAAGjJ,eAAoCqF,OAUpJ,SAASikG,EAAejB,EAAO1kG,GAAU,MACvCovD,EAAK,OACLj2D,GACC6rG,GACD,OAAOhlG,EAASqX,iBAAiB,2BAA4B,CAAC,CAC5D+3C,MAAOA,EAAMj/D,KAAI,EACfkwB,KAAAA,EACAsuC,SAAAA,EACAD,SAAAA,EACA1zD,KAAAA,EACA4I,KAAAA,MAEA,IAAIgiG,EAEJ,GAAIhiG,EAAKigG,QAAS,CAChB,MAAMgC,EAAQjiG,EAAKkgG,QACnBiB,EAAgBC,EAAc,CAACa,IAC/BD,EAAY5lG,EAASqX,iBAAiB,sBAAuB,CAAC,CAC5Dw3C,MAAO41C,EAAWC,EAAOmB,WAEtB,GAAIjiG,EAAKkiG,MAAO,CACrB,MAAM31G,EAAMyT,EAAKmgG,MACjB6B,EAAYH,EAAef,EAAO1kG,EAAUglG,EAAc,CACxDhzC,QAAS,CAAC7hE,EAAIovB,QACdmmF,SAAUv1G,EAAI2+D,OAAO1iD,OACrB6K,WAAYy3C,EAASz3C,WACrB3R,KAAM,CAACnV,EAAI8H,KACXyJ,MAAOvR,EAAIuR,aAER,GAAIkC,EAAKmiG,YAAa,CAC3B,MAAMC,EAAKpiG,EAAKqiG,YAChBL,EAAYH,EAAef,EAAO1kG,EAAUglG,EAAc,CACxDhzC,QAAS,CAACg0C,EAAGzmF,OAAQymF,EAAG92C,YACxBw2C,UAAU,EACVzuF,WAAYy3C,EAASz3C,WACrB3R,KAAM,CAAC0gG,EAAGh3C,KAAMg3C,EAAG/2C,MACnBvtD,MAAOskG,EAAGtkG,YAEP,CACL,MAAMwkG,EAAKtiG,EAAKuiG,OAChBP,EAAYH,EAAef,EAAO1kG,EAAUglG,EAAc,CACxDhzC,QAASk0C,EAAGl0C,QACZ0zC,UAAU,EACVzuF,WAAYy3C,EAASz3C,WACrB3R,KAAM4gG,EAAGn0C,OACTrwD,MAAOwkG,EAAGxkG,QAId,OAAO1B,EAASqX,iBAAiB,0BAA2B,CAAC,CAC3DgJ,KAAAA,EACAsuC,SAAAA,EACAD,SAAAA,EACA1zD,KAAAA,EACA4I,KAAMgiG,QAGVzsG,OAAAA,KAiDG,SAASitG,EAAMpmG,EAAUkxD,EAAKm1C,GACnC,MAAM3B,EAAQ,IA5ShB,SAAqBA,KAAU74F,GAC7B,IAAK,IAAI7b,EAAI,EAAGA,EAAI6b,EAAMnc,OAAQM,IAChCy0G,EAAWC,EAAO74F,EAAM7b,IA4S1Bs2G,CAAY5B,EAAO,OAAQ,KAAM,MAAO,MAAO,OAhRjD,SAA8B1kG,EAAUouD,EAASi4C,GAC/CrmG,EAAS4b,SAAS,CAChBixD,aAAc,CACZvlE,MAAO8mD,EAAQj+D,KAAI,CAAC1B,EAAK4W,IAAU,CAAC5W,EAAIuM,KAAKqB,WAAYgqG,GAAe,GAAK53G,EAAI4W,MAAMtB,WAAasB,KAAQkJ,MAAK,CAACzgB,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI8B,QAAO,CAACgN,GAAS7B,EAAMqK,MAC7J,IAAK,IAAIrV,EAAIoV,OAAOE,KAAKzI,GAAQnN,OAAQM,EAAIqV,EAAOrV,IAClD6M,EAAO,QAAQ7M,KAAO,OAIxB,OADA6M,EAAO7B,GAAQ,IAAaA,IAAS,OAC9B6B,IACN,OAuQP0pG,CAAqBvmG,EAAUkxD,EAAI9C,QAASi4C,GAC5C,MAAMxlF,EA/CR,SAA0B7gB,GAAU,iBAClC8c,EAAgB,QAChBtC,IAEA,OAAOxa,EAASqX,iBAAiB,uBAAwB,CAAC,CACxDyF,iBAAkBA,EAAiB3sB,KAAI4wB,IAAc,CACnDA,WAAAA,EACAnd,KAAM,MAGRA,KAAM,EAEN4W,QAAAA,KAmCgBgsF,CAAiBxmG,EAAUkxD,EAAIrwC,WAC3ChB,EAAUqxC,EAAI9C,QAAQj+D,KAAI1B,GA9BlC,SAAsBi2G,EAAO1kG,EAAUvR,GAAK,MAC1CsxB,EAAK,UACLkB,EAAS,OACTd,EAAM,OACNI,EAAM,QACNguC,IAEA,MAAMy2C,GAAe,OAAchlG,GAAU,QAAgBvR,EAAIuM,OACjE,OAAOgF,EAASqX,iBAAiB,oBAAqB,CAAC,CACrD0I,MAAOA,GAASqlF,EAAaV,EAAO1kG,EAAUvR,EAAIuM,KAAM+kB,EAAOilF,GAC/D/jF,UAAWokF,EAAiBX,EAAO1kG,EAAUihB,EAAW+jF,GACxD7kF,OAAQA,GAAUmlF,EAAcZ,EAAO1kG,EAAUvR,EAAIuM,KAAMmlB,GAC3DI,OAAQA,GAAUilF,EAAcd,EAAO1kG,EAAUvR,EAAIuM,KAAMulB,EAAQykF,GACnE3/F,MAAO5W,EAAI4W,MACXrK,KAAMvM,EAAIuM,KACVuzD,QAASA,GAAWo3C,EAAejB,EAAO1kG,EAAUuuD,EAASy2C,MAexByB,CAAa/B,EAAO1kG,EAAUvR,EAAK,CACxEsxB,MAAOtxB,EAAIsxB,MAAMjY,SAAS,MAC1BmZ,UAAWxyB,EAAIwyB,UACfd,OAAQ1xB,EAAI0xB,OAAOzwB,OAASjB,EAAI0xB,OAAS,KACzCI,OAAQ9xB,EAAI8xB,OAAOzY,SAAS,MAC5BymD,QAAS9/D,EAAI8/D,QAAQzmD,SAAS,UAEhC,OAAO9H,EAASqX,iBAAiB,cAAe,CAAC,CAC/CwJ,UAAAA,EACA1K,OAAQ,CACNtK,MAAO64F,EAAMv0G,KAAI,CAACyT,EAAM+zB,IAAO33B,EAASqX,iBAAiB,eAAgB,CAAC,CACxEsgB,GAAAA,EACA/zB,KAAAA,QAGJic,QAAAA,oCCrVG,SAAS6mF,EAAS1mG,EAAUmyD,EAAKw0C,GACtC,OAAOx0C,iDCHT,SAASy0C,EAAoB5mG,EAAUuf,GAGrC,OAAIA,EAAOxb,YAAc,EAChB/D,EAASqX,iBAAiB,mBAAoB,CAACkI,EAAOxb,WAAa,IAGrE/D,EAASqX,iBAAiB,mBAAoB,CAACkI,IAKxD,SAASsnF,EAAkB7mG,EAAU4lG,GACnC,OAAIA,EAAUE,MACL,CAAC,IAAKF,EAAU7B,MACrBxkF,OAAQqnF,EAAoB5mG,EAAU4lG,EAAU7B,MAAMxkF,SACrD,GAGDqmF,EAAUG,YACL,CAAC,IAAKH,EAAUK,YACrB1mF,OAAQqnF,EAAoB5mG,EAAU4lG,EAAUK,YAAY1mF,QAC5D2vC,WAAY03C,EAAoB5mG,EAAU4lG,EAAUK,YAAY/2C,aAC/D,GAGE,CAAC02C,EAAU9B,QAAS,GAkBtB,SAASgD,EAAM9mG,GAAU,QAC9BouD,IAEA,OAAOpuD,EAASqX,iBAAiB,cAAe,CAAC,CAC/C+2C,QAASA,EAAQj+D,KAAI1B,GAjBzB,SAAuBuR,EAAUvR,GAC/B,MAAM8/D,EAAU9/D,EAAI8/D,QAAQzmD,SAAS,MACrC,OAAO9H,EAASqX,iBAAiB,oBAAqB,CAAC,IAAK5oB,EAC1D8/D,QAASA,EAAU,IAAKA,EACtBa,MAAOb,EAAQa,MAAMj/D,KAAI42G,IAAQ,IAAMA,EACrCnjG,KAAM5D,EAASqX,iBAAiB,sBAAuBwvF,EAAkB7mG,EAAU+mG,EAAKnjG,YAExF,QAUwBojG,CAAchnG,EAAUvR,uDCtDzC,SAASw4G,EAAuBhjC,EAAUjsE,GACvD,IAAKoN,OAAOqG,UAAUy7F,eAAeh9E,KAAK+5C,EAAUjsE,GAClD,MAAM,IAAI5I,UAAU,kDAGtB,OAAO60E,kECLT,IAAItsC,EAAK,EACM,SAASwvE,EAAsBnsG,GAC5C,MAAO,aAAe28B,IAAO,IAAM38B,4GCwC9B,MAAMosG,UAAa,IACxBv4G,YAAYmR,EAAU0B,GACpBzB,MAAMD,EAAU,CACdyH,KAAM,OAEN8F,IAAK,QAGL85F,YAAa,OAEbC,OAAQ,OAGRC,UAAW,OAEXC,YAAa,WAhCnB,SAAoBxnG,EAAU0B,GAC5B,OAAI,OAAMA,KAAU,OAASA,GApB/B,SAAuB1B,EAAU0B,GAC/B,MAAM+lG,EAAY/lG,EAAM,GAExB,IAAK+lG,EACH,MAAO,MAACjtG,OAAWA,GACd,GAAIitG,GAAa,GAAKA,GAAa,GAAI,CAC5C,MAAM/3G,EAAS+3G,EAAY,EACrB7sG,EAAO8G,EAAMzL,SAAS,EAAGvG,EAAS,GAExC,MAAO,CAACsQ,EAASqX,iBAAiB,MAAO,CAACzc,IAAQ,GAC7C,GAAI6sG,GAAa,IAAMA,GAAa,GACzC,MAAO,CAAC/lG,EAAMzL,SAAS,EAAG,IAASwxG,EAAY,IAGjD,MAAM,IAAI3zG,MAAM,iDAAiD2zG,KAOxDC,CAAc1nG,GAAU,OAAS0B,IAC9BA,EAKL,CAACA,OAAOlH,GAJN,MAACA,OAAWA,GA8BbmtG,CAAW3nG,EAAU0B,KAC3B,SAAQ1S,KAAK44G,OAAS54G,KAAK64G,MAAMn4G,QAAU,GAAI,+DAG7Co4G,oBACF,OAAO94G,KAAK0S,MAGVqmG,kBACF,OAAO/4G,KAAK0S,MAGVmmG,YACF,OAAO74G,KAAK0S,MAGVsmG,eACF,OAAOh5G,KAAK0S,MAGVumG,oBACF,OAAOj5G,KAAK0S,MAGVwmG,oBACF,OAAsB,IAAfl5G,KAAKqW,MAGV8iG,kBACF,OAAsB,IAAfn5G,KAAKqW,MAGV0B,aACF,OAAsB,IAAf/X,KAAKqW,MAGVuiG,YACF,OAAsB,IAAf54G,KAAKqW,MAGV+iG,eACF,OAAsB,IAAfp5G,KAAKqW,MAGVgjG,oBACF,OAAsB,IAAfr5G,KAAKqW,MAOVnF,oBACF,OAAOlR,KAAKoR,QAAQ1Q,OAOtB0Q,QACE,GAAmB,IAAfpR,KAAKqW,MACP,OAAO,IAAIpJ,WAAW,GACjB,GAAmB,IAAfjN,KAAKqW,MAAa,CAE3B,MAAMzK,EAAO5L,KAAK0S,MAAMtB,OAAM,GACxB1Q,EAASoF,KAAKsf,IAAIxZ,EAAKlL,OAAQ,IAC/BgX,EAAM,IAAIzK,WAAWvM,EAAS,GAGpC,OAFAgX,EAAIvS,IAAI,CAACzE,EAAS,GAAI,GACtBgX,EAAIvS,IAAIyG,EAAK3E,SAAS,EAAGvG,GAAS,GAC3BgX,EAIT,MAAMA,EAAM,IAAIzK,WAAW,IAG3B,OAFAyK,EAAIvS,IAAI,CAACnF,KAAKqW,MAAQ,IAAK,GAC3BqB,EAAIvS,IAAInF,KAAK0S,MAAMtB,QAAS,GACrBsG,8uBCrIJ,SAAS4hG,EAAqB7hG,GACnC,MAAM8hG,EAA0B,GAAb9hG,EAAQ,GAAkB,EAAI,EAC3C+hG,EAA6B,IAAfD,EAAmB9hG,EAAQ,IAAmB,GAAbA,EAAQ,KAAoB,EAAIA,EAAQ,IAAM,GAAkB,GAAbA,EAAQ,KAAoB,EAE9HgiG,EAAc,CAAC,GAAKF,EAAY,GAAKA,GAAYhnG,SAASkF,EAAQ/W,QAClEA,EAAS+W,EAAQ/W,QAAU+4G,EAAc,EAAI,GAE7C/vG,GAAO,OAAO+N,EAAQxQ,SAAS,EAAGvG,IAExC,MAAO,CADuC,IAAhB,IAAb+W,EAAQ,MAA2B,CAAC,GAAI,IAAIlF,SAASkF,EAAQ,MAAQgiG,EAAchiG,EAAQA,EAAQ/W,OAAS,KAAOgJ,EAAK,IAAM+N,EAAQA,EAAQ/W,OAAS,KAAOgJ,EAAK,GAAK+N,EAAQA,EAAQ/W,OAAS,KAAOgJ,EAAK,IAC7MhJ,EAAQ64G,EAAYC,oICLhC,SAASE,EAAcznG,EAAS0nG,EAAgBxsF,GAAa,GAGlE,IAFA,QAAOlb,EAAS,iCAEZ,OAAMA,KAAY,QAAMA,GAC1B,OAAO,OAASA,GAGlB,IACE,MAAMwF,GAAU,QAAaxF,IAC7B,QAAO,mCAAwCwF,EAAQ/W,QAAS,kCAChE,MAAOk5G,EAASC,EAAQN,EAAYC,IAAe,OAAqB/hG,GAGxE,OAFA,QAAOkiG,GAAkBC,EAAS,qCAClC,QAAO,EAAE,EAAGJ,GAAajnG,SAAS4a,IAAa,IAAM,uBAAuBA,eAAwBqsF,MAC7F/hG,EAAQxM,MAAMsuG,EAAYM,GACjC,MAAO7vG,GACP,MAAM,IAAIlF,MAAM,YAAYmN,MAAYjI,EAAM6M,4DCnB3C,MAAMijG,EAAW,CACtBC,sBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAExCC,sBAAuB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACjDC,uBAAe,QAAsB,EACnC9vG,OAAAA,KACIA,IACNA,OAAQ,yHCFH,SAAS+vG,EAAcjxG,EAAKkkB,EAAa,YAE9C,MAAMzV,GAAM,OAAczO,IAC1B,QAAOkkB,GAAc,GAAKA,GAAc,QAAU,CAAC,GAAI,IAAI5a,SAAS4a,GAAa,sCACjF,QAAO,mCAAwCzV,EAAIhX,SAAS,IAAM,gDAAgD,+BAAoC,UACtJ,MAAMyhB,GAAQ,OAAUgL,EAAa,GAAK,CAACA,GAAc,EAAe,IAAbA,IAAoC,EAAI,GAAYA,GAAc,GAAkB,EAAbA,IAAoC,GAAIzV,GAC1K,OAAO,SAAa,OAAUyK,GAAO,OAAOA,GAAOlb,SAAS,EAAG,CAAC,GAAI,IAAIsL,SAASmF,EAAIhX,QAAU,EAAI,0FCVrG,MAAMy5G,GAAc,OAAY,WACzB,SAASC,EAAOnxG,GACrB,OAAO,IAAAlK,IAAY,OAAUo7G,EAAalxG,GAAM,2GCD3C,SAASoxG,GAAa,MAC3BC,EAAK,KACLC,GACCC,GACD,MAAO,CAAC9nG,EAAO+nG,KACbD,EAAS9nG,EAAO+nG,GACTH,EAAM/+E,OAAOg/E,GAAQE,EAAa/nG,EAAMgQ,UAAU,GAAKhQ,IAK3D,SAASgoG,GAAa,MAC3BJ,EAAK,KACLC,IAEA,MAAO,CAAC7nG,EAAO+nG,KACb,MAAMpiG,EAAMiiG,EAAMK,QAAO,OAASjoG,IAClC,OAAO6nG,GAAQE,EAAa,GAAGF,IAAOliG,IAAQA,GAK3C,SAASuiG,EAASJ,GACvB,MAAO,CAAC9nG,EAAO+nG,KACb,IACE,OAAOD,EAAS9nG,EAAO+nG,GACvB,MAAOzwG,GACP,OAAO,IAMN,SAAS6wG,GAAe,MAC7BC,EAAK,KACLP,EAAI,KACJ3lG,IAEA,MAAO,CAAClC,EAAO+nG,MACb,QAAO/nG,GAA0B,iBAAVA,GAAoB,IAAM,gCAAgCkC,mBAE7E2lG,GAAQE,IACV,QAAO/nG,EAAM,KAAO6nG,GAAM,IAAM,4BAA4B3lG,oBAAuB2lG,OAGrF,IAAK,IAAIv5G,EAAIy5G,EAAa,EAAI,EAAGz5G,EAAI0R,EAAMhS,OAAQM,KACjD,QAAO85G,EAAMvoG,SAASG,EAAM1R,KAAoB,MAAb0R,EAAM1R,KAAeA,IAAM0R,EAAMhS,OAAS,IAAMo6G,EAAMvoG,SAASG,EAAM1R,EAAI,MAAM,IAAM,WAAW4T,gBAAmBlC,EAAM1R,UAAU0R,EAAMqoG,WAAW/5G,GAAGqM,SAAS,iBAAiBrM,MAGtN,OAAO,uFClDX,MAAMg6G,EAAS,CACbF,MAAO,6DACPR,MAAO,KACPC,KAAM,IACN3lG,KAAM,UASKqmG,GAAiB,QAAeD,GAQhCE,GAAe,QAAaF,EAAQC,GAQpCE,GAAe,QAAaH,IAMjB,QAASC,iGClB1B,SAASG,EAAYxvG,EAAMyH,EAAY,IAAKpK,EAAKoyG,GACtD,MAAM39F,EAAa5X,KAAK6V,KAAKtI,EAAY,GACnCqE,GAAM,OAAS9L,GACrB,OAAQ,OAAcyvG,IAAU,WAAY,QAAQ3jG,GAAK,OAASzO,GAAMyU,IAAc,OAAUhG,EAAK,CACnG4jG,MAAO59F,EACPzU,IAAKA,QAAOuC,KAQW,eAAY4vG,mDChChC,MAkBMG,EAAiB,CAC5BloG,UAAW,IACXN,MAAM,6GCRD,SAASyoG,EAAeC,GAC7B,IAAKA,EACH,MAAO,KAGT,MAAMC,GAAa,OAASD,IAC5B,QAAO,CAAC,GAAI,GAAI,GAAI,IAAIlpG,SAASmpG,EAAWh7G,QAAS,uCACrD,MAAMw1B,GAAU,QAdZ,CAAC,GAAI,IAAI3jB,UADEmF,EAekBgkG,GAdPh7G,UACxBgX,GAAM,SAAY,OAAgBA,KAG7BA,EAAIzM,OAAO,MAU6B,GAAG,GAfpD,IAAiByM,EAgBf,MAAMhO,GAAO,QAAS,QAAYwsB,IAAW,GAAG,GAChD,IAAIroB,EAAS,GAEb,IAAK,IAAI7M,EAAI,EAAGA,EAAI,GAAIA,IACtB6M,EAAS,GAAGA,IAASnC,SAAShC,EAAK1I,GAAI,IAAM,EAAIk1B,EAAQl1B,GAAG26G,cAAgBzlF,EAAQl1B,KAGtF,MAAO,KAAK6M,8ECzBP,SAAS+tG,EAAkB1lF,GAChC,SAAKA,GAA8B,KAAnBA,EAAQx1B,UAAkB,QAAMw1B,SAErC,sBAAsBzI,KAAKyI,KAAY,sBAAsBzI,KAAKyI,MAItE,OAAmBA,8ECFrB,SAAS2lF,EAAmBC,GACjC,MAAM5lF,EAAU4lF,EAAS34F,QAAQ,KAAM,IAEjCzZ,GAAO,QAAS,QAAYwsB,EAAQxf,gBAAiB,GAAG,GAE9D,IAAK,IAAI1V,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAVmB+6G,EAUD7lF,EAAQl1B,OAAI0K,SAAShC,EAAK1I,GAAI,IAT1B,EAAI+6G,EAAKJ,cAAgBI,EAAKrlG,eAUlD,OAAO,EAXb,IAAuBqlG,EAerB,OAAO,oHCdF,SAASC,EAAYC,GAC1B,MAAO,IAAI7vF,KAAS,OAAS6vF,KAAM7vF,IAI9B,SAAS8vF,EAAgB7oG,EAAW4oG,GACzC,MAAO,CAACrwG,EAAMyvG,IAAWY,EAAGrwG,EAAMyH,EAAWgoG,GAIxC,SAASc,EAAiBC,EAAIC,GACnC,MAAO,CAAC3pG,EAAOW,EAAY,IAAKgoG,KAC9B,MAAM3jG,GAAM,OAAShF,GACrB,OAAQ,OAAc2oG,IAAU,UAAYe,EAAG/oG,GAAWqE,GAAO2kG,EAAGhpG,GAAWqE,yFCC5E,MAAM4kG,GAAc,QAAiB,CAC1C,IAAK,KACL,IAAK,MACJ,CACD,IAAK,KACL,IAAK,OAOuB,QAAgB,IAAKA,IAMrB,QAAgB,IAAKA,IAMxB,QAAYA,iCC5ChC,SAASvuG,EAAO9O,GACnB,IAAK0G,OAAOuD,cAAcjK,IAAMA,EAAI,EAChC,MAAM,IAAI6F,MAAM,2BAA2B7F,KAM5C,SAAS6H,EAAM/H,KAAMw9G,GACxB,KAAMx9G,aAAakO,YACf,MAAM,IAAI7M,UAAU,uBACxB,GAAIm8G,EAAQ77G,OAAS,IAAM67G,EAAQhqG,SAASxT,EAAE2B,QAC1C,MAAM,IAAIN,UAAU,iCAAiCm8G,oBAA0Bx9G,EAAE2B,4BAqBzF,MAQA,EARe,CACXqN,OAAAA,EACAmQ,KA/BG,SAAcnf,GACjB,GAAiB,kBAANA,EACP,MAAM,IAAI+F,MAAM,yBAAyB/F,MA8B7C+H,MAAAA,EACA4C,KAvBG,SAAcA,GACjB,GAAoB,mBAATA,GAA8C,mBAAhBA,EAAK8yG,OAC1C,MAAM,IAAI13G,MAAM,mDACpBiJ,EAAOrE,EAAK+yG,WACZ1uG,EAAOrE,EAAKo8C,WAoBZ42D,OAlBG,SAAgB5+F,EAAU6+F,GAAgB,GAC7C,GAAI7+F,EAAS8+F,UACT,MAAM,IAAI93G,MAAM,oCACpB,GAAI63G,GAAiB7+F,EAAS++F,SAC1B,MAAM,IAAI/3G,MAAM,0CAepBkW,OAbG,SAAgB3C,EAAKyF,GACxBhX,EAAMuR,GACN,MAAM+M,EAAMtH,EAAS2+F,UACrB,GAAIpkG,EAAI3X,OAAS0kB,EACb,MAAM,IAAItgB,MAAM,yDAAyDsgB,wFC3B1E,MAAM03F,EAAQ,IAAI7vG,WAAW,CAChC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EACnD,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACnD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAEnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAEhD,MAAM8vG,UAAe,KACxBl9G,YAAYimD,EAAU22D,EAAWO,EAAO,GAAIC,EAAQC,EAASC,GAWzD,GAVAlsG,QACAjR,KAAK8lD,SAAWA,EAChB9lD,KAAKy8G,UAAYA,EACjBz8G,KAAKU,OAAS,EACdV,KAAKo9G,IAAM,EACXp9G,KAAK68G,UAAW,EAChB78G,KAAK48G,WAAY,EACjB,YAAc92D,GACd,YAAc22D,GACd,YAAcQ,GACVR,EAAY,GAAKA,EAAYQ,EAC7B,MAAM,IAAIn4G,MAAM,wCACpB,QAAiB0G,IAAbwxG,EAAK/zG,MAAsB+zG,EAAK/zG,IAAIvI,OAAS,GAAKs8G,EAAK/zG,IAAIvI,OAASu8G,GACpE,MAAM,IAAIn4G,MAAM,uBAAuBm4G,4BAC3C,QAAkBzxG,IAAdwxG,EAAKtnE,MAAsBsnE,EAAKtnE,KAAKh1C,SAAWw8G,EAChD,MAAM,IAAIp4G,MAAM,kBAAkBo4G,4BACtC,QAA6B1xG,IAAzBwxG,EAAKK,iBAAiCL,EAAKK,gBAAgB38G,SAAWy8G,EACtE,MAAM,IAAIr4G,MAAM,6BAA6Bq4G,4BACjDn9G,KAAKs9G,UAAW,QAAKt9G,KAAKu9G,OAAS,IAAItwG,WAAW64C,IAEtDsO,OAAOxoD,GACH,YAAc5L,MAKd,MAAM,SAAE8lD,EAAQ,OAAEy3D,EAAM,SAAED,GAAat9G,KAEjC4I,GADNgD,GAAO,QAAQA,IACElL,OACjB,IAAK,IAAI08G,EAAM,EAAGA,EAAMx0G,GAAM,CAEtB5I,KAAKo9G,MAAQt3D,IACb9lD,KAAKw9G,SAASF,EAAU,GAAG,GAC3Bt9G,KAAKo9G,IAAM,GAEf,MAAMK,EAAO33G,KAAKsf,IAAI0gC,EAAW9lD,KAAKo9G,IAAKx0G,EAAMw0G,GAC3CM,EAAa9xG,EAAK+xG,WAAaP,EAErC,GAAIK,IAAS33D,GAAc43D,EAAa,KAAMN,EAAMK,EAAO70G,GAQ3D20G,EAAOp4G,IAAIyG,EAAK3E,SAASm2G,EAAKA,EAAMK,GAAOz9G,KAAKo9G,KAChDp9G,KAAKo9G,KAAOK,EACZz9G,KAAKU,QAAU+8G,EACfL,GAAOK,MAXP,CACI,MAAMG,EAAS,IAAIC,YAAYjyG,EAAK2xG,OAAQG,EAAY53G,KAAKg4G,OAAOl1G,EAAMw0G,GAAO,IACjF,IAAK,IAAIW,EAAQ,EAAGX,EAAMt3D,EAAWl9C,EAAKm1G,GAAST,EAAS58G,OAAQ08G,GAAOt3D,EACvE9lD,KAAKU,QAAUolD,EACf9lD,KAAKw9G,SAASI,EAAQG,GAAO,IASzC,OAAO/9G,KAEXg+G,WAAW3lG,GACP,YAAcrY,MACd,YAAcqY,EAAKrY,MACnB,MAAM,IAAEo9G,EAAG,SAAEE,GAAat9G,KAC1BA,KAAK68G,UAAW,EAEhB78G,KAAKu9G,OAAOt2G,SAASm2G,GAAKnkF,KAAK,GAC/Bj5B,KAAKw9G,SAASF,EAAU,GAAG,GAC3B,MAAMW,GAAQ,QAAI5lG,GAClBrY,KAAKiF,MAAMiW,SAAQ,CAAC9N,EAAGpM,IAAOi9G,EAAMj9G,GAAKoM,IAE7CwvE,SACI,MAAM,OAAE2gC,EAAM,UAAEd,GAAcz8G,KAC9BA,KAAKg+G,WAAWT,GAChB,MAAMzxG,EAAMyxG,EAAOtyG,MAAM,EAAGwxG,GAE5B,OADAz8G,KAAKk+G,UACEpyG,EAEXqyG,WAAWl6F,GACP,MAAM,OAAEs5F,EAAM,OAAE78G,EAAM,SAAEm8G,EAAQ,UAAED,EAAS,UAAEH,EAAS,IAAEW,GAAQp9G,KAShE,OARAikB,IAAOA,EAAK,IAAIjkB,KAAKH,YAAY,CAAEy7G,MAAOmB,KAC1Cx4F,EAAG9e,OAAOnF,KAAKiF,OACfgf,EAAGvjB,OAASA,EACZujB,EAAG44F,SAAWA,EACd54F,EAAG24F,UAAYA,EACf34F,EAAGw4F,UAAYA,EACfx4F,EAAGs5F,OAAOp4G,IAAIo4G,GACdt5F,EAAGm5F,IAAMA,EACFn5F,oDCrGf,MAAMm6F,EAAa7/G,OAAO,GAAK,GAAK,GAC9B8/G,EAAO9/G,OAAO,IAEb,SAAS+/G,EAAQr/G,EAAGs/G,GAAK,GAC5B,OAAIA,EACO,CAAEr/G,EAAGyG,OAAO1G,EAAIm/G,GAAapkG,EAAGrU,OAAQ1G,GAAKo/G,EAAQD,IACzD,CAAEl/G,EAAsC,EAAnCyG,OAAQ1G,GAAKo/G,EAAQD,GAAiBpkG,EAA4B,EAAzBrU,OAAO1G,EAAIm/G,IAsCpE,MAeA,EARY,CACRE,QAAAA,EAASxiG,MA5CN,SAAe0iG,EAAKD,GAAK,GAC5B,IAAIE,EAAK,IAAIZ,YAAYW,EAAI99G,QACzBg+G,EAAK,IAAIb,YAAYW,EAAI99G,QAC7B,IAAK,IAAIM,EAAI,EAAGA,EAAIw9G,EAAI99G,OAAQM,IAAK,CACjC,MAAM,EAAE9B,EAAC,EAAE8a,GAAMskG,EAAQE,EAAIx9G,GAAIu9G,IAChCE,EAAGz9G,GAAI09G,EAAG19G,IAAM,CAAC9B,EAAG8a,GAEzB,MAAO,CAACykG,EAAIC,IAqCIC,MAnCC,CAACz/G,EAAG8a,IAAOzb,OAAOW,IAAM,IAAMm/G,EAAQ9/G,OAAOyb,IAAM,GAoCpE4kG,MAlCU,CAAC1/G,EAAG8a,EAAGnQ,IAAM3K,IAAM2K,EAkCtBg1G,MAjCG,CAAC3/G,EAAG8a,EAAGnQ,IAAO3K,GAAM,GAAK2K,EAAOmQ,IAAMnQ,EAkChDi1G,OAhCW,CAAC5/G,EAAG8a,EAAGnQ,IAAO3K,IAAM2K,EAAMmQ,GAAM,GAAKnQ,EAgCxCk1G,OA/BG,CAAC7/G,EAAG8a,EAAGnQ,IAAO3K,GAAM,GAAK2K,EAAOmQ,IAAMnQ,EA+BjCm1G,OA7BL,CAAC9/G,EAAG8a,EAAGnQ,IAAO3K,GAAM,GAAK2K,EAAOmQ,IAAOnQ,EAAI,GA6B9Bo1G,OA5Bb,CAAC//G,EAAG8a,EAAGnQ,IAAO3K,IAAO2K,EAAI,GAAQmQ,GAAM,GAAKnQ,EA6BvDq1G,QA3BY,CAAChgH,EAAG8a,IAAMA,EA2BbmlG,QA1BG,CAACjgH,EAAG8a,IAAM9a,EA2BtBkgH,OAzBW,CAAClgH,EAAG8a,EAAGnQ,IAAO3K,GAAK2K,EAAMmQ,IAAO,GAAKnQ,EAyBxCw1G,OAxBG,CAACngH,EAAG8a,EAAGnQ,IAAOmQ,GAAKnQ,EAAM3K,IAAO,GAAK2K,EAwBhCy1G,OAtBL,CAACpgH,EAAG8a,EAAGnQ,IAAOmQ,GAAMnQ,EAAI,GAAQ3K,IAAO,GAAK2K,EAsB/B01G,OArBb,CAACrgH,EAAG8a,EAAGnQ,IAAO3K,GAAM2K,EAAI,GAAQmQ,IAAO,GAAKnQ,EAsBvD7G,IAlBG,SAAay7G,EAAIC,EAAIc,EAAIC,GAC5B,MAAMzlG,GAAK0kG,IAAO,IAAMe,IAAO,GAC/B,MAAO,CAAEvgH,EAAIu/G,EAAKe,GAAOxlG,EAAI,GAAK,GAAM,GAAM,EAAGA,EAAO,EAAJA,IAgB/C0lG,MAbK,CAAChB,EAAIe,EAAIE,KAAQjB,IAAO,IAAMe,IAAO,IAAME,IAAO,GAahDC,MAZF,CAACC,EAAKpB,EAAIe,EAAIM,IAAQrB,EAAKe,EAAKM,GAAOD,EAAM,GAAK,GAAM,GAAM,EAYrDE,MAXT,CAACrB,EAAIe,EAAIE,EAAIK,KAAQtB,IAAO,IAAMe,IAAO,IAAME,IAAO,IAAMK,IAAO,GAWnDC,MAVhB,CAACJ,EAAKpB,EAAIe,EAAIM,EAAII,IAAQzB,EAAKe,EAAKM,EAAKI,GAAOL,EAAM,GAAK,GAAM,GAAM,EAUhDM,MARvB,CAACN,EAAKpB,EAAIe,EAAIM,EAAII,EAAIE,IAAQ3B,EAAKe,EAAKM,EAAKI,EAAKE,GAAOP,EAAM,GAAK,GAAM,GAAM,EAQlDQ,MAT9B,CAAC3B,EAAIe,EAAIE,EAAIK,EAAIM,KAAQ5B,IAAO,IAAMe,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMM,IAAO,wFC3ClG,MAAMC,EAAK,IAAI1C,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,aAGlF2C,EAAM,IAAI3C,YAAY,IAE5B,SAAS4C,EAAG3hH,EAAGC,EAAGssB,EAAGxnB,EAAGsH,EAAK5L,GAEzB,MAAMmhH,EAAKv1G,EAAI5L,GAAIohH,EAAKx1G,EAAI5L,EAAI,GAChC,IAAIm/G,EAAK8B,EAAI,EAAI1hH,GAAI2/G,EAAK+B,EAAI,EAAI1hH,EAAI,GAClC2gH,EAAKe,EAAI,EAAIzhH,GAAIygH,EAAKgB,EAAI,EAAIzhH,EAAI,GAClC4gH,EAAKa,EAAI,EAAIn1F,GAAIy0F,EAAKU,EAAI,EAAIn1F,EAAI,GAClC20F,EAAKQ,EAAI,EAAI38G,GAAIq8G,EAAKM,EAAI,EAAI38G,EAAI,GAElC+8G,EAAK,WAAUlC,EAAIe,EAAIiB,GAC3BjC,EAAK,WAAUmC,EAAInC,EAAIe,EAAImB,GAC3BjC,EAAU,EAALkC,IAEFV,GAAAA,EAAIF,GAAAA,GAAO,CAAEE,GAAIA,EAAKzB,EAAIuB,GAAIA,EAAKtB,MACnCwB,GAAAA,EAAIF,GAAAA,GAAO,CAAEE,GAAI,aAAYA,EAAIF,GAAKA,GAAI,aAAYE,EAAIF,OAE1D9gH,EAAG4gH,EAAI9lG,EAAG2lG,GAAO,SAAQG,EAAIH,EAAIO,EAAIF,MAErCR,GAAAA,EAAIC,GAAAA,GAAO,CAAED,GAAIA,EAAKM,EAAIL,GAAIA,EAAKE,MACnCH,GAAAA,EAAIC,GAAAA,GAAO,CAAED,GAAI,YAAWA,EAAIC,EAAI,IAAKA,GAAI,YAAWD,EAAIC,EAAI,MAClEe,EAAI,EAAI1hH,GAAK4/G,EAAM8B,EAAI,EAAI1hH,EAAI,GAAK2/G,EACpC+B,EAAI,EAAIzhH,GAAK0gH,EAAMe,EAAI,EAAIzhH,EAAI,GAAKygH,EACpCgB,EAAI,EAAIn1F,GAAKs0F,EAAMa,EAAI,EAAIn1F,EAAI,GAAKy0F,EACpCU,EAAI,EAAI38G,GAAKm8G,EAAMQ,EAAI,EAAI38G,EAAI,GAAKq8G,EAEzC,SAASW,EAAG/hH,EAAGC,EAAGssB,EAAGxnB,EAAGsH,EAAK5L,GAEzB,MAAMmhH,EAAKv1G,EAAI5L,GAAIohH,EAAKx1G,EAAI5L,EAAI,GAChC,IAAIm/G,EAAK8B,EAAI,EAAI1hH,GAAI2/G,EAAK+B,EAAI,EAAI1hH,EAAI,GAClC2gH,EAAKe,EAAI,EAAIzhH,GAAIygH,EAAKgB,EAAI,EAAIzhH,EAAI,GAClC4gH,EAAKa,EAAI,EAAIn1F,GAAIy0F,EAAKU,EAAI,EAAIn1F,EAAI,GAClC20F,EAAKQ,EAAI,EAAI38G,GAAIq8G,EAAKM,EAAI,EAAI38G,EAAI,GAElC+8G,EAAK,WAAUlC,EAAIe,EAAIiB,GAC3BjC,EAAK,WAAUmC,EAAInC,EAAIe,EAAImB,GAC3BjC,EAAU,EAALkC,IAEFV,GAAAA,EAAIF,GAAAA,GAAO,CAAEE,GAAIA,EAAKzB,EAAIuB,GAAIA,EAAKtB,MACnCwB,GAAAA,EAAIF,GAAAA,GAAO,CAAEE,GAAI,YAAWA,EAAIF,EAAI,IAAKA,GAAI,YAAWE,EAAIF,EAAI,QAEhE9gH,EAAG4gH,EAAI9lG,EAAG2lG,GAAO,SAAQG,EAAIH,EAAIO,EAAIF,MAErCR,GAAAA,EAAIC,GAAAA,GAAO,CAAED,GAAIA,EAAKM,EAAIL,GAAIA,EAAKE,MACnCH,GAAAA,EAAIC,GAAAA,GAAO,CAAED,GAAI,YAAWA,EAAIC,EAAI,IAAKA,GAAI,YAAWD,EAAIC,EAAI,MAClEe,EAAI,EAAI1hH,GAAK4/G,EAAM8B,EAAI,EAAI1hH,EAAI,GAAK2/G,EACpC+B,EAAI,EAAIzhH,GAAK0gH,EAAMe,EAAI,EAAIzhH,EAAI,GAAKygH,EACpCgB,EAAI,EAAIn1F,GAAKs0F,EAAMa,EAAI,EAAIn1F,EAAI,GAAKy0F,EACpCU,EAAI,EAAI38G,GAAKm8G,EAAMQ,EAAI,EAAI38G,EAAI,GAAKq8G,EAEzC,MAAMY,UAAgB,IAClBjhH,YAAYm9G,EAAO,IACf/rG,MAAM,SAAoBzF,IAAfwxG,EAAK1B,MAAsB,GAAK0B,EAAK1B,MAAO0B,EAAM,GAAI,GAAI,IAErEh9G,KAAK+gH,IAAc,EAARR,EAAG,GACdvgH,KAAKghH,IAAc,EAART,EAAG,GACdvgH,KAAKihH,IAAc,EAARV,EAAG,GACdvgH,KAAKkhH,IAAc,EAARX,EAAG,GACdvgH,KAAKmhH,IAAc,EAARZ,EAAG,GACdvgH,KAAKohH,IAAc,EAARb,EAAG,GACdvgH,KAAKqhH,IAAc,EAARd,EAAG,GACdvgH,KAAKshH,IAAc,EAARf,EAAG,GACdvgH,KAAKuhH,IAAc,EAARhB,EAAG,GACdvgH,KAAKwhH,IAAc,EAARjB,EAAG,GACdvgH,KAAKyhH,IAAe,EAATlB,EAAG,IACdvgH,KAAK0hH,IAAe,EAATnB,EAAG,IACdvgH,KAAK2hH,IAAe,EAATpB,EAAG,IACdvgH,KAAK4hH,IAAe,EAATrB,EAAG,IACdvgH,KAAK6hH,IAAe,EAATtB,EAAG,IACdvgH,KAAK8hH,IAAe,EAATvB,EAAG,IACd,MAAMwB,EAAY/E,EAAK/zG,IAAM+zG,EAAK/zG,IAAIvI,OAAS,EAE/C,GADAV,KAAK+gH,KAAO/gH,KAAKy8G,UAAasF,GAAa,EAAK,MAAgB,GAAQ,GACpE/E,EAAKtnE,KAAM,CACX,MAAMA,GAAO,SAAI,QAAQsnE,EAAKtnE,OAC9B11C,KAAKuhH,KAAO7rE,EAAK,GACjB11C,KAAKwhH,KAAO9rE,EAAK,GACjB11C,KAAKyhH,KAAO/rE,EAAK,GACjB11C,KAAK0hH,KAAOhsE,EAAK,GAErB,GAAIsnE,EAAKK,gBAAiB,CACtB,MAAM2E,GAAO,SAAI,QAAQhF,EAAKK,kBAC9Br9G,KAAK2hH,KAAOK,EAAK,GACjBhiH,KAAK4hH,KAAOI,EAAK,GACjBhiH,KAAK6hH,KAAOG,EAAK,GACjBhiH,KAAK8hH,KAAOE,EAAK,GAErB,GAAIhF,EAAK/zG,IAAK,CAEV,MAAMg5G,EAAM,IAAIh1G,WAAWjN,KAAK8lD,UAChCm8D,EAAI98G,KAAI,QAAQ63G,EAAK/zG,MACrBjJ,KAAKo0D,OAAO6tD,IAIpBh9G,MACI,IAAI,IAAE87G,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,GAAQ9hH,KACzF,MAAO,CAAC+gH,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAGvF38G,IAAI47G,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC3E9hH,KAAK+gH,IAAY,EAANA,EACX/gH,KAAKghH,IAAY,EAANA,EACXhhH,KAAKihH,IAAY,EAANA,EACXjhH,KAAKkhH,IAAY,EAANA,EACXlhH,KAAKmhH,IAAY,EAANA,EACXnhH,KAAKohH,IAAY,EAANA,EACXphH,KAAKqhH,IAAY,EAANA,EACXrhH,KAAKshH,IAAY,EAANA,EACXthH,KAAKuhH,IAAY,EAANA,EACXvhH,KAAKwhH,IAAY,EAANA,EACXxhH,KAAKyhH,IAAY,EAANA,EACXzhH,KAAK0hH,IAAY,EAANA,EACX1hH,KAAK2hH,IAAY,EAANA,EACX3hH,KAAK4hH,IAAY,EAANA,EACX5hH,KAAK6hH,IAAY,EAANA,EACX7hH,KAAK8hH,IAAY,EAANA,EAEftE,SAASryG,EAAK1F,EAAQy8G,GAClBliH,KAAKiF,MAAMiW,SAAQ,CAAC9N,EAAGpM,IAAOw/G,EAAIx/G,GAAKoM,IACvCozG,EAAIr7G,IAAIo7G,EAAI,IACZ,IAAI,EAAErhH,EAAC,GAAQ,aAAYX,OAAOyB,KAAKU,SACvC8/G,EAAI,IAAMD,EAAG,GAAKvmG,EAClBwmG,EAAI,IAAMD,EAAG,GAAKrhH,EAEdgjH,IACA1B,EAAI,KAAOA,EAAI,IACfA,EAAI,KAAOA,EAAI,KAEnB,IAAI/yG,EAAI,EACR,MAAM5D,EAAI,IACV,IAAK,IAAI7I,EAAI,EAAGA,EAAI,GAAIA,IACpBy/G,EAAG,EAAG,EAAG,EAAG,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCozG,EAAG,EAAG,EAAG,EAAG,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCgzG,EAAG,EAAG,EAAG,EAAG,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCozG,EAAG,EAAG,EAAG,EAAG,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCgzG,EAAG,EAAG,EAAG,GAAI,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCozG,EAAG,EAAG,EAAG,GAAI,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCgzG,EAAG,EAAG,EAAG,GAAI,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCozG,EAAG,EAAG,EAAG,GAAI,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCgzG,EAAG,EAAG,EAAG,GAAI,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCozG,EAAG,EAAG,EAAG,GAAI,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCgzG,EAAG,EAAG,EAAG,GAAI,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCozG,EAAG,EAAG,EAAG,GAAI,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACrCgzG,EAAG,EAAG,EAAG,EAAG,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCozG,EAAG,EAAG,EAAG,EAAG,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCgzG,EAAG,EAAG,EAAG,EAAG,GAAIt1G,EAAK1F,EAAS,EAAIoE,EAAE4D,MACpCozG,EAAG,EAAG,EAAG,EAAG,GAAI11G,EAAK1F,EAAS,EAAIoE,EAAE4D,MAExCzN,KAAK+gH,KAAOP,EAAI,GAAKA,EAAI,IACzBxgH,KAAKghH,KAAOR,EAAI,GAAKA,EAAI,IACzBxgH,KAAKihH,KAAOT,EAAI,GAAKA,EAAI,IACzBxgH,KAAKkhH,KAAOV,EAAI,GAAKA,EAAI,IACzBxgH,KAAKmhH,KAAOX,EAAI,GAAKA,EAAI,IACzBxgH,KAAKohH,KAAOZ,EAAI,GAAKA,EAAI,IACzBxgH,KAAKqhH,KAAOb,EAAI,GAAKA,EAAI,IACzBxgH,KAAKshH,KAAOd,EAAI,GAAKA,EAAI,IACzBxgH,KAAKuhH,KAAOf,EAAI,GAAKA,EAAI,IACzBxgH,KAAKwhH,KAAOhB,EAAI,GAAKA,EAAI,IACzBxgH,KAAKyhH,KAAOjB,EAAI,IAAMA,EAAI,IAC1BxgH,KAAK0hH,KAAOlB,EAAI,IAAMA,EAAI,IAC1BxgH,KAAK2hH,KAAOnB,EAAI,IAAMA,EAAI,IAC1BxgH,KAAK4hH,KAAOpB,EAAI,IAAMA,EAAI,IAC1BxgH,KAAK6hH,KAAOrB,EAAI,IAAMA,EAAI,IAC1BxgH,KAAK8hH,KAAOtB,EAAI,IAAMA,EAAI,IAC1BA,EAAIvnF,KAAK,GAEbilF,UACIl+G,KAAK48G,WAAY,EACjB58G,KAAKs9G,SAASrkF,KAAK,GACnBj5B,KAAKmF,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAQvD,MAAMg9G,GAAU,SAAyBnF,GAAS,IAAI8D,EAAQ9D,mCCzL5C,iBAATpuG,MAAqB,WAAYA,MAAOA,KAAKC,oGCE7D,MAAOuzG,EAASC,EAAWC,GAAc,CAAC,GAAI,GAAI,IAC5ChkH,EAAMC,OAAO,GACbC,EAAMD,OAAO,GACbE,EAAMF,OAAO,GACbgkH,EAAMhkH,OAAO,GACbikH,EAAQjkH,OAAO,KACfkkH,EAASlkH,OAAO,KACtB,IAAK,IAAI+4D,EAAQ,EAAGltD,EAAI5L,EAAKe,EAAI,EAAGO,EAAI,EAAGw3D,EAAQ,GAAIA,IAAS,EAE3D/3D,EAAGO,GAAK,CAACA,GAAI,EAAIP,EAAI,EAAIO,GAAK,GAC/BsiH,EAAQ19G,KAAK,GAAK,EAAI5E,EAAIP,IAE1B8iH,EAAU39G,MAAQ4yD,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAEnD,IAAI19C,EAAItb,EACR,IAAK,IAAImP,EAAI,EAAGA,EAAI,EAAGA,IACnBrD,GAAMA,GAAK5L,GAAS4L,GAAKm4G,GAAOE,GAAWD,EACvCp4G,EAAI3L,IACJmb,GAAKpb,IAASA,GAAOD,OAAOkP,IAAMjP,GAE1C8jH,EAAW59G,KAAKkV,GAEpB,MAAO8oG,EAAaC,GAAe,WAAUL,GAAY,GAEnDM,EAAQ,CAAC1jH,EAAG8a,EAAGnQ,IAAMA,EAAI,GAAK,YAAW3K,EAAG8a,EAAGnQ,GAAK,YAAW3K,EAAG8a,EAAGnQ,GACrEg5G,EAAQ,CAAC3jH,EAAG8a,EAAGnQ,IAAMA,EAAI,GAAK,YAAW3K,EAAG8a,EAAGnQ,GAAK,YAAW3K,EAAG8a,EAAGnQ,GA+CpE,MAAMi5G,UAAe,KAExBjjH,YAAYimD,EAAUi9D,EAAQtG,EAAWuG,GAAY,EAAOC,EAAS,IAcjE,GAbAhyG,QACAjR,KAAK8lD,SAAWA,EAChB9lD,KAAK+iH,OAASA,EACd/iH,KAAKy8G,UAAYA,EACjBz8G,KAAKgjH,UAAYA,EACjBhjH,KAAKijH,OAASA,EACdjjH,KAAKo9G,IAAM,EACXp9G,KAAKkjH,OAAS,EACdljH,KAAK68G,UAAW,EAChB78G,KAAK48G,WAAY,EAEjB,YAAcH,GAEV,GAAKz8G,KAAK8lD,UAAY9lD,KAAK8lD,UAAY,IACvC,MAAM,IAAIhhD,MAAM,4CACpB9E,KAAKmjH,MAAQ,IAAIl2G,WAAW,KAC5BjN,KAAKojH,SAAU,QAAIpjH,KAAKmjH,OAE5BE,UAlEG,SAAiBx5G,EAAGo5G,EAAS,IAChC,MAAMzgH,EAAI,IAAIq7G,YAAY,IAE1B,IAAK,IAAIvmD,EAAQ,GAAK2rD,EAAQ3rD,EAAQ,GAAIA,IAAS,CAE/C,IAAK,IAAI/3D,EAAI,EAAGA,EAAI,GAAIA,IACpBiD,EAAEjD,GAAKsK,EAAEtK,GAAKsK,EAAEtK,EAAI,IAAMsK,EAAEtK,EAAI,IAAMsK,EAAEtK,EAAI,IAAMsK,EAAEtK,EAAI,IAC5D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC5B,MAAM+jH,GAAQ/jH,EAAI,GAAK,GACjBgkH,GAAQhkH,EAAI,GAAK,GACjBikH,EAAKhhH,EAAE+gH,GACPE,EAAKjhH,EAAE+gH,EAAO,GACdG,EAAKd,EAAMY,EAAIC,EAAI,GAAKjhH,EAAE8gH,GAC1BK,EAAKd,EAAMW,EAAIC,EAAI,GAAKjhH,EAAE8gH,EAAO,GACvC,IAAK,IAAIxjH,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzB+J,EAAEtK,EAAIO,IAAM4jH,EACZ75G,EAAEtK,EAAIO,EAAI,IAAM6jH,EAIxB,IAAIC,EAAO/5G,EAAE,GACTg6G,EAAOh6G,EAAE,GACb,IAAK,IAAI+P,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMkqG,EAAQzB,EAAUzoG,GAClB8pG,EAAKd,EAAMgB,EAAMC,EAAMC,GACvBH,EAAKd,EAAMe,EAAMC,EAAMC,GACvBC,EAAK3B,EAAQxoG,GACnBgqG,EAAO/5G,EAAEk6G,GACTF,EAAOh6G,EAAEk6G,EAAK,GACdl6G,EAAEk6G,GAAML,EACR75G,EAAEk6G,EAAK,GAAKJ,EAGhB,IAAK,IAAI7jH,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,IAAK,IAAIP,EAAI,EAAGA,EAAI,GAAIA,IACpBiD,EAAEjD,GAAKsK,EAAE/J,EAAIP,GACjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpBsK,EAAE/J,EAAIP,KAAOiD,GAAGjD,EAAI,GAAK,IAAMiD,GAAGjD,EAAI,GAAK,IAGnDsK,EAAE,IAAM64G,EAAYprD,GACpBztD,EAAE,IAAM84G,EAAYrrD,GAExB90D,EAAEy2B,KAAK,GAwBH+qF,CAAQhkH,KAAKojH,QAASpjH,KAAKijH,QAC3BjjH,KAAKkjH,OAAS,EACdljH,KAAKo9G,IAAM,EAEfhpD,OAAOxoD,GACH,YAAc5L,MACd,MAAM,SAAE8lD,EAAQ,MAAEq9D,GAAUnjH,KAEtB4I,GADNgD,GAAO,QAAQA,IACElL,OACjB,IAAK,IAAI08G,EAAM,EAAGA,EAAMx0G,GAAM,CAC1B,MAAM60G,EAAO33G,KAAKsf,IAAI0gC,EAAW9lD,KAAKo9G,IAAKx0G,EAAMw0G,GACjD,IAAK,IAAIp8G,EAAI,EAAGA,EAAIy8G,EAAMz8G,IACtBmiH,EAAMnjH,KAAKo9G,QAAUxxG,EAAKwxG,KAC1Bp9G,KAAKo9G,MAAQt3D,GACb9lD,KAAKqjH,SAEb,OAAOrjH,KAEXikH,SACI,GAAIjkH,KAAK68G,SACL,OACJ78G,KAAK68G,UAAW,EAChB,MAAM,MAAEsG,EAAK,OAAEJ,EAAM,IAAE3F,EAAG,SAAEt3D,GAAa9lD,KAEzCmjH,EAAM/F,IAAQ2F,EACU,IAAV,IAATA,IAAwB3F,IAAQt3D,EAAW,GAC5C9lD,KAAKqjH,SACTF,EAAMr9D,EAAW,IAAM,IACvB9lD,KAAKqjH,SAETa,UAAU7rG,GACN,YAAcrY,MAAM,GACpB,WAAaqY,GACbrY,KAAKikH,SACL,MAAME,EAAYnkH,KAAKmjH,OACjB,SAAEr9D,GAAa9lD,KACrB,IAAK,IAAIo9G,EAAM,EAAGx0G,EAAMyP,EAAI3X,OAAQ08G,EAAMx0G,GAAM,CACxC5I,KAAKkjH,QAAUp9D,GACf9lD,KAAKqjH,SACT,MAAM5F,EAAO33G,KAAKsf,IAAI0gC,EAAW9lD,KAAKkjH,OAAQt6G,EAAMw0G,GACpD/kG,EAAIlT,IAAIg/G,EAAUl9G,SAASjH,KAAKkjH,OAAQljH,KAAKkjH,OAASzF,GAAOL,GAC7Dp9G,KAAKkjH,QAAUzF,EACfL,GAAOK,EAEX,OAAOplG,EAEX+rG,QAAQ/rG,GAEJ,IAAKrY,KAAKgjH,UACN,MAAM,IAAIl+G,MAAM,yCACpB,OAAO9E,KAAKkkH,UAAU7rG,GAE1BgsG,IAAIv9G,GAEA,OADA,YAAcA,GACP9G,KAAKokH,QAAQ,IAAIn3G,WAAWnG,IAEvCk3G,WAAW3lG,GAEP,GADA,YAAcA,EAAKrY,MACfA,KAAK68G,SACL,MAAM,IAAI/3G,MAAM,+BAGpB,OAFA9E,KAAKkkH,UAAU7rG,GACfrY,KAAKk+G,UACE7lG,EAEXukE,SACI,OAAO58E,KAAKg+G,WAAW,IAAI/wG,WAAWjN,KAAKy8G,YAE/CyB,UACIl+G,KAAK48G,WAAY,EACjB58G,KAAKmjH,MAAMlqF,KAAK,GAEpBklF,WAAWl6F,GACP,MAAM,SAAE6hC,EAAQ,OAAEi9D,EAAM,UAAEtG,EAAS,OAAEwG,EAAM,UAAED,GAAchjH,KAY3D,OAXAikB,IAAOA,EAAK,IAAI6+F,EAAOh9D,EAAUi9D,EAAQtG,EAAWuG,EAAWC,IAC/Dh/F,EAAGm/F,QAAQj+G,IAAInF,KAAKojH,SACpBn/F,EAAGm5F,IAAMp9G,KAAKo9G,IACdn5F,EAAGi/F,OAASljH,KAAKkjH,OACjBj/F,EAAG44F,SAAW78G,KAAK68G,SACnB54F,EAAGg/F,OAASA,EAEZh/F,EAAG8+F,OAASA,EACZ9+F,EAAGw4F,UAAYA,EACfx4F,EAAG++F,UAAYA,EACf/+F,EAAG24F,UAAY58G,KAAK48G,UACb34F,GAGf,MAAMqgG,EAAM,CAACvB,EAAQj9D,EAAU22D,KAAc,SAAgB,IAAM,IAAIqG,EAAOh9D,EAAUi9D,EAAQtG,KAcnF8H,GAbWD,EAAI,EAAM,IAAK,IAKfA,EAAI,EAAM,IAAK,IACfA,EAAI,EAAM,IAAK,IACfA,EAAI,EAAM,GAAI,IACZA,EAAI,EAAM,IAAK,IAKfA,EAAI,EAAM,IAAK,KAE5BE,GADaF,EAAI,EAAM,IAAK,IACfA,EAAI,EAAM,GAAI,KAClCG,EAAW,CAAC1B,EAAQj9D,EAAU22D,KAAc,SAAwB,CAACO,EAAO,KAAO,IAAI8F,EAAOh9D,EAAUi9D,OAAuBv3G,IAAfwxG,EAAK1B,MAAsBmB,EAAYO,EAAK1B,OAAO,KACjJmJ,EAAS,GAAM,IAAK,IACpBA,EAAS,GAAM,IAAK,iGCvMrC,MACMtjG,EAAOpV,GAAQ,IAAI8xG,YAAY9xG,EAAIwxG,OAAQxxG,EAAI4xG,WAAY73G,KAAKg4G,MAAM/xG,EAAI2R,WAAa,IAQpG,GAHgF,KAA5D,IAAIzQ,WAAW,IAAI4wG,YAAY,CAAC,YAAaN,QAAQ,GAIrE,MAAM,IAAIz4G,MAAM,+CAyDb,SAAS4/G,EAAQ94G,GAGpB,GAFoB,iBAATA,IACPA,EARD,SAAqBK,GACxB,GAAmB,iBAARA,EACP,MAAM,IAAI7L,UAAU,2CAA2C6L,GAEnE,OAAO,IAAI04G,aAAchK,OAAO1uG,GAIrB24G,CAAYh5G,MACjBA,aAAgBqB,YAClB,MAAM,IAAI7M,UAAU,iDAAiDwL,MACzE,OAAOA,EA7DGnL,MAAM0M,KAAK,CAAEzM,OAAQ,MAAO,CAAC0M,EAAGpM,IAAMA,EAAEqM,SAAS,IAAIC,SAAS,EAAG,OAkFxE,MAAMg3B,EAETugF,QACI,OAAO7kH,KAAKm+G,cAWb,SAAS2G,EAAgBC,GAC5B,MAAMC,EAASnuG,GAAYkuG,IAAkB3wD,OAAOswD,EAAQ7tG,IAAU+lE,SAChEqlC,EAAM8C,IAIZ,OAHAC,EAAMvI,UAAYwF,EAAIxF,UACtBuI,EAAMl/D,SAAWm8D,EAAIn8D,SACrBk/D,EAAMxI,OAAS,IAAMuI,IACdC,EAEJ,SAASC,EAAwBC,GACpC,MAAMF,EAAQ,CAAC75G,EAAK6xG,IAASkI,EAASlI,GAAM5oD,OAAOswD,EAAQv5G,IAAMyxE,SAC3DqlC,EAAMiD,EAAS,IAIrB,OAHAF,EAAMvI,UAAYwF,EAAIxF,UACtBuI,EAAMl/D,SAAWm8D,EAAIn8D,SACrBk/D,EAAMxI,OAAUQ,GAASkI,EAASlI,GAC3BgI,kICxHJ,SAASG,EAAgBC,EAAW/J,GACzC,GAAyB,KAArB+J,EAAU1kH,OACZ,OAAO0kH,EAAUn+G,SAAS,GAK5B,IAFA,QAA4B,KAArBm+G,EAAU1kH,OAAe,+BAE3B,OAAc26G,IAAU,UAC3B,OAAO,QAAK+J,GAAWn+G,SAAS,GAGlC,MAAM,EACJ1H,EAAC,EACDO,GACE,aAAcslH,GAClB,OAAO,QAAU,OAAQ7lH,EAAG,OAAiB,OAAQO,EAAG,+GCCnD,SAASulH,EAAOC,EAAWzuG,GAChC,IAAKyuG,EACH,MAAM,IAAIxgH,OAAM,OAAW+R,GAAWA,IAAYA,GAQ/C,SAAS0uG,EAAa7yG,EAAOmE,GAElC,OADAwuG,IAAQ,OAAY3yG,MAAW,OAAOA,GAAQmE,GACvCnE,EAOF,SAAS8yG,EAAkBjmH,GAChC,MAAM,IAAIuF,MAAM,yDAAyDvF,oICjBpE,SAASkmH,EAAO/yG,GACrB,OAAOA,EAAQ,SAAQA,GAASA,GAAQ,QAAMA,IAAS,OAAQA,EAAMrF,aAAc,OAASqF,GAAS,IAAI,IAAJ,CAAOA,EAAMrF,aAAc,OAAOqF,GAASA,EAAMwB,QAAS,OAAWxB,GAAS,IAAI,IAAJ,CAAOA,EAAMuB,WAAW5G,YAAc,IAAI,IAAJ,CAAOqF,GAAS,IAAI,IAAJ,CAAO,kGCpBlP,MACMgzG,EAAe,CACnBryG,WAAY,EACZN,MAAM,EACNQ,YAAY,GAmBd,SAASoyG,EAAQjzG,EAAOsd,EAAO01F,EAAcz1F,GAAO,GAClD,OAAQvd,GAAmB,QAAS,OAAQA,GAAO,OACnD,CACEK,MAAM,EACNQ,YAAY,IACX,OAASyc,GAAQ,CAClB3c,UAAW2c,EACXjd,KAAMkd,GACJD,KA/BW,iFCFjB,MAAM01F,EAAe,CACnBryG,WAAY,EACZN,MAAM,EACNQ,YAAY,GAkBd,SAASqyG,EAAQlzG,EAAOsd,EAAO01F,EAAcz1F,GAAO,GAClD,MAAM,UACJ5c,GAAY,EAAE,KACdN,GAAO,EAAI,WACXQ,GAAa,IACX,OAASyc,GAAQ,CACnB3c,UAAW2c,EACXjd,KAAMkd,GACJD,EACE61F,GAAU,OAAOnzG,GACjBgL,GAA4B,IAAfrK,EAAmBvN,KAAK6V,KAAKkqG,EAAQxyG,YAAc,GAAKvN,KAAK6V,MAAMtI,GAAa,GAAK,GAExG,IAAKX,EACH,OAAsB,IAAfW,EAAmB,IAAIpG,WAAe,IAAIA,WAAWyQ,GAG9D,MAAM1C,EAAS,IAAI/N,WAAWyQ,GACxB/H,EAAKpC,EAAasyG,EAAQC,OAAoB,EAAbpoG,GAAkBmoG,EAEzD,OADA7qG,EAAO7V,IAAIwQ,EAAGhE,QAAQoB,EAAO,KAAO,KAAM2K,GAAa,GAChD1C,4EC3BF,SAAS+qG,EAAiB5jG,GAC/B,OAAO,OAAgB,EAAC,OAAaA,EAAMzhB,QAASyhB,0GCC/C,SAAS6jG,EAAe7jG,GAC7B,MAAMzK,GAAM,OAASyK,GAGrB,OAAiB,EAATzK,EAAI,IACV,KAAK,EACH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOA,EAAI,KAAO,IAE/B,KAAK,EACH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOA,EAAI,IAAMA,EAAI,IAAM,KAAO,IAE/C,KAAK,EAGH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAe,SAATA,EAAI,KAAmB,IAGrF,QACE,CAEE,MAAMjS,EAA0B,GAAhBiS,EAAI,KAAO,GAE3B,OAAQjS,GAEN,KAAK,EAGH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOiS,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAe,SAATA,EAAI,KAElE,KAAK,EACH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAiC,UAA1BA,EAAI,IAAMA,EAAI,IAAM,MAGnF,KAAK,EACH,MAAO,CAAC,EAAG,IAAI,IAAJ,CAAOA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAkD,UAA3CA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,OAGnG,QACE,MAAO,CAACjS,GAAQ,OAAQiS,EAAIzQ,SAAS,EAAGxB,QAU7C,SAASwgH,EAAkBvuG,GAGhC,OAAiB,EAATA,EAAI,IACV,KAAK,EACH,MAAO,CAAC,EAAGA,EAAI,KAAO,GAExB,KAAK,EACH,MAAO,CAAC,EAAGA,EAAI,IAAMA,EAAI,IAAM,KAAO,GAExC,KAAK,EAGH,MAAO,CAAC,EAAGA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAe,SAATA,EAAI,KAAmB,GAG9E,QAII,OAAyB,GAAhBA,EAAI,KAAO,IAElB,KAAK,EACH,MAAO,CAAC,EAAGA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAe,SAATA,EAAI,IAE3D,KAAK,EACH,MAAO,CAAC,EAAGA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAiC,UAA1BA,EAAI,IAAMA,EAAI,IAAM,KAG5E,KAAK,EACH,MAAO,CAAC,EAAGA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAkD,UAA3CA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAAM,MAG5F,QACE,MAAM,IAAI5S,MAAM,8GCrFrB,SAASohH,EAAmB/jG,GACjC,MAAO1c,EAAQ/E,IAAU,OAAeyhB,GAClChR,EAAQ1L,EAAS/E,EAAOqU,WAC9B,MAAO,CAAC5D,EAAOgR,EAAMlb,SAASxB,EAAQ0L,wHCfxC,MAAMg1G,EAAS,SAAW,IAAI,IAAJ,CAAO,IAAQC,KAAK,MACxCC,EAAU,SAAW,IAAI,IAAJ,CAAO,KAASD,KAAK,MAC1CE,EAAU,SAAW,IAAI,IAAJ,CAAO,KAASF,KAAK,MAC1CG,EAAQ,CACZlzG,UAAW,IAEPmzG,EAAQ,CACZnzG,UAAW,IAeN,SAASozG,EAAa/zG,GAC3B,MAAMiD,GAAK,OAAOjD,GAElB,GAAIiD,EAAGskB,IAAIksF,GACT,OAAO,IAAIl5G,WAAW,CAAC0I,EAAGZ,YAAc,IACnC,GAAIY,EAAGskB,IAAIosF,GAChB,OAAO,OAAQ1wG,EAAGkkB,KAAK,GAAG6sF,KAAK,MAASH,GACnC,GAAI5wG,EAAGskB,IAAIqsF,GAChB,OAAO,OAAQ3wG,EAAGkkB,KAAK,GAAG6sF,KAAK,MAASF,GAG1C,MAAM9uG,GAAM,OAAQ/B,GACpB,IAAIjV,EAASgX,EAAIhX,OAEjB,KAA2B,IAApBgX,EAAIhX,EAAS,IAClBA,IAGF,GAAIA,EAAS,EACX,MAAM,IAAIoE,MAAM,iEAGlB,OAAO,OAAgB,CACvB,IAAImI,WAAW,CAAqB,GAAnBvM,EAAS,GAAK,KAAagX,EAAIzQ,SAAS,EAAGvG,+GC1C9D,MACMimH,EAAe,EAAAC,GAAG,MAAQjoG,KAChC,IAAIkoG,EAFqB,EAGrBC,EAAcH,EAmDX,MAAMI,EA/Bb,SAAwB5kG,EAAOmG,GAAU,EAAM0+F,EAAcH,GAC3D,IAAIloG,GAAO,OAAOwD,GAAO9U,WAEzB,GAAoB,IAAhBsR,EAAKje,QAAyB,MAATie,EACvB,MAAO,IAIT,MAAM,SACJtK,EAAW2yG,EAAW,UACtBC,EAAqB,OACrB1yG,GAAS,EAAI,WACb2yG,GAAa,EAAK,SAClB1yG,GAAW,IACT,OAAU8T,GAAW,CACvB/T,OAAQ+T,GACNA,EAGJ,IAAIwL,EAAO,GAEPnV,EAAK,GAAGkM,WAAW,OACrBiJ,EAAO,IACPnV,EAAOA,EAAK+D,UAAU,IAGxB,MAAOykG,EAAIh9G,EAAQwzC,GAvCrB,SAAoBh/B,EAAMtK,EAAU4yG,GAIlC,MAAME,GAAK,QAAOxoG,EAAMtK,EAAU4yG,GAC5BG,EAAMzoG,EAAKje,QAAU2T,EAAW8yG,EAAGr5G,OAIzC,MAAO,CAACq5G,EAHOxoG,EAAK+D,UAAU,EAAG0kG,IAGX,IADN,GAAG,GAAG,IAAI3mH,MAAgB,GAD1B2mH,EAAM,EAAI,EAAIA,EAAM,IACSr1G,KAAK,OAAO4M,IAAO+D,UAAU0kG,EAAM,EAAI,EAAIA,SAAW1kG,UAAU,EAAG,IA+BlF2kG,CAAW1oG,EAAMtK,EAAU4yG,GACnDK,EA7CR,SAAkBH,EAAI5yG,EAAQ2yG,EAAY1yG,GACxC,MAAM+Y,GAAO,OAAU/Y,GAAY,EAAAoyG,GAAG,MAAQjoG,KAAOnK,EACrD,OAAOD,GAAU2yG,EAA0B,MAAbC,EAAGz0G,MAAgB8B,EAAW,IAAI+Y,IAAS,GAAK,IAAI25F,EAAa,GAAGC,EAAGxoG,OAAOnK,EAAW,IAAM,KAAO2yG,EAAGz0G,QAAQ8B,EAAW+Y,EAAO,KAAO,GA2C1Jg6F,CAASJ,EAAI5yG,EAAQ2yG,EAAY1yG,GAC/C,MAAO,GAAGsf,KAAO,OAAc3pB,MAAWwzC,IAAU2pE,KAKtDP,EAAcS,OAAS,CAAC7oG,EAAMtK,EAAWwyG,KAAoB,QAAOloG,EAAMtK,GAG1E0yG,EAAcU,OAAS,KAEvBV,EAAcW,YAAc,KACnB,CACLrzG,SAAUwyG,EACVt5F,KAAMu5F,IAMVC,EAAcY,WAAa,CAACtzG,EAAWwyG,IAC9B,EAAAD,GAAA,QAAU,EACf94G,MAAAA,OACIA,EAAQ,IAAIuG,EAAWvG,GAAS,IAKxCi5G,EAAca,YAAc,EAC1BvzG,SAAAA,EACAkZ,KAAAA,MAEAs5F,GAAkB,OAAYxyG,GAAYwyG,EAAkBpmH,MAAM0W,QAAQ9C,GAAYA,EAAS,GAAKA,EACpGyyG,GAAc,OAAYv5F,GAAQu5F,EAAcrmH,MAAM0W,QAAQoW,GAAQA,EAAK,GAAKA,EAChF,EAAAq5F,GAAG,MAAQjoG,KAAOmoG,iCCvFpB,SAASe,EAAQn1G,GACf,OAAOA,EAAMrF,WAAWC,SAAS,EAAG,KAQ/B,SAASw6G,EAAWC,GAOzB,MAAO,GANMA,EAAKC,cAAc36G,cAClBw6G,EAAQE,EAAKE,WAAa,MAC5BJ,EAAQE,EAAKG,cACZL,EAAQE,EAAKI,eACXN,EAAQE,EAAKK,iBACbP,EAAQE,EAAKM,gFChB9B,MAAMC,EAAe,IAAItkG,OAAO,gCAAiC,KAM1D,SAASukG,EAAc71G,GAG5B,MAAMa,EAAab,EAAM,GAAGmY,WAAW,KACjC29F,EAAUj1G,EAAab,EAAMgQ,UAAU,GAAG+lG,MAAMH,GAAgB51G,EAAM+1G,MAAMH,GAClF,OAAOE,EAAU,GAAGj1G,EAAa,IAAM,KAAKi1G,EAAQz2G,KAAK,OAASW,4ECL7D,SAASg2G,EAAah2G,GAC3B,OAAO,QAAc,OAAOA,GAAOrF,wFCN9B,MAAMs7G,EAAS,EAGT/B,EAAK,CAAC,CACjB94G,OAAQ,GACR6Q,KAAM,QACNjM,MAAO,KACN,CACD5E,OAAQ,GACR6Q,KAAM,QACNjM,MAAO,KACN,CACD5E,OAAQ,GACR6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,OAAQ,GACR6Q,KAAM,QACNjM,MAAO,KACN,CACD5E,OAAQ,GACR6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,OAAQ,EACR6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,OAAQ,EACR6Q,KAAM,QACNjM,MAAO,KACN,CACD5E,OAAQ,EACR6Q,KAAM,QACNjM,MAAO,KACN,CACD5E,MAAO,EACP6Q,KAAM,OACNjM,MAAO,KAET,CACE5E,MAAO,EACP6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,MAAO,EACP6Q,KAAM,OACNjM,MAAO,KAET,CACE5E,MAAO,EACP6Q,KAAM,OACNjM,MAAO,KAET,CACE5E,MAAO,GACP6Q,KAAM,OACNjM,MAAO,KAET,CACE5E,MAAO,GACP6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,MAAO,GACP6Q,KAAM,MACNjM,MAAO,KACN,CACD5E,MAAO,GACP6Q,KAAM,OACNjM,MAAO,KACN,CACD5E,MAAO,GACP6Q,KAAM,QACNjM,MAAO,MAKF,SAAS+0G,EAAO7yG,GAErB,IAAK,IAAI5T,EAAI,EAAGA,EAAI4lH,EAAGlmH,OAAQM,IAC7B,GAAI4lH,EAAG5lH,GAAG0R,QAAUkC,EAClB,OAAOgyG,EAAG5lH,GAId,OAAO4lH,EAAG+B,GAIL,SAASnB,EAAO7oG,EAAMtK,EAAU4yG,GACrC,GAAIA,EACF,OAAOQ,EAAOR,GAGhB,MAAM2B,EAAaD,EAAS,EAAI7iH,KAAK6V,MAAMgD,EAAKje,OAAS2T,GAAY,GACrE,OAAOuyG,EAAGgC,IAAehC,EAAGgC,EAAa,EAAI,EAAIhC,EAAGlmH,OAAS,kHChGxD,MAAMmoH,EAA8B,mBAAX,KAAkD,mBAAlB,WAGnDC,OAA8B,IAAXC,EAYnBC,EAAgC,iBAAZC,gECF1B,SAASC,EAAex2G,GAC7B,IAAKA,GAAmB,OAAVA,EACZ,MAAO,GACF,GAAI,UAAwBA,GACjC,OAAOA,EAAMgQ,UAAU,GAClB,GAAI,UAAwBhQ,GACjC,OAAOA,EAGT,MAAM,IAAI5N,MAAM,yCAAyC4N,oGCF3D,SAASy2G,EAAQz2G,EAAO4V,EAAU,IAChC,IAAK5V,GAAmB,OAAVA,EACZ,OAAO,IAAI,IAAJ,CAAO,GAIhB,MAAM,KACJK,GAAO,EAAK,WACZQ,GAAa,IACX,OAAU+U,GAAW,CACvBvV,KAAMuV,GACJA,EACE8gG,GAAW,OAAe12G,GAC1BiD,EAAK,IAAI,IAAJ,CAAOyzG,EAAU,GAAIr2G,EAAO,KAAO,MAG9C,OAAOQ,EAAaoC,EAAG0zG,SAA2B,EAAlBD,EAAS1oH,QAAciV,iECtCzD,MAAM2zG,EAAQ,mBACRC,EAAQ,IAAI9oH,MAAM,KAExB,IAAK,IAAIO,EAAI,EAAGA,EAAIsoH,EAAM5oH,OAAQM,IAChCuoH,EAAMD,EAAMtoH,GAAG+5G,WAAW,IAAM/5G,EAE5BA,EAAI,IACNuoH,EAAMD,EAAMtoH,GAAG26G,cAAcZ,WAAW,IAAM/5G,GAoB3C,SAASwoH,EAAS92G,EAAOW,GAAY,GAC1C,IAAKX,EACH,OAAO,IAAIzF,WAGb,MAAMhB,GAAM,OAAeyG,GACrB0X,EAAYne,EAAIvL,OAAS,EACzB+oH,EAAY3jH,KAAK6V,MAAoB,IAAftI,EAAmB+W,EAAY/W,EAAY,GACjExF,EAAS,IAAIZ,WAAWw8G,GAG9B,IAAK,IAAIzoH,EAFMyoH,EAAYr/F,EAAYq/F,EAAYr/F,EAAY,EAE1CvgB,EAAI,EAAG7I,EAAIyoH,EAAWzoH,IAAK6I,GAAK,EAKnDgE,EAAO7M,IAAMuoH,EAAMt9G,EAAI8uG,WAAWlxG,KAAO,GAAK0/G,EAAMt9G,EAAI8uG,WAAWlxG,EAAI,IAAM,EAG/E,OAAOgE,uFCLF,SAAS2Q,EAAQ9L,GACtB,OAAO,OAASA,MAAW,QAAMA,GAtCnC,SAAoBzG,GAClB,MAAMkO,EAAQlO,EAAIvL,OAElB,IAAK,IAAIM,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMjC,EAAIkN,EAAI8uG,WAAW/5G,GAEzB,KAAMjC,EAAI,MAAQA,GAAK,IAAY,KAANA,GAAkB,IAANA,GAAiB,KAANA,IAClD,OAAO,EAIX,OAAO,EA2BmC2qH,CAAWh3G,KAASA,GAtBhE,SAAoBgF,GAClB,MAAMyC,EAAQzC,EAAIhX,OAElB,IAAK,IAAIM,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMjC,EAAI2Y,EAAI1W,GAEd,KAAMjC,EAAI,MAAQA,GAAK,IAAY,KAANA,GAAkB,IAANA,GAAiB,KAANA,IAClD,OAAO,EAIX,OAAO,EAW+D4qH,EAAW,OAASj3G,mCC5BrF,SAASk3G,EAASl3G,GACvB,MAAwB,iBAAVA,yFCCT,SAASm3G,EAAKn3G,GACnB,OAAO,SAAQA,kCCHV,SAASo3G,EAAUp3G,GACxB,MAAwB,kBAAVA,8GCCT,SAASq3G,EAASr3G,GAEvB,OAAO,OAAa,OAAWA,GAASA,EAAMs3G,eAAiBjB,EAAOgB,SAASr3G,iEClBjF,MAAMu3G,GAAa,OAAW,QAAS,SACjCC,GAAgB,OAAW,OAC1B,SAASrlG,EAAQnS,GACtB,OAAOu3G,EAAWv3G,IAAUw3G,EAAcx3G,EAAM1B,yCCY3C,SAASm5G,EAAWz3G,GACzB,MAAwB,mBAAVA,kGCfT,SAAS03G,KAAQC,GACtB,OAAO33G,KAAU,OAASA,KAAU,OAAWA,KAAW23G,EAAIhzG,OAAMjS,IAAK,OAAWsN,EAAMtN,MAErF,SAASklH,KAAcD,GAC5B,OAAO33G,IAAS,OAASA,IAAU23G,EAAIhzG,OAAMjS,IAAK,OAAWsN,EAAMtN,yECN9D,MAAMmlH,EAAqB,kBACrBC,EAAqB,gBAiB3B,SAASC,EAAM/3G,EAAOW,GAAY,EAAIq3G,GAC3C,MAAwB,iBAAVh4G,IAAiC,OAAVA,GAAkB63G,EAAmB98F,KAAK/a,OAA2B,IAAfW,EAAmBq3G,GAAgBh4G,EAAMhS,OAAS,GAAM,EAAIgS,EAAMhS,SAAW,EAAIoF,KAAK6V,KAAKtI,EAAY,mCCJ7L,SAAS2E,EAAOtF,GACrB,OAAiB,OAAVA,iDCDF,SAASi4G,EAASj4G,GACvB,MAAwB,iBAAVA,gDCAT,SAASk4G,EAASl4G,GACvB,QAASA,GAA0B,iBAAVA,iDCFpB,SAASm4G,EAASn4G,GACvB,MAAwB,iBAAVA,GAAsBA,aAAiB2N,uECfhD,MAAMyqG,GAAa,aAAK,2DCAxB,MAAMC,GAAS,aAAK,sCCcpB,SAASC,EAAMt4G,GAGpB,OAAQA,GAASA,EAAM7S,eAAiBoN,YAAcyF,aAAiBzF,0DCFlE,SAASg+G,EAAYv4G,GAC1B,YAAwB,IAAVA,4FCPT,SAAS+L,EAAO/L,GACrB,IAAKA,EACH,OAAO,OAASA,GAGlB,MAAMgF,GAAM,OAAShF,GACf9J,EAAM8O,EAAIhX,OAChB,IAAIM,EAAI,EAER,KAAOA,EAAI4H,GACT,GAAI8O,EAAI1W,IAAM,IAGVA,GAAK,OACA,GAAI0W,EAAI1W,IAAM,KAAQ0W,EAAI1W,IAAM,IAEvC,CACE,KAAIA,EAAI,EAAI4H,GAWV,OAAO,EARL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAe,MAAX0W,EAAI1W,GAEf,CACE,KAAIA,EAAI,EAAI4H,GAiBV,OAAO,EAdL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAI0W,EAAI1W,IAAM,KAAQ0W,EAAI1W,IAAM,IAEvC,CACE,KAAIA,EAAI,EAAI4H,GAiBV,OAAO,EAdL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAe,MAAX0W,EAAI1W,GAEf,CACE,KAAIA,EAAI,EAAI4H,GAiBV,OAAO,EAdL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAI0W,EAAI1W,IAAM,KAAQ0W,EAAI1W,IAAM,IAEvC,CACE,KAAIA,EAAI,EAAI4H,GAiBV,OAAO,EAdL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAe,MAAX0W,EAAI1W,GAEf,CACE,KAAIA,EAAI,EAAI4H,GAuBV,OAAO,EApBL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,OACA,GAAI0W,EAAI1W,IAAM,KAAQ0W,EAAI1W,IAAM,IAEvC,CACE,KAAIA,EAAI,EAAI4H,GAuBV,OAAO,EApBL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,MACA,IAAe,MAAX0W,EAAI1W,GAiCf,OAAO,EA9BL,KAAIA,EAAI,EAAI4H,GAuBV,OAAO,EApBL,GAAI8O,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAGT,GAAI0W,EAAI1W,EAAI,GAAK,KAAQ0W,EAAI1W,EAAI,GAAK,IAGpC,OAAO,EAQbA,GAAK,EAQX,OAAO,yECpOF,SAASkqH,EAAWr9G,EAAQkqG,EAAMpsF,EAASD,GAChD,MAAM1f,EAAO0f,EAAUA,EAAQqsF,GAAQA,EAAK1qG,WAC5C,IAAIqF,EACJ0D,OAAO44F,eAAenhG,EAAQ7B,EAAM,CAIlCm/G,cAAc,EACdC,YAAY,EAGZnmH,IAAK,WAIH,IAAI,OAAYyN,GAAQ,CACtBA,EAAQiZ,EAAQosF,GAEhB,IAGE3hG,OAAO44F,eAAehvG,KAAMgM,EAAM,CAChC0G,MAAAA,IAEF,QAOJ,OAAOA,KAUN,SAAS24G,EAAYx9G,EAAQuyD,EAAOz0C,EAASD,GAClD,IAAK,IAAI1qB,EAAI,EAAGA,EAAIo/D,EAAM1/D,OAAQM,IAChCkqH,EAAWr9G,EAAQuyD,EAAMp/D,GAAI2qB,EAASD,GAGxC,OAAO7d,kKC5CT,MAAMy9G,EAAQ,CACZC,MAAO,MACPvhH,MAAO,QACPwhH,IAAK,MACL58F,KAAM,QAiBD,SAAS68F,EAAa/4G,GAC3B,OAAIjS,MAAM0W,QAAQzE,GACTA,EAAMvR,IAAIsqH,IACR,OAAK/4G,GACPA,EAAMrF,YACJ,OAAMqF,KAAU,OAASA,IAC3B,QAAS,OAASA,IApB7B,SAAqBA,GACnB,GAAIA,IAAS,OAASA,IAAUA,EAAM7S,cAAgBuW,OAAQ,CAC5D,MAAMvI,EAAS,GAEf,IAAK,MAAMS,KAAK8H,OAAOE,KAAK5D,GAC1B7E,EAAOS,GAAKm9G,EAAa/4G,EAAMpE,IAGjC,OAAOT,EAGT,OAAO6E,EAYAg5G,CAAYh5G,GAcrB,SAASi5G,EAAMH,EAAK52G,EAAMuB,EAAQy1G,GAAU,GAC1C,GAAsB,IAAlBz1G,EAAOzV,SAAgB,OAAWyV,EAAO,IAAK,CAChD,MAAM01G,EAAW11G,EAAO,KACxB,OAAOw1G,EAAMH,EAAK52G,EAAMnU,MAAM0W,QAAQ00G,GAAYA,EAAW,CAACA,GAAWD,GAd7E,IAA0BE,EAiBxBC,QAAQT,EAAME,KAAM,OAAW,IAAIQ,MAASp3G,KAASuB,EAAOhV,IAAIsqH,GAActqH,KAjBtD2qH,EAiB2EF,EAhB5Fx+G,IACL,GAAI0+G,GAAa,EACf,OAAO1+G,EAGT,MAAMlK,EAAI,GAAGkK,IACb,OAAOlK,EAAExC,OAASorH,EAAY1+G,EAAI,GAAGlK,EAAEwf,UAAU,EAAGopG,aAaxD,SAASG,KAGT,SAASC,EAAUjsG,EAAGrL,GACpB,QAASqL,IAAY,MAANA,GAAarL,IAASqL,GAAKA,EAAEksG,SAAS,MAAQv3G,EAAKiW,WAAW5K,EAAEhV,MAAM,GAAI,KAG3F,SAASmhH,EAAWnsG,EAAGrL,GACrB,QAASqL,GAAKA,EAAE4K,WAAW,OAASjW,IAASqL,EAAEhV,MAAM,IAAMgV,EAAEksG,SAAS,MAAQv3G,EAAKiW,WAAW5K,EAAEhV,MAAM,GAAI,KAG5G,SAASohH,EAAaC,EAAK13G,GACzB,IAAI23G,GAAO,EAEX,IAAK,MAAMtsG,KAAKqsG,EACVJ,EAAUjsG,EAAGrL,GACf23G,GAAO,EACEH,EAAWnsG,EAAGrL,KACvB23G,GAAO,GAIX,OAAOA,EAwBF,SAASC,EAAOthG,GACrB,MAAMtW,EAAO,GAAGsW,EAAMywF,iBAAiBruG,SAAS,KACzCm/G,EAASb,GAvBlB,SAAkBh3G,GAChB,MAAM03G,GAAO,KAAarD,EAAU,IAAIqD,KAAO,GACzCV,EAAUlgH,SAAS4gH,EAAII,WAAa,KAAM,IAChD,MAAO,CAACL,GAAcC,EAAIK,OAAS,IAAIj2G,cAAcoF,MAAM,KAAMlH,GAAOhH,MAAMg+G,IAAY,EAAIA,GAoBnEgB,CAAS1hG,EAAMxU,eAC1C,MAAO,CACL60G,MAAOkB,EAAU,IAAIt2G,IAAWw1G,EAAM,QAAS/2G,EAAMuB,EAAQy1G,GAAWK,EACxEjiH,MAAO,IAAImM,IAAWw1G,EAAM,QAAS/2G,EAAMuB,GAC3Cq1G,IAAK,IAAIr1G,IAAWw1G,EAAM,MAAO/2G,EAAMuB,GACvC81G,KAAAA,EACAr9F,KAAM,IAAIzY,IAAWw1G,EAAM,OAAQ/2G,EAAMuB,mCC/GtC,SAAS02G,EAAeC,EAAM7jH,EAAKmqB,GAOlCnqB,KAAO6jH,GACX12G,OAAO44F,eAAe8d,EAAM7jH,EAAK,CAC/BmiH,YAAY,EAGZnmH,IAAK,IAAMmuB,EAAOnqB,KASjB,SAAS8jH,EAAiBD,EAAMx2G,EAAM8c,GAC3C,IAAK,IAAIpyB,EAAI,EAAGA,EAAIsV,EAAK5V,OAAQM,IAC/B6rH,EAAeC,EAAMx2G,EAAKtV,IAAIsN,GAAK8kB,EAAO9kB,EAAGtN,2DCvB1C,SAASgsH,EAAalpG,KAASmpG,GACpC,IAAK,IAAIjsH,EAAI,EAAGA,EAAIisH,EAAQvsH,OAAQM,IAAK,CACvC,MAAM6iB,EAAMopG,EAAQjsH,GAEhB6iB,GACFzN,OAAO4J,OAAO8D,EAAMD,GAIxB,OAAOC,4ECdF,MAAMopG,EAAW,IAAIzsH,MAAM,KACrB0sH,EAAW,IAAI1sH,MAAM,KAElC,IAAK,IAAIO,EAAI,EAAGA,EAAIksH,EAASxsH,OAAQM,IACnCmsH,EAASnsH,GAAKqf,OAAO+sG,aAAapsH,GAAG0V,cACrCw2G,EAASlsH,GAAKqf,OAAO+sG,aAAapsH,GAAG26G,cAKvC,SAAS0R,EAAcC,GACrB,OAAOA,EAAEriH,MAAM,EAAGqiH,EAAE5sH,OAAS,GAAGgW,cAAgBw2G,EAASI,EAAEvS,WAAWuS,EAAE5sH,OAAS,IAkBnF,SAAS6sH,EAAUC,GACjB,OAAO96G,IACL,MAAM2R,EAAQ3R,EACbyQ,QAAQ,YAAa,KACrBQ,OACA7H,MAAM,KACD3B,EAAQkK,EAAM3jB,OACpB,IAAImN,EAAS,GAEb,IAAK,IAAI7M,EAAI,EAAGA,EAAImZ,EAAOnZ,IAAK,CAC9B,MAAMssH,EAAIjpG,EAAMrjB,GAEhB6M,GAAU2/G,EAAO,aAAa//F,KAAK6/F,GACjCA,EAAE52G,cAEF42G,EAAEnqG,QAAQ,qBAAsBkqG,GAAgBrsH,GAGpD,OAAO6M,GASJ,MAAM4/G,EAAkBF,GAAU,CAACD,EAAGtsH,KAC5CA,EAAIksH,EAASI,EAAEvS,WAAW,IAAMoS,EAASG,EAAEvS,WAAW,KAAOuS,EAAEriH,MAAM,KAMzDyiH,EAAmBH,GAAUD,GAC1CJ,EAASI,EAAEvS,WAAW,IAAMuS,EAAEriH,MAAM,oDC/DpC,MAAM0iH,EAAU,aAAI,GAgBb,SAASC,EAAYl7G,GAC1B,OAAOA,EAAQi7G,EAAQhT,OAAOjoG,EAAMrF,YAAc,IAAIJ,0ECfxD,SAASoW,EAASvL,EAAG1K,GACnB,OAAO,OAASA,GAAKA,EAAEC,WAAaD,EAS/B,SAAS2c,EAAUrX,EAAOm7G,GAC/B,OAAOnxG,KAAKqN,UAAUrX,EAAO2Q,EAAUwqG,0ECKlC,SAASC,KAAapZ,GAC3B,MAAMqZ,EAAO,IAAIttH,MAAMi0G,EAAKh0G,QAC5B,IAAIA,EAAS,EAEb,IAAK,IAAIM,EAAI,EAAGA,EAAI0zG,EAAKh0G,OAAQM,IAC/B+sH,EAAK/sH,IAAK,OAAS0zG,EAAK1zG,IACxBN,GAAUqtH,EAAK/sH,GAAGN,OAGpB,OAAOstH,EAAgBD,EAAMrtH,GAOxB,SAASstH,EAAgBD,EAAMrtH,EAAS,GAC7C,IAAI+E,EAAS,EAEb,IAAK/E,EACH,IAAK,IAAIM,EAAI,EAAGA,EAAI+sH,EAAKrtH,OAAQM,IAC/BN,GAAUqtH,EAAK/sH,GAAGN,OAItB,MAAMmN,EAAS,IAAIZ,WAAWvM,GAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAI+sH,EAAKrtH,OAAQM,IAC/B6M,EAAO1I,IAAI4oH,EAAK/sH,GAAIyE,GACpBA,GAAUsoH,EAAK/sH,GAAGN,OAGpB,OAAOmN,iECnCF,SAASogH,EAAMnvH,EAAGC,GACvB,MAAMmvH,GAAO,OAASpvH,GAChBqvH,GAAO,OAASpvH,GAEtB,GAAImvH,EAAKxtH,SAAWytH,EAAKztH,OAAQ,CAC/B,MAAM0tH,EAAM,IAAIC,SAASH,EAAK3Q,OAAQ2Q,EAAKvQ,YACrC2Q,EAAM,IAAID,SAASF,EAAK5Q,OAAQ4Q,EAAKxQ,YACrCl+G,EAAMyuH,EAAKxtH,OAAS,EACpBA,EAASwtH,EAAKxtH,OAASjB,EAE7B,IAAK,IAAIuB,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/B,GAAIotH,EAAIG,UAAUvtH,KAAOstH,EAAIC,UAAUvtH,GACrC,OAAO,EAIX,IAAK,IAAIA,EAAIN,EAAQM,EAAIktH,EAAKxtH,OAAQM,IACpC,GAAIktH,EAAKltH,KAAOmtH,EAAKntH,GACnB,OAAO,EAIX,OAAO,EAGT,OAAO,qFCnBT,SAASwtH,EAAQ97G,EAAO4V,EAAU,IAGhC,MAAM,KACJvV,GAAO,EAAI,WACXQ,GAAa,IACX,OAAU+U,GAAW,CACvBvV,KAAMuV,GACJA,EACEnO,EAAQzH,EAAMhS,OAGpB,GAAIyZ,GAAS,EAAG,CACd,GAAI5G,EAAY,CACd,IAAI1F,EAAS,EAEb,GAAIkF,EAIF,OAAQoH,GACN,KAAK,EACH,OAAO,IAAI,IAAJ,CAAO,GAEhB,KAAK,EACHtM,EAAoB,IAAX6E,EAAM,GACf,MAEF,KAAK,EACH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,GAAK,MACtC,MAEF,KAAK,EACH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAM,SACzD,MAEF,KAAK,EAGH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,WAChF,MAEF,KAAK,EACH7E,GAAU6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,YAAkC,YAAR,IAAXA,EAAM,IACtG,MAEF,QAEE7E,GAAU6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,YAA0D,YAA3CA,EAAM,IAAMA,EAAM,IAAM,GAAK,YAIjI,IAAK,IAAI1R,EAAI,EAAGA,EAAImZ,EAAOnZ,IACzB6M,EAAkB,IAATA,GAA6B,IAAX6E,EAAM1R,IAIrC,OAAOmZ,EAAQ,IAAI,IAAJ,EAAiB,EAAVtM,EAAc,GAAK,IAAI,IAAJ,CAAO,GAC3C,IAAIkF,EA+BJ,CACL,IAAIlF,EAAS,EAEb,IAAK,IAAI7M,EAAI,EAAGA,EAAImZ,EAAOnZ,IACzB6M,EAAkB,IAATA,EAAiB6E,EAAM1R,GAGlC,OAAO,IAAI,IAAJ,CAAO6M,GAhCd,OAAQsM,GACN,KAAK,EACH,OAAO,IAAI,IAAJ,CAAO,GAEhB,KAAK,EACH,OAAO,IAAI,IAAJ,CAAOzH,EAAM,IAEtB,KAAK,EACH,OAAO,IAAI,IAAJ,CAAOA,EAAM,IAAMA,EAAM,IAAM,IAExC,KAAK,EACH,OAAO,IAAI,IAAJ,CAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,KAE1D,KAAK,EAGH,OAAO,IAAI,IAAJ,CAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,IAEtE,KAAK,EACH,OAAO,IAAI,IAAJ,CAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAqC,UAA9BA,EAAM,IAAMA,EAAM,IAAM,KAEzF,QAEE,OAAO,IAAI,IAAJ,CAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAwD,UAAjDA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,OAajH,OAAOa,EAAa,IAAI,IAAJ,CAAOb,EAAOK,EAAO,KAAO,MAAMs2G,SAAwB,EAAf32G,EAAMhS,QAAc,IAAI,IAAJ,CAAOgS,EAAOK,EAAO,KAAO,sDC1HjH,MAAM07G,EAAK,IAAIhuH,MAAM,KACfiuH,EAAM,IAAIjuH,MAAM,OAEtB,IAAK,IAAIxB,EAAI,EAAGA,EAAI,IAAKA,IACvBwvH,EAAGxvH,GAAKA,EAAEoO,SAAS,IAAIC,SAAS,EAAG,KAGrC,IAAK,IAAItM,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAM6I,EAAI7I,GAAK,EAEf,IAAK,IAAIyM,EAAI,EAAGA,EAAI,IAAKA,IACvBihH,EAAI7kH,EAAI4D,GAAKghH,EAAGztH,GAAKytH,EAAGhhH,GAM5B,SAAS/E,EAAIgK,GACX,MAAMjT,EAAMiT,EAAMhS,OAAS,EACrBA,EAASgS,EAAMhS,OAASjB,EACxBkvH,EAAK,IAAIN,SAAS37G,EAAM6qG,OAAQ7qG,EAAMirG,YAC5C,IAAI9vG,EAAS,GAEb,IAAK,IAAI7M,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAG/B6M,GAAU6gH,EAAIC,EAAGC,UAAU5tH,IAO7B,OAJIvB,IACFoO,GAAU4gH,EAAGE,EAAGE,SAASnuH,KAGpBmN,EAkBF,SAASihH,EAASp8G,EAAOW,GAAY,EAAI07G,GAAa,GAC3D,MAAMruH,EAASoF,KAAK6V,KAAKtI,EAAY,GACrC,MAAO,GAAG07G,EAAa,KAAO,KAAMr8G,GAAUA,EAAMhS,OAAc2S,EAAY,GAAKX,EAAMhS,OAASA,EAAS,GAAGgI,EAAIgK,EAAMzL,SAAS,EAAGvG,EAAS,OAAOgI,EAAIgK,EAAMzL,SAASyL,EAAMhS,OAASA,EAAS,MAAQgI,EAAIgK,GAA9I,oCChDxD,SAASs8G,EAAYt8G,GAAO,WACjCa,GAAa,GACX,IACF,MAAM4G,EAAQzH,EAAMhS,OAEpB,GAAI6S,EAAY,CACd,IAAI1F,EAAS,EAEb,OAAQsM,GACN,KAAK,EACH,OAAO,EAET,KAAK,EACHtM,EAAoB,IAAX6E,EAAM,GACf,MAEF,KAAK,EACH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,GAAK,MACtC,MAEF,KAAK,EACH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAM,SACzD,MAEF,KAAK,EAGH7E,EAAS6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,WAChF,MAEF,KAAK,EACH7E,GAAU6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,YAAkC,YAAR,IAAXA,EAAM,IACtG,MAEF,KAAK,EACH7E,GAAU6E,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAAiB,YAA0D,YAA3CA,EAAM,IAAMA,EAAM,IAAM,GAAK,OAC7H,MAEF,QACE,MAAM,IAAI5N,MAAM,wDAGpB,OAAiB,EAAV+I,EAAc,EAGvB,OAAQsM,GACN,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAOzH,EAAM,GAEf,KAAK,EACH,OAAOA,EAAM,IAAMA,EAAM,IAAM,GAEjC,KAAK,EACH,OAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAEnD,KAAK,EAGH,OAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAiB,SAAXA,EAAM,GAE/D,KAAK,EACH,OAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAqC,UAA9BA,EAAM,IAAMA,EAAM,IAAM,IAElF,KAAK,EACH,OAAOA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAwD,UAAjDA,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,KAEpG,QACE,MAAM,IAAI5N,MAAM,yHC1EtB,MAAMmqH,EAAU,aAAI,GAAY,SAgBzB,SAASC,EAAYx8G,GAC1B,OAAOA,EAAQu8G,EAAQ1zF,OAAO7oB,GAAS,8GCGlC,SAASy8G,EAASz8G,GACvB,OAAO,OAAMA,GAASA,GAAQ,QAAMA,IAAS,OAASA,IAAS,OAASA,IAAUjS,MAAM0W,QAAQzE,GAAS,IAAIzF,WAAWyF,IAAS,OAAYA,wFCJxI,MAAM08G,EACX,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GAEAvvH,YAAYwvH,GACVrvH,MAAK,GAAcqvH,EACnBrvH,MAAK,EAAiB,KACtBA,MAAK,GAAiB,KACtBA,MAAK,GAAQ,IAAIS,MAAM,IAAIw4B,UAAKztB,GAAW2G,YAAO3G,EAAW,MAAM,GAAM,GACzExL,MAAK,GAAYA,MAAK,GAAMU,OAC5BV,MAAK,EAAQ,OACbA,MAAK,GAAQ,KACbA,MAAK,GAAa,KAClBA,MAAK,GAAe,KACpBA,MAAK,GAAO,IAAK,IAAI,IAAIA,OAMvBgK,YACF,OAAOhK,MAAK,GAKV4U,WACF,OAAO5U,MAAK,EAKVqhD,WACF,OAAOrhD,MAAK,GAKdsvH,WAAWD,GACJrvH,MAAK,KAAgBqvH,IACxBrvH,MAAK,IAAgBqvH,GAAcrvH,MAAK,IAAaA,MAAK,KAG5D,MAAM,MACJgK,EAAK,KACL4K,EAAI,KACJysC,SACQrhD,MAAK,GAIf,OAHAA,MAAK,EAAQ4U,EACb5U,MAAK,GAAQqhD,EACbrhD,MAAK,GAAagK,EACXhK,MAAK,GAQduvH,UAAUC,GACR,OAAOxvH,MAAK,GAAMwvH,GAQpBC,WAAWD,GACLA,EAAM,KAIVxvH,MAAK,GAAMwvH,GAAOxvH,MAAK,GACvBA,MAAK,GAAYwvH,GAQnBE,WAAWF,GACT,MAAMG,EAAM3vH,KAAKuvH,UAAUC,GAE3B,OADAxvH,KAAKyvH,WAAWD,GACTG,EAQTC,UAAUz/F,GACJnwB,MAAK,KAAcA,MAAK,GAAMU,QAChCV,MAAK,GAAM0E,KAAK1E,MAAK,GAAMU,OAAS,GAGtC,MAAM8uH,EAAMxvH,MAAK,GAGjB,OAFAA,MAAK,GAAYA,MAAK,GAAMwvH,GAC5BxvH,MAAK,GAAMwvH,GAAOr/F,EACXq/F,EAQTK,WAKE,OAJ4B,OAAxB7vH,MAAK,GAA2BA,MAAK,EAAeu9G,SAAWv9G,MAAK,GAAM8vH,OAAOvS,SACnFv9G,MAAK,EAAiB,IAAI+vH,WAAW/vH,MAAK,GAAM8vH,OAAOvS,SAGlDv9G,MAAK,EAQd6uH,WAKE,OAJ4B,OAAxB7uH,MAAK,IAA2BA,MAAK,GAAeu9G,SAAWv9G,MAAK,GAAM8vH,OAAOvS,SACnFv9G,MAAK,GAAiB,IAAIiN,WAAWjN,MAAK,GAAM8vH,OAAOvS,SAGlDv9G,MAAK,GAQdgwH,OAAOC,EAAKrnH,GACV,OAAO5I,KAAK6uH,WAAW5nH,SAASgpH,EAAM,EAAGA,EAAM,EAAIrnH,GAQrDsnH,UAAUD,EAAKrnH,GACb,OAAO,OAAY5I,KAAKgwH,OAAOC,EAAKrnH,IAQtCunH,SAASvrG,GACP,MAAMqrG,EAAMjwH,MAAK,GAAMowH,kBAA+B,EAAbxrG,EAAIlkB,QAG7C,OADAV,KAAK6uH,WAAW1pH,IAAIyf,EAAKqrG,EAAM,GACxB,CAACA,EAAKrrG,EAAIlkB,QAQnB2vH,YAAYzrG,GACV,OAAO5kB,KAAKmwH,UAAS,OAAYvrG,IAQnC0rG,YACE,MAAMC,EAAKvwH,KAAK6vH,WAAW,GACrBW,EAAKxwH,KAAK6vH,WAAW,GACrBF,EAAM3vH,KAAKgwH,OAAOO,EAAIC,GAAIvlH,QAIhC,OAFAjL,MAAK,GAAMywH,gBAAgBF,EAAS,EAALC,GAExBb,EAQTe,eACE,OAAO,OAAY1wH,KAAKswH,6CC/MrB,SAASK,EAAatmF,EAAMumF,EAAWC,GAC5C,OAAOvB,MAAAA,IACL,MAAMzhH,EAAS,CACb7D,MAAO,KACP4K,KAAM,OACNysC,KAAM,MAGR,IACE,IAAKuvE,IAAcA,EAAUlwH,OAC3B,MAAM,IAAIoE,MAAM,8CACX,GAA2B,iBAAhBgsH,aAA+D,mBAA5BA,YAAYx8E,YAC/D,MAAM,IAAIxvC,MAAM,oDAGlB,MAAM+3C,QAAei0E,YAAYx8E,YAAYs8E,EAAW,CACtDG,IAAAA,IAEFljH,EAAOwzC,KAAOxE,EAAO/+B,SAASkzG,QAC9BnjH,EAAO+G,KAAO,OACd,MAAO5K,GAEc,mBAAV6mH,GACThjH,EAAOwzC,KAAOwvE,EAAME,GACpBljH,EAAO+G,KAAO,QAEd/G,EAAO7D,MAAQ,8CAA8CqgC,OAAUrgC,EAAM6M,UAC7Ek1G,QAAQ/hH,MAAM6D,EAAO7D,QAIzB,OAAO6D,mECvCX,MAAMojH,EAAiB,CACrBC,yBAAe,GAEXC,EAAe,CACnBtiH,OAAQoiH,GAcH,MAAMG,EACX,IAEAvxH,YAAYwxH,GACVrxH,MAAK,GAAUqxH,EAKjBC,MAAQ,KACN,MAAM,IAAIxsH,MAAM,UAIlBysH,wBAA0B/B,QACehkH,IAAhCxL,MAAK,GAAQuvH,UAAUC,GAIhCgC,iBAAmB,CAACvB,EAAKrnH,KACvB,MAAM,IAAI9D,MAAM9E,MAAK,GAAQkwH,UAAUD,EAAKrnH,KAI9C6oH,4BAA8B,IACrBzxH,MAAK,GAAQ4vH,UAAUuB,GAIhCO,+BAAiC,CAACzB,EAAKrnH,KACrC,MAAM,IAAI9D,MAAM,qBAAqB9E,MAAK,GAAQkwH,UAAUD,EAAKrnH,OAKnE+oH,8BAAgCC,GACvB5xH,MAAK,GAAQ4vH,UAAUqB,GAKhCY,uCAAyCD,GAChC5xH,MAAK,GAAQ4vH,UAAUqB,EAAeC,iBAK/CY,uCAAyC,CAACC,EAAO9B,EAAKrnH,KACpDqoH,EAAeC,gBAAgBlxH,MAAK,GAAQgwH,OAAOC,EAAKrnH,KAK1DopH,sCAAwC,CAACJ,EAAMK,EAAMC,KACnD,MAAM,IAAIptH,MAAM,oCAIlBqtH,2BAA6B3C,IAC3BxvH,MAAK,GAAQ0vH,WAAWF,6ECrErB,MAAMH,GAAa,OAAa,SAAU,IAAW,uFCIrD,MAAMuB,GAAY,QAAW,OAAa,EAAA9pH,MAAO,IAAImG,WAAW,EAAAmlH,QAAS,IAAInlH,WAAW,EAAAolH,oBCN/F3+B,EAAOs9B,QAAU,CAAElqH,MAFL,+z9NAEYsrH,MAJZ,OAImBC,OAHlB,qDCJf,MAAMC,EAAM,mEACNnxH,EAAM,GAEZ,IAAK,IAAIH,EAAI,EAAGA,EAAIsxH,EAAI5xH,OAAQM,IAC9BG,EAAImxH,EAAItxH,IAAMA,EAcT,SAASuxH,EAAa3mH,EAAMyM,GACjC,IAAI1K,EAAO,EACP6kH,EAAO,EACPpV,GAAO,EAEX,IAAK,IAAIp8G,EAAI,EAAGA,EAAI4K,EAAKlL,QAAsB,MAAZkL,EAAK5K,GAAYA,IAElD2M,EAAOA,GAAQ,EAAIxM,EAAIyK,EAAK5K,KAEvBwxH,GAAQ,IAAM,IACjBn6G,IAAM+kG,GAAOzvG,KAAU6kH,GAAQ,GAAK,KAIxC,OAAOn6G,iDCfT,MAAMgJ,EAAKpU,WACLgU,EAAMwxG,YACNtxG,EAAM08F,YAEN6U,EAAO,IAAIrxG,EAAG,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAE7EsxG,EAAO,IAAItxG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAEzG,EAAG,EAEH,IAGMuxG,EAAO,IAAIvxG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAEnH,EAAG,IAEGwxG,EAAO,CAACC,EAAIngH,KAChB,MAAM5T,EAAI,IAAIkiB,EAAI,IAElB,IAAK,IAAIjgB,EAAI,EAAGA,EAAI,KAAMA,EACxBjC,EAAEiC,GAAK2R,GAAS,GAAKmgH,EAAG9xH,EAAI,GAI9B,MAAMkC,EAAI,IAAIie,EAAIpiB,EAAE,KAEpB,IAAK,IAAIiC,EAAI,EAAGA,EAAI,KAAMA,EACxB,IAAK,IAAIyM,EAAI1O,EAAEiC,GAAIyM,EAAI1O,EAAEiC,EAAI,KAAMyM,EACjCvK,EAAEuK,GAAKA,EAAI1O,EAAEiC,IAAM,EAAIA,EAI3B,MAAO,CAACjC,EAAGmE,KAGN6vH,EAAIC,GAASH,EAAKF,EAAM,GAE/BI,EAAG,IAAM,IAAKC,EAAM,KAAO,GAC3B,MAAOC,GAAMJ,EAAKD,EAAM,GAElBM,EAAM,IAAIjyG,EAAI,OAEpB,IAAK,IAAIjgB,EAAI,EAAGA,EAAI,QAASA,EAAG,CAE9B,IAAIzB,GAAS,MAAJyB,KAAgB,GAAS,MAAJA,IAAe,EAC7CzB,GAAS,MAAJA,KAAgB,GAAS,MAAJA,IAAe,EACzCA,GAAS,MAAJA,KAAgB,GAAS,KAAJA,IAAe,EACzC2zH,EAAIlyH,KAAW,MAAJzB,KAAgB,GAAS,IAAJA,IAAe,KAAO,EAMxD,MAAM4zH,EAAO,CAACC,EAAIC,EAAInwH,KACpB,MAAM2G,EAAIupH,EAAG1yH,OAEb,IAAIM,EAAI,EAER,MAAMgZ,EAAI,IAAIiH,EAAIoyG,GAElB,KAAOryH,EAAI6I,IAAK7I,IAAKgZ,EAAEo5G,EAAGpyH,GAAK,GAG/B,MAAMu9G,EAAK,IAAIt9F,EAAIoyG,GAEnB,IAAKryH,EAAI,EAAGA,EAAIqyH,IAAMryH,EACpBu9G,EAAGv9G,GAAKu9G,EAAGv9G,EAAI,GAAKgZ,EAAEhZ,EAAI,IAAM,EAGlC,IAAIsyH,EAEJ,GAAIpwH,EAAG,CAELowH,EAAK,IAAIryG,EAAI,GAAKoyG,GAElB,MAAME,EAAM,GAAKF,EAEjB,IAAKryH,EAAI,EAAGA,EAAI6I,IAAK7I,EAEnB,GAAIoyH,EAAGpyH,GAAI,CAET,MAAMwyH,EAAKxyH,GAAK,EAAIoyH,EAAGpyH,GAEjBkC,EAAImwH,EAAKD,EAAGpyH,GAElB,IAAIoM,EAAImxG,EAAG6U,EAAGpyH,GAAK,MAAQkC,EAE3B,IAAK,MAAMiL,EAAIf,GAAK,GAAKlK,GAAK,EAAGkK,GAAKe,IAAKf,EAEzCkmH,EAAGJ,EAAI9lH,KAAOmmH,GAAOC,QAO3B,IAFAF,EAAK,IAAIryG,EAAIpX,GAER7I,EAAI,EAAGA,EAAI6I,IAAK7I,EAAGsyH,EAAGtyH,GAAKkyH,EAAI3U,EAAG6U,EAAGpyH,GAAK,QAAU,GAAKoyH,EAAGpyH,GAGnE,OAAOsyH,GAIHG,EAAM,IAAIpyG,EAAG,KAEnB,IAAK,IAAIrgB,EAAI,EAAGA,EAAI,MAAOA,EAAGyyH,EAAIzyH,GAAK,EAEvC,IAAK,IAAIA,EAAI,IAAKA,EAAI,MAAOA,EAAGyyH,EAAIzyH,GAAK,EAEzC,IAAK,IAAIA,EAAI,IAAKA,EAAI,MAAOA,EAAGyyH,EAAIzyH,GAAK,EAEzC,IAAK,IAAIA,EAAI,IAAKA,EAAI,MAAOA,EAAGyyH,EAAIzyH,GAAK,EAGzC,MAAM0yH,EAAM,IAAIryG,EAAG,IAEnB,IAAK,IAAIrgB,EAAI,EAAGA,EAAI,KAAMA,EAAG0yH,EAAI1yH,GAAK,EAGtC,MAAM2yH,EAAOR,EAAKM,EAAK,EAAG,GAEpBG,EAAOT,EAAKO,EAAK,EAAG,GAEpBlB,EAAO,CAAC3uH,EAAG3D,EAAGiO,KAClB,MAAM0X,EAAI3lB,IAAM,EAChB,OAAQ2D,EAAEgiB,GAAKhiB,EAAEgiB,EAAI,IAAM,MAAY,EAAJ3lB,GAASiO,GAIxC0lH,EAAS,CAAChwH,EAAG3D,KACjB,MAAM2lB,EAAI3lB,IAAM,EAChB,OAAQ2D,EAAEgiB,GAAKhiB,EAAEgiB,EAAI,IAAM,EAAIhiB,EAAEgiB,EAAI,IAAM,OAAa,EAAJ3lB,IAkBhDqqB,EAAMzrB,IACV,IAAIqP,EAAIrP,EAAE,GAEV,IAAK,IAAIkC,EAAI,EAAGA,EAAIlC,EAAE4B,SAAUM,EAC1BlC,EAAEkC,GAAKmN,IAAGA,EAAIrP,EAAEkC,IAGtB,OAAOmN,GAmMF,SAAS2lH,EAAWloH,EAAMyM,GAC/B,MAhMY,EAAC07G,EAAKC,EAAKC,KACvB,MAAMC,GAAQD,GAAMA,EAAGjzH,EAClBizH,IAAIA,EAAK,IAEd,MAAME,EAAKJ,EAAIrzH,OAET0zH,GAASJ,IAAQE,EAElBF,IAAKA,EAAM,IAAI3yG,EAAQ,EAAL8yG,IAEvB,MAAME,EAAOr6G,IACX,IAAIs6G,EAAKN,EAAItzH,OAEb,GAAIsZ,EAAIs6G,EAAI,CAEV,MAAMC,EAAO,IAAIlzG,EAAGvb,KAAKykB,IAAI+pG,GAAM,EAAGt6G,IACtCu6G,EAAKpvH,IAAI6uH,GACTA,EAAMO,IAKV,IAAIC,EAAQP,EAAG7uH,GAAK,EAChBg4G,EAAM6W,EAAG/zH,GAAK,EACdu0H,EAAKR,EAAGl1H,GAAK,EACb21H,EAAKT,EAAGj6G,EACRg9F,EAAKid,EAAGpwH,EACR8wH,EAAMV,EAAG9lH,EACTymH,EAAMX,EAAGh1H,EACb,GAAIu1H,IAAUE,EAAI,OAAOV,EAEzB,MAAMa,EAAOV,GAAM,EAEnB,EAAG,CACD,IAAKO,EAAI,CAEPT,EAAG7uH,EAAIovH,EAAQhC,EAAKuB,EAAK3W,EAAK,GAE9B,MAAMxoG,EAAO49G,EAAKuB,EAAK3W,EAAM,EAAG,GAGhC,GAFAA,GAAO,GAEFxoG,EAAM,CAET,MAAM/K,IApED3J,EAoEUk9G,KApEE,IAAU,EAAJl9G,GAAS,GAoEV,EAChB8Z,EAAI+5G,EAAIlqH,EAAI,GAAKkqH,EAAIlqH,EAAI,IAAM,EAC/B+P,EAAI/P,EAAImQ,EAEd,GAAIJ,EAAIu6G,EAAI,CACV,GAAID,EAAM,KAAM,iBAChB,MAIEE,GAAOC,EAAKI,EAAKz6G,GAErBg6G,EAAI7uH,IAAI4uH,EAAI9sH,SAAS4C,EAAG+P,GAAI66G,GAE5BR,EAAGl1H,EAAI01H,GAAMz6G,EAAGi6G,EAAG/zH,EAAIk9G,EAAMxjG,GAAK,EAClC,SACK,GAAY,GAARhF,EAAW8/G,EAAKf,EAAM3c,EAAK4c,EAAMe,EAAM,EAAGC,EAAM,MAAO,IAAY,GAARhgH,EAoD/D,KAAM,qBApDoE,CAE/E,MAAMkgH,EAAOtC,EAAKuB,EAAK3W,EAAK,IAAM,IAC5B2X,EAAQvC,EAAKuB,EAAK3W,EAAM,GAAI,IAAM,EAClC4X,EAAKF,EAAOtC,EAAKuB,EAAK3W,EAAM,EAAG,IAAM,EAC3CA,GAAO,GAEP,MAAM6X,EAAM,IAAI5zG,EAAG2zG,GAEbE,EAAM,IAAI7zG,EAAG,IAEnB,IAAK,IAAIrgB,EAAI,EAAGA,EAAI+zH,IAAS/zH,EAE3Bk0H,EAAIxC,EAAK1xH,IAAMwxH,EAAKuB,EAAK3W,EAAU,EAAJp8G,EAAO,GAGxCo8G,GAAe,EAAR2X,EAEP,MAAMI,EAAM5qG,EAAI2qG,GACVE,GAAU,GAAKD,GAAO,EAC5B,IAAKjB,GAAQ9W,EAAM4X,GAAMG,EAAM,GAAKN,EAAM,MAE1C,MAAMQ,EAAMlC,EAAK+B,EAAKC,EAAK,GAE3B,IAAK,IAAIn0H,EAAI,EAAGA,EAAIg0H,GAAK,CACvB,MAAM9xH,EAAImyH,EAAI7C,EAAKuB,EAAK3W,EAAKgY,IAE7BhY,GAAW,GAAJl6G,EAEP,MAAM2G,EAAI3G,IAAM,EAEhB,GAAI2G,EAAI,GACNorH,EAAIj0H,KAAO6I,MACN,CAEL,IAAIwhB,EAAI,EACJpsB,EAAI,EAGR,IAFS,IAAL4K,GAAS5K,EAAI,EAAIuzH,EAAKuB,EAAK3W,EAAK,GAAIA,GAAO,EAAG/xF,EAAI4pG,EAAIj0H,EAAI,IAAiB,IAAL6I,GAAS5K,EAAI,EAAIuzH,EAAKuB,EAAK3W,EAAK,GAAIA,GAAO,GAAgB,IAALvzG,IAAS5K,EAAI,GAAKuzH,EAAKuB,EAAK3W,EAAK,KAAMA,GAAO,GAEvKn+G,KAAKg2H,EAAIj0H,KAAOqqB,GAK3B,MAAM6O,EAAK+6F,EAAIhuH,SAAS,EAAG6tH,GACrBQ,EAAKL,EAAIhuH,SAAS6tH,GAExBH,EAAMpqG,EAAI2P,GAEV06F,EAAMrqG,EAAI+qG,GACVZ,EAAKvB,EAAKj5F,EAAIy6F,EAAK,GACnB3d,EAAKmc,EAAKmC,EAAIV,EAAK,IAGrB,GAAIxX,EAAMyX,EAAM,KAAM,iBAKpBT,GAAOC,EAAKI,EAAK,QACrB,MAAMc,GAAO,GAAKZ,GAAO,EACnBa,GAAO,GAAKZ,GAAO,EACnBa,EAAMd,EAAMC,EAAM,GAExB,KAAOV,GAAQ9W,EAAMqY,EAAMZ,GAAM,CAE/B,MAAMxpG,EAAIqpG,EAAGb,EAAOE,EAAK3W,GAAOmY,GAC1BG,EAAMrqG,IAAM,EAElB,GADA+xF,GAAW,GAAJ/xF,EACH+xF,EAAMyX,EAAM,KAAM,iBACtB,IAAKxpG,EAAG,KAAM,yBACd,GAAIqqG,EAAM,IAAK1B,EAAIS,KAAQiB,MAAS,IAAW,KAAPA,EAAY,CAClDhB,OAAKlpH,EACL,MACK,CACL,IAAIxI,EAAM0yH,EAAM,IAEhB,GAAIA,EAAM,IAAK,CAEb,MAAM10H,EAAI00H,EAAM,IACV32H,EAAI4zH,EAAK3xH,GACfgC,EAAMwvH,EAAKuB,EAAK3W,GAAM,GAAKr+G,GAAK,GAAKg0H,EAAG/xH,GACxCo8G,GAAOr+G,EAIT,MAAM8E,EAAImzG,EAAG6c,EAAOE,EAAK3W,GAAOoY,GAC1BG,EAAO9xH,IAAM,EACnB,IAAKA,EAAG,KAAM,mBACdu5G,GAAW,GAAJv5G,EACP,IAAIyxH,EAAKrC,EAAG0C,GAEZ,GAAIA,EAAO,EAAG,CACZ,MAAM52H,EAAI6zH,EAAK+C,GACfL,GAAMzB,EAAOE,EAAK3W,IAAQ,GAAKr+G,GAAK,EAAGq+G,GAAOr+G,EAGhD,GAAIq+G,EAAMyX,EAAM,KAAM,iBAClBT,GAAOC,EAAKI,EAAK,QACrB,MAAM7hH,EAAM6hH,EAAKzxH,EAEjB,KAAOyxH,EAAK7hH,EAAK6hH,GAAM,EACrBT,EAAIS,GAAMT,EAAIS,EAAKa,GACnBtB,EAAIS,EAAK,GAAKT,EAAIS,EAAK,EAAIa,GAC3BtB,EAAIS,EAAK,GAAKT,EAAIS,EAAK,EAAIa,GAC3BtB,EAAIS,EAAK,GAAKT,EAAIS,EAAK,EAAIa,GAG7Bb,EAAK7hH,IAITqhH,EAAGj6G,EAAI06G,EAAIT,EAAG/zH,EAAIk9G,EAAK6W,EAAGl1H,EAAI01H,EAC1BC,IAAIF,EAAQ,EAAGP,EAAG9lH,EAAIwmH,EAAKV,EAAGpwH,EAAImzG,EAAIid,EAAGh1H,EAAI21H,UACzCJ,GAtMCt0H,IAAAA,EAwMX,OAAOu0H,GAAMT,EAAItzH,OAASszH,EApMhB,EAAC5mH,EAAGvD,EAAGoW,MACR,MAALpW,GAAaA,EAAI,KAAGA,EAAI,IACnB,MAALoW,GAAaA,EAAI7S,EAAE1M,UAAQuf,EAAI7S,EAAE1M,QAErC,MAAMzB,EAAI,IAAKmO,aAAa6T,EAAMA,EAAM7T,aAAa+T,EAAMA,EAAME,GAAIpB,EAAIpW,GAEzE,OADA5K,EAAEkG,IAAIiI,EAAEnG,SAAS4C,EAAGoW,IACbhhB,GA8LyB22H,CAAI5B,EAAK,EAAGS,IAiBrCoB,EAbGhyH,CAAAA,IACV,GAAmB,IAAP,GAAPA,EAAE,KAAiBA,EAAE,KAAO,EAAI,IAAMA,EAAE,IAAM,EAAIA,EAAE,IAAM,GAAI,KAAM,oBACzE,GAAW,GAAPA,EAAE,GAAS,KAAM,wDAWPiyH,CAAIlqH,GAAOA,EAAK3E,SAAS,GAAI,IAAKoR,kEChX3C,MAAM9Z,EAAmC,mBAAnB,aAAkE,mBAA1B,mBAAuC,YAAiB,IAAMoH,OAAOowH,4DCInI,MAAMC,EAAgC,oBAAfC,WAA6BA,gBAA+B,IAAX,EAAAC,EAAyB,EAAAA,EAAyB,oBAATtnH,KAAuBA,KAAyB,oBAAXnK,OAAyBA,OAAsB0xH,SAHhM,eAIL,SAASC,EAAcpqH,EAAM2zD,GAKlC,YAAgC,IAAlBq2D,EAAQhqH,GAAwB2zD,EAAWq2D,EAAQhqH,kECV5D,SAASklH,EAAgBnlH,GAI9B,OAAO,4BAA+BA,6ECHjC,MAAMsqH,GAAc,OAAc,cAAe,oDCFjD,MAAMA,EAEXx2H,YAAYiY,IAGZyjB,OAAO7oB,GACL,IAAI7E,EAAS,GAEb,IAAK,IAAI7M,EAAI,EAAGA,EAAI0R,EAAMhS,OAAQM,IAChC6M,GAAUwS,OAAO+sG,aAAa16G,EAAM1R,IAGtC,OAAO6M,6ECVJ,MAAM82G,GAAc,OAAc,cAAe,oDCFjD,MAAMA,EACXhK,OAAOjoG,GACL,MAAMgF,EAAM,IAAIzK,WAAWyF,EAAMhS,QAEjC,IAAK,IAAIM,EAAI,EAAGA,EAAI0R,EAAMhS,OAAQM,IAChC0W,EAAI1W,GAAK0R,EAAMqoG,WAAW/5G,GAG5B,OAAO0W,mDCIX,SACC,CACC,OAAU,EACV,QAAW,WACX,YAAe,uBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,EACV,QAAW,cACX,YAAe,wDACf,QAAW,GACX,SAAY,GACZ,gBAAmB,UACnB,QAAW,MAEZ,CACC,OAAU,EACV,QAAW,SACX,YAAe,qBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,EACV,QAAW,cACX,YAAe,kCACf,QAAW,GACX,SAAY,GACZ,gBAAmB,UACnB,QAAW,MAEZ,CACC,OAAU,EACV,QAAW,aACX,YAAe,cACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,MAEZ,CACC,OAAU,EACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,EACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,EACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,qBAEZ,CACC,OAAU,EACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,EACV,QAAW,WACX,YAAe,0BACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,QACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,SAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,6BAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,aACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,QACf,QAAW,CACV,SAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,+BAEZ,CACC,OAAU,GACV,QAAW,cACX,YAAe,cACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,gCAEZ,CACC,OAAU,GACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,eACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,OACA,QAED,SAAY,CACX,EACA,GAED,gBAAmB,SACnB,QAAW,6BAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,QACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,GACV,QAAW,mBACX,YAAe,eACf,QAAW,CACV,OAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,WACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,OACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,GACV,QAAW,kBACX,YAAe,kBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,YACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,MACA,OAED,SAAY,CACX,GACA,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,aACf,QAAW,CACV,OAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,cACX,YAAe,cACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,gBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,iCAEZ,CACC,OAAU,GACV,QAAW,MACX,YAAe,0BACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,mBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,cACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,qBAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,iBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,oBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,oBACX,YAAe,oBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,gBACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,uBAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,YACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,gBACX,YAAe,2CACf,QAAW,GACX,SAAY,GACZ,gBAAmB,YACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,OAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,uBAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,kBACf,QAAW,CACV,OACA,QAED,SAAY,CACX,GACA,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,2BACf,QAAW,GACX,SAAY,GACZ,gBAAmB,KACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,2BACf,QAAW,GACX,SAAY,GACZ,gBAAmB,KACnB,QAAW,MAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sCAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,aACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,MACX,YAAe,cACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,OACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,OACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,aACf,QAAW,CACV,MAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,iBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,kBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,GACV,QAAW,UACX,YAAe,cACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,OACA,MACA,QAED,SAAY,CACX,EACA,EACA,GAED,gBAAmB,SACnB,QAAW,mCAEZ,CACC,OAAU,GACV,QAAW,cACX,YAAe,sBACf,QAAW,CACV,MAED,SAAY,CACX,GAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,GACV,QAAW,YACX,YAAe,YACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,GACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,SAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,iCACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,oBACX,YAAe,qBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,GACV,QAAW,WACX,YAAe,mBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,GACV,QAAW,aACX,YAAe,4BACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,GACV,QAAW,eACX,YAAe,uBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,IACV,QAAW,wBACX,YAAe,wBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,qCAEZ,CACC,OAAU,IACV,QAAW,iBACX,YAAe,iBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,IACV,QAAW,QACX,YAAe,QACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,IACV,QAAW,uBACX,YAAe,uBACf,QAAW,GACX,SAAY,GACZ,gBAAmB,SACnB,QAAW,8BAEZ,CACC,OAAU,IACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,2BAEZ,CACC,OAAU,IACV,QAAW,SACX,YAAe,iBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,IACV,QAAW,SACX,YAAe,iBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,IACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,IACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,IACV,QAAW,iBACX,YAAe,iBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,IACV,QAAW,iBACX,YAAe,mBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,IACV,QAAW,kBACX,YAAe,iCACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,uBAEZ,CACC,OAAU,IACV,QAAW,mBACX,YAAe,wBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,IACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mBAEZ,CACC,OAAU,KACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,UACnB,QAAW,uBAEZ,CACC,OAAU,KACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,UACnB,QAAW,6BAEZ,CACC,OAAU,KACV,QAAW,OACX,YAAe,eACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,UACnB,QAAW,6BAEZ,CACC,OAAU,KACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,YACnB,QAAW,4BAEZ,CACC,OAAU,KACV,QAAW,YACX,YAAe,YACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,YACnB,QAAW,4BAEZ,CACC,OAAU,KACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,KACV,QAAW,QACX,YAAe,gBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,oBAEZ,CACC,OAAU,KACV,QAAW,QACX,YAAe,QACf,QAAW,CACV,SAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,+BAEZ,CACC,OAAU,KACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,KACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,wBAEZ,CACC,OAAU,KACV,QAAW,mBACX,YAAe,mBACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,KACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,4BAEZ,CACC,OAAU,KACV,QAAW,SACX,YAAe,SACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,KACV,QAAW,iBACX,YAAe,iBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,KACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,SAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,0BAEZ,CACC,OAAU,MACV,QAAW,WACX,YAAe,WACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,kBAEZ,CACC,OAAU,MACV,QAAW,eACX,YAAe,eACf,QAAW,CACV,SAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,MACV,QAAW,OACX,YAAe,OACf,QAAW,CACV,QAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,sBAEZ,CACC,OAAU,MACV,QAAW,cACX,YAAe,uBACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,uBAEZ,CACC,OAAU,MACV,QAAW,cACX,YAAe,cACf,QAAW,CACV,MACA,OAED,SAAY,CACX,GACA,IAED,gBAAmB,SACnB,QAAW,yBAEZ,CACC,OAAU,MACV,QAAW,UACX,YAAe,UACf,QAAW,CACV,OAED,SAAY,CACX,IAED,gBAAmB,SACnB,QAAW,mDCzzCbs5G,EAAQtzG,WAuCR,SAAqB44G,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClD1F,EAAQ2F,YAiDR,SAAsBL,GACpB,IAAIrU,EAcAjhH,EAbAu1H,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBxqH,EAAM,IAAI6qH,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGVluH,EAAM8tH,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKz1H,EAAI,EAAGA,EAAI4H,EAAK5H,GAAK,EACxBihH,EACG8U,EAAUT,EAAIvb,WAAW/5G,KAAO,GAChC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,KAAO,GACpC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,KAAO,EACrC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,IAC/B+K,EAAI+qH,KAAc7U,GAAO,GAAM,IAC/Bl2G,EAAI+qH,KAAc7U,GAAO,EAAK,IAC9Bl2G,EAAI+qH,KAAmB,IAAN7U,EAmBnB,OAhBwB,IAApByU,IACFzU,EACG8U,EAAUT,EAAIvb,WAAW/5G,KAAO,EAChC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,KAAO,EACvC+K,EAAI+qH,KAAmB,IAAN7U,GAGK,IAApByU,IACFzU,EACG8U,EAAUT,EAAIvb,WAAW/5G,KAAO,GAChC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,KAAO,EACpC+1H,EAAUT,EAAIvb,WAAW/5G,EAAI,KAAO,EACvC+K,EAAI+qH,KAAc7U,GAAO,EAAK,IAC9Bl2G,EAAI+qH,KAAmB,IAAN7U,GAGZl2G,GA3FTilH,EAAQgG,cAkHR,SAAwBC,GAQtB,IAPA,IAAIhV,EACAr5G,EAAMquH,EAAMv2H,OACZw2H,EAAatuH,EAAM,EACnByb,EAAQ,GACR8yG,EAAiB,MAGZn2H,EAAI,EAAGo2H,EAAOxuH,EAAMsuH,EAAYl2H,EAAIo2H,EAAMp2H,GAAKm2H,EACtD9yG,EAAM3f,KAAK2yH,EAAYJ,EAAOj2H,EAAIA,EAAIm2H,EAAkBC,EAAOA,EAAQp2H,EAAIm2H,IAqB7E,OAjBmB,IAAfD,GACFjV,EAAMgV,EAAMruH,EAAM,GAClByb,EAAM3f,KACJyiB,EAAO86F,GAAO,GACd96F,EAAQ86F,GAAO,EAAK,IACpB,OAEsB,IAAfiV,IACTjV,GAAOgV,EAAMruH,EAAM,IAAM,GAAKquH,EAAMruH,EAAM,GAC1Cyb,EAAM3f,KACJyiB,EAAO86F,GAAO,IACd96F,EAAQ86F,GAAO,EAAK,IACpB96F,EAAQ86F,GAAO,EAAK,IACpB,MAIG59F,EAAMtS,KAAK,KAzIpB,IALA,IAAIoV,EAAS,GACT4vG,EAAY,GACZH,EAA4B,oBAAf3pH,WAA6BA,WAAaxM,MAEvD6vC,EAAO,mEACFtvC,EAAI,EAAG4H,EAAM0nC,EAAK5vC,OAAQM,EAAI4H,IAAO5H,EAC5CmmB,EAAOnmB,GAAKsvC,EAAKtvC,GACjB+1H,EAAUzmF,EAAKyqE,WAAW/5G,IAAMA,EAQlC,SAASw1H,EAASF,GAChB,IAAI1tH,EAAM0tH,EAAI51H,OAEd,GAAIkI,EAAM,EAAI,EACZ,MAAM,IAAI9D,MAAM,kDAKlB,IAAI2xH,EAAWH,EAAI1/G,QAAQ,KAO3B,OANkB,IAAd6/G,IAAiBA,EAAW7tH,GAMzB,CAAC6tH,EAJcA,IAAa7tH,EAC/B,EACA,EAAK6tH,EAAW,GAsEtB,SAASY,EAAaJ,EAAOtkH,EAAOC,GAGlC,IAFA,IAAIqvG,EARoBlhH,EASpBia,EAAS,GACJha,EAAI2R,EAAO3R,EAAI4R,EAAK5R,GAAK,EAChCihH,GACIgV,EAAMj2H,IAAM,GAAM,WAClBi2H,EAAMj2H,EAAI,IAAM,EAAK,QACP,IAAfi2H,EAAMj2H,EAAI,IACbga,EAAOtW,KAdFyiB,GADiBpmB,EAeMkhH,IAdT,GAAK,IACxB96F,EAAOpmB,GAAO,GAAK,IACnBomB,EAAOpmB,GAAO,EAAI,IAClBomB,EAAa,GAANpmB,IAaT,OAAOia,EAAOjJ,KAAK,IAjGrBglH,EAAU,IAAIhc,WAAW,IAAM,GAC/Bgc,EAAU,IAAIhc,WAAW,IAAM,kBClB/BiW,EAAQ3yC,KAAO,SAAUk/B,EAAQ93G,EAAQ6xH,EAAMC,EAAMC,GACnD,IAAIv3G,EAAG9R,EACHspH,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT52H,EAAIs2H,EAAQE,EAAS,EAAK,EAC1B3zH,EAAIyzH,GAAQ,EAAI,EAChBztH,EAAI0zG,EAAO93G,EAASzE,GAOxB,IALAA,GAAK6C,EAELoc,EAAIpW,GAAM,IAAO+tH,GAAU,EAC3B/tH,KAAQ+tH,EACRA,GAASH,EACFG,EAAQ,EAAG33G,EAAS,IAAJA,EAAWs9F,EAAO93G,EAASzE,GAAIA,GAAK6C,EAAG+zH,GAAS,GAKvE,IAHAzpH,EAAI8R,GAAM,IAAO23G,GAAU,EAC3B33G,KAAQ23G,EACRA,GAASL,EACFK,EAAQ,EAAGzpH,EAAS,IAAJA,EAAWovG,EAAO93G,EAASzE,GAAIA,GAAK6C,EAAG+zH,GAAS,GAEvE,GAAU,IAAN33G,EACFA,EAAI,EAAI03G,MACH,IAAI13G,IAAMy3G,EACf,OAAOvpH,EAAI4nH,IAAsB8B,EAAAA,GAAdhuH,GAAK,EAAI,GAE5BsE,GAAQrI,KAAK8uB,IAAI,EAAG2iG,GACpBt3G,GAAQ03G,EAEV,OAAQ9tH,GAAK,EAAI,GAAKsE,EAAIrI,KAAK8uB,IAAI,EAAG3U,EAAIs3G,IAG5CvG,EAAQ1yC,MAAQ,SAAUi/B,EAAQ7qG,EAAOjN,EAAQ6xH,EAAMC,EAAMC,GAC3D,IAAIv3G,EAAG9R,EAAGkd,EACNosG,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAe,KAATP,EAAczxH,KAAK8uB,IAAI,GAAI,IAAM9uB,KAAK8uB,IAAI,GAAI,IAAM,EAC1D5zB,EAAIs2H,EAAO,EAAKE,EAAS,EACzB3zH,EAAIyzH,EAAO,GAAK,EAChBztH,EAAI6I,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ5M,KAAKC,IAAI2M,GAEb9E,MAAM8E,IAAUA,IAAUmlH,EAAAA,GAC5B1pH,EAAIP,MAAM8E,GAAS,EAAI,EACvBuN,EAAIy3G,IAEJz3G,EAAIna,KAAKg4G,MAAMh4G,KAAK0lH,IAAI94G,GAAS5M,KAAKiyH,KAClCrlH,GAAS2Y,EAAIvlB,KAAK8uB,IAAI,GAAI3U,IAAM,IAClCA,IACAoL,GAAK,IAGL3Y,GADEuN,EAAI03G,GAAS,EACNG,EAAKzsG,EAELysG,EAAKhyH,KAAK8uB,IAAI,EAAG,EAAI+iG,IAEpBtsG,GAAK,IACfpL,IACAoL,GAAK,GAGHpL,EAAI03G,GAASD,GACfvpH,EAAI,EACJ8R,EAAIy3G,GACKz3G,EAAI03G,GAAS,GACtBxpH,GAAMuE,EAAQ2Y,EAAK,GAAKvlB,KAAK8uB,IAAI,EAAG2iG,GACpCt3G,GAAQ03G,IAERxpH,EAAIuE,EAAQ5M,KAAK8uB,IAAI,EAAG+iG,EAAQ,GAAK7xH,KAAK8uB,IAAI,EAAG2iG,GACjDt3G,EAAI,IAIDs3G,GAAQ,EAAGha,EAAO93G,EAASzE,GAAS,IAAJmN,EAAUnN,GAAK6C,EAAGsK,GAAK,IAAKopH,GAAQ,GAI3E,IAFAt3G,EAAKA,GAAKs3G,EAAQppH,EAClBspH,GAAQF,EACDE,EAAO,EAAGla,EAAO93G,EAASzE,GAAS,IAAJif,EAAUjf,GAAK6C,EAAGoc,GAAK,IAAKw3G,GAAQ,GAE1Ela,EAAO93G,EAASzE,EAAI6C,IAAU,IAAJgG,cClF5B,IAOImuH,EACAC,EARAhP,EAAUv1B,EAAOs9B,QAAU,GAU/B,SAASkH,IACL,MAAM,IAAIpzH,MAAM,mCAEpB,SAASqzH,IACL,MAAM,IAAIrzH,MAAM,qCAsBpB,SAASszH,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAMp4G,GACJ,IAEI,OAAO+3G,EAAiB98F,KAAK,KAAMm9F,EAAK,GAC1C,MAAMp4G,GAEJ,OAAO+3G,EAAiB98F,KAAKl7B,KAAMq4H,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,EAEzB,MAAOj4G,GACL+3G,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,EAE3B,MAAOl4G,GACLg4G,EAAqBE,GAjB7B,GAwEA,IAEIK,EAFAlnD,EAAQ,GACRmnD,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaD,IAGlBC,GAAW,EACPD,EAAa93H,OACb4wE,EAAQknD,EAAarmH,OAAOm/D,GAE5BonD,GAAc,EAEdpnD,EAAM5wE,QACNk4H,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAI35B,EAAUs5B,EAAWO,GACzBF,GAAW,EAGX,IADA,IAAI7vH,EAAM0oE,EAAM5wE,OACVkI,GAAK,CAGP,IAFA4vH,EAAelnD,EACfA,EAAQ,KACConD,EAAa9vH,GACd4vH,GACAA,EAAaE,GAAYG,MAGjCH,GAAc,EACd9vH,EAAM0oE,EAAM5wE,OAEhB83H,EAAe,KACfC,GAAW,EAnEf,SAAyBK,GACrB,GAAIb,IAAuBM,aAEvB,OAAOA,aAAaO,GAGxB,IAAKb,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAaO,GAExB,IAEWb,EAAmBa,GAC5B,MAAO74G,GACL,IAEI,OAAOg4G,EAAmB/8F,KAAK,KAAM49F,GACvC,MAAO74G,GAGL,OAAOg4G,EAAmB/8F,KAAKl7B,KAAM84H,KAgD7CC,CAAgBj6B,IAiBpB,SAASk6B,EAAKX,EAAK7qH,GACfxN,KAAKq4H,IAAMA,EACXr4H,KAAKwN,MAAQA,EAYjB,SAASy+G,KA5BThD,EAAQgQ,SAAW,SAAUZ,GACzB,IAAIjsG,EAAO,IAAI3rB,MAAMy4H,UAAUx4H,OAAS,GACxC,GAAIw4H,UAAUx4H,OAAS,EACnB,IAAK,IAAIM,EAAI,EAAGA,EAAIk4H,UAAUx4H,OAAQM,IAClCorB,EAAKprB,EAAI,GAAKk4H,UAAUl4H,GAGhCswE,EAAM5sE,KAAK,IAAIs0H,EAAKX,EAAKjsG,IACJ,IAAjBklD,EAAM5wE,QAAiB+3H,GACvBL,EAAWQ,IASnBI,EAAKv8G,UAAUo8G,IAAM,WACjB74H,KAAKq4H,IAAI1M,MAAM,KAAM3rH,KAAKwN,QAE9By7G,EAAQkQ,MAAQ,UAChBlQ,EAAQmQ,SAAU,EAClBnQ,EAAQqD,IAAM,GACdrD,EAAQoQ,KAAO,GACfpQ,EAAQz9F,QAAU,GAClBy9F,EAAQqQ,SAAW,GAInBrQ,EAAQsQ,GAAKtN,EACbhD,EAAQuQ,YAAcvN,EACtBhD,EAAQwQ,KAAOxN,EACfhD,EAAQyQ,IAAMzN,EACdhD,EAAQ0Q,eAAiB1N,EACzBhD,EAAQ2Q,mBAAqB3N,EAC7BhD,EAAQ4Q,KAAO5N,EACfhD,EAAQ6Q,gBAAkB7N,EAC1BhD,EAAQ8Q,oBAAsB9N,EAE9BhD,EAAQ+Q,UAAY,SAAUhuH,GAAQ,MAAO,IAE7Ci9G,EAAQgR,QAAU,SAAUjuH,GACxB,MAAM,IAAIlH,MAAM,qCAGpBmkH,EAAQiR,IAAM,WAAc,MAAO,KACnCjR,EAAQkR,MAAQ,SAAUC,GACtB,MAAM,IAAIt1H,MAAM,mCAEpBmkH,EAAQoR,MAAQ,WAAa,OAAO","sources":["webpack://@joystream/pioneer/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/genesis.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/icons.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/ledger.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/testnets.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Array.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Base.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Int.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Compact.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/DoNotConstruct.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Enum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Int.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Null.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Option.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Result.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Tuple.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/UInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Vec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/VecFixed.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BTreeMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BTreeSet.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BitVec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Bytes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/HashMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Map.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/OptionBool.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Range.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/RangeInclusive.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Type.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/U8aFixed.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/WrapperOpaque.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Bool.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Json.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Raw.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Set.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Struct.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Text.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I128.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I16.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I256.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I32.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U128.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U16.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U256.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U32.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/USize.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareArray.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareSet.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/decodeU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/mapToTypeMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/sanitize.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/sortValues.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/typeToConstructor.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/typesToMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/util.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/create/class.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/create/type.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/types/types.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/encodeTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/getTypeDef.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/typeSplit.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/xcm.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/create/lazy.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/create/registry.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/ethereum/AccountId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/ethereum/LookupSource.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/Extrinsic.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/SignerPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/constants.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/util.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/AccountId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/AccountIndex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Block.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Call.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/ChainProperties.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/ConsensusEngineId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Event.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/LookupSource.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/MultiAddress.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Vote.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/alias.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/assets/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/attestations/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/aura/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/author/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/authorship/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/babe/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/balances/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/beefy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/bridges/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/chain/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/childstate/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/claims/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/collective/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/consensus/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contracts/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contracts/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/crowdloan/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/cumulus/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/democracy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/dev/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/elections/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/engine/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/eth/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/eth/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/evm/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/extrinsics/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/genericAsset/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/gilt/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/grandpa/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/identity/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/imOnline/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/lottery/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/hashers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v10.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v11.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v12.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v13.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v14.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v9.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/mmr/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/offchain/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/offences/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/hrmp.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/slots.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/payment/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/poll/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/proxy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/purchase/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/recovery/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/rpc/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/runtime/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/v0.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/v1.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scheduler/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/session/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/society/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/staking/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/state/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/support/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/syncstate/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/system/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/system/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/treasury/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/txpayment/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/uniques/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/utility/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/vesting/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v0.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v1.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v2.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/MagicNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/Metadata.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/MetadataVersioned.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/decorate/constants/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/extractTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/flattenUniq.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/getSiName.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/getUniqTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/toCallsOnly.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/validateTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v10/toV11.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v11/toV12.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v12/toV13.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v13/toV14.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v14/toLatest.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v9/toV10.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/primitive/Data.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/checksum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/decode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/defaults.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/encode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/sshash.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/base32/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/base58/bs58.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/blake2/asU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/bn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/encode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/isAddress.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/isChecksum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/keccak/asU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_assert.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_blake2.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_u64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/blake2b.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/sha3.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/utils.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/secp256k1/expand.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/assert.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toHex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/addLength.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/fromU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/stripLength.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatBalance.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatDate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatDecimal.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/si.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/has.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/stripPrefix.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/ascii.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/bigInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/bn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/boolean.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/buffer.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/codec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/function.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/hex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/null.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/number.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/object.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/string.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/toBigInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/u8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/undefined.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/utf8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/lazy.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/logger.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/object/property.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/object/spread.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/string/camelCase.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/string/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/stringify.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/concat.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/eq.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toHex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toString.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/bridge.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/init.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/wbg.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-init/wasm.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-wasm/bundle.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-util/base64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-util/fflate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-bigint/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-global/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-randomvalues/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textdecoder/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textdecoder/fallback.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textencoder/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textencoder/fallback.js","webpack://@joystream/pioneer/../../node_modules/@substrate/ss58-registry/esm/index.js","webpack://@joystream/pioneer/../../node_modules/base64-js/index.js","webpack://@joystream/pioneer/../../node_modules/ieee754/index.js","webpack://@joystream/pioneer/../../node_modules/process/browser.js"],"sourcesContent":["/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE: In the case where the network was hard-spooned and multiple genesisHashes\n// are provided, it needs to be in reverse order, i.e. most-recent first, oldest\n// last. This make lookups for the current a simple genesisHash[0]\n// (See Kusama as an example)\nexport const knownGenesis = {\n  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],\n  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],\n  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],\n  bifrost: ['0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'],\n  centrifuge: ['0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82', '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],\n  composable: ['0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'],\n  'dock-mainnet': ['0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae', '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],\n  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],\n  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],\n  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],\n  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n  ],\n  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],\n  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],\n  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n  ],\n  'nodle-para': ['0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'],\n  parallel: ['0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'],\n  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],\n  polkadex: ['0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'],\n  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],\n  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],\n  rococo: ['0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e', '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],\n  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],\n  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],\n  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],\n  statemint: ['0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'],\n  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'],\n  westend: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'],\n  xxnetwork: ['0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa']\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// these are icon overrides\nexport const knownIcon = {\n  centrifuge: 'polkadot',\n  kusama: 'polkadot',\n  polkadot: 'polkadot',\n  sora: 'polkadot',\n  statemine: 'polkadot',\n  statemint: 'polkadot',\n  westmint: 'polkadot'\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts\n// and maps to the known slip44 (minus the `0x8` hard derivation flag)\n//\n// NOTE: Any network here needs to have a genesisHash attached in the ./genesis.ts config\nexport const knownLedger = {\n  acala: 0x00000313,\n  astar: 0x0000032a,\n  bifrost: 0x00000314,\n  centrifuge: 0x000002eb,\n  composable: 0x00000162,\n  'dock-mainnet': 0x00000252,\n  edgeware: 0x0000020b,\n  equilibrium: 0x05f5e0fd,\n  genshiro: 0x05f5e0fc,\n  karura: 0x000002ae,\n  kusama: 0x000001b2,\n  'nodle-para': 0x000003eb,\n  parallel: 0x00000162,\n  polkadex: 0x0000031f,\n  polkadot: 0x00000162,\n  polymesh: 0x00000253,\n  sora: 0x00000269,\n  statemine: 0x000001b2,\n  // common-good on Kusama, shares derivation\n  statemint: 0x00000162,\n  // common-good on Polkadot, shares derivation\n  xxnetwork: 0x000007a3\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// testnets should not allow selection\nexport const knownTestnet = {\n  '': true,\n  // this is the default non-network entry\n  'cess-testnet': true,\n  'dock-testnet': true,\n  jupiter: true,\n  'mathchain-testnet': true,\n  subspace_testnet: true,\n  'zero-alphaville': true\n};","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactToU8a, u8aConcatStrict, u8aToHex } from '@polkadot/util';\nimport { compareArray } from \"../utils/compareArray.js\";\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\n\nexport class AbstractArray extends Array {\n  constructor(registry, length) {\n    super(length);\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // We need to loop through all entries since they may have a variable length themselves,\n    // e.g. when a Vec or Compact is contained withing, it has a variable length based on data\n    let total = compactToU8a(this.length).length;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareArray(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner(),\n      outer: [compactToU8a(this.length)]\n    };\n  }\n\n  inspectInner() {\n    const inner = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      inner[i] = this[i].inspect();\n    }\n\n    return inner;\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return Array.from(this);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toHuman(isExtended);\n    }\n\n    return result;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toJSON();\n    }\n\n    return result;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  /**\n   * @description Returns the string representation of the value\n   */\n  toString() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toString();\n    }\n\n    return `[${result.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.toU8aInner();\n    return isBare ? u8aConcatStrict(encoded) : u8aConcatStrict([compactToU8a(this.length), ...encoded]);\n  }\n\n  toU8aInner(isBare) {\n    const encoded = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      encoded[i] = this[i].toU8a(isBare);\n    }\n\n    return encoded;\n  } // Below are methods that we override. When we do a `new Vec(...).map()`,\n  // we want it to return an Array. We only override the methods that return a\n  // new instance.\n\n  /**\n   * @description Concatenates two arrays\n   */\n\n\n  concat(other) {\n    return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);\n  }\n  /**\n   * @description Filters the array with the callback\n   */\n\n\n  filter(callbackfn, thisArg) {\n    return this.toArray().filter(callbackfn, thisArg);\n  }\n  /**\n   * @description Maps the array with the callback\n   */\n\n\n  map(callbackfn, thisArg) {\n    return this.toArray().map(callbackfn, thisArg);\n  }\n  /**\n   * @description Checks if the array includes a specific value\n   */\n\n\n  includes(check) {\n    return this.some(value => value.eq(check));\n  }\n  /**\n   * @description Returns a slice of an array\n   */\n\n\n  slice(start, end) {\n    return this.toArray().slice(start, end);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Base\n * @description A type extends the Base class, when it holds a value\n */\nexport class AbstractBase {\n  #raw;\n\n  constructor(registry, value, initialU8aLength) {\n    this.#raw = value;\n    this.initialU8aLength = initialU8aLength;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#raw.inspect();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.#raw.toU8a(isBare);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Base';\n  }\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, BN_BILLION, BN_HUNDRED, BN_MILLION, BN_QUINTILL, bnToBn, bnToHex, bnToU8a, formatBalance, formatNumber, hexToBn, isBn, isHex, isNumber, isString, isU8a, u8aToBn, u8aToNumber } from '@polkadot/util';\nexport const DEFAULT_UINT_BITS = 64; // Maximum allowed integer for JS is 2^53 - 1, set limit at 52\n// In this case however, we always print any >32 as hex\n\nconst MAX_NUMBER_BITS = 52;\nconst MUL_P = new BN(10000);\nconst FORMATTERS = [['Perquintill', BN_QUINTILL], ['Perbill', BN_BILLION], ['Permill', BN_MILLION], ['Percent', BN_HUNDRED]];\n\nfunction toPercentage(value, divisor) {\n  return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;\n}\n/** @internal */\n\n\nfunction decodeAbstractInt(value, isNegative) {\n  if (isNumber(value)) {\n    if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {\n      throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');\n    }\n\n    return value;\n  } else if (isString(value)) {\n    if (isHex(value, -1, true)) {\n      return hexToBn(value, {\n        isLe: false,\n        isNegative\n      }).toString();\n    }\n\n    if (value.includes('.') || value.includes(',') || value.includes('e')) {\n      throw new Error('String should not contain decimal points or scientific notation');\n    }\n\n    return value;\n  } else if (isBn(value)) {\n    return value.toString();\n  }\n\n  return bnToBn(value).toString();\n}\n/**\n * @name AbstractInt\n * @ignore\n * @noInheritDoc\n */\n\n\nexport class AbstractInt extends BN {\n  #bitLength;\n\n  constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {\n    // Construct via a string/number, which will be passed in the BN constructor.\n    // It would be ideal to actually return a BN, but there is an issue:\n    // https://github.com/indutny/bn.js/issues/206\n    super( // shortcut isU8a as used in SCALE decoding\n    isU8a(value) ? bitLength <= 48 ? u8aToNumber(value.subarray(0, bitLength / 8), {\n      isNegative: isSigned\n    }) : u8aToBn(value.subarray(0, bitLength / 8), {\n      isLe: true,\n      isNegative: isSigned\n    }).toString() : decodeAbstractInt(value, isSigned));\n    this.registry = registry;\n    this.#bitLength = bitLength;\n    this.encodedLength = this.#bitLength / 8;\n    this.isUnsigned = !isSigned;\n    const isNegative = this.isNeg();\n    const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);\n\n    if (isNegative && !isSigned) {\n      throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);\n    } else if (super.bitLength() > maxBits) {\n      throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);\n    }\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is a zero value (align elsewhere)\n   */\n\n\n  get isEmpty() {\n    return this.isZero();\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#bitLength;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  eq(other) {\n    // Here we are actually overriding the built-in .eq to take care of both\n    // number and BN inputs (no `.eqn` needed) - numbers will be converted\n    return super.eq(isHex(other) ? hexToBn(other.toString(), {\n      isLe: false,\n      isNegative: !this.isUnsigned\n    }) : bnToBn(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description True if this value is the max of the type\n   */\n\n\n  isMax() {\n    const u8a = this.toU8a().filter(b => b === 0xff);\n    return u8a.length === this.#bitLength / 8;\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return BigInt(this.toString());\n  }\n  /**\n   * @description Returns the BN representation of the number. (Compatibility)\n   */\n\n\n  toBn() {\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isLe = false) {\n    // For display/JSON, this is BE, for compare, use isLe\n    return bnToHex(this, {\n      bitLength: this.bitLength(),\n      isLe,\n      isNegative: !this.isUnsigned\n    });\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toHuman(isExpanded) {\n    const rawType = this.toRawType();\n\n    if (rawType === 'Balance') {\n      return this.isMax() ? 'everything' // FIXME In the case of multiples we need some way of detecting which instance this belongs\n      // to. as it stands we will always format (incorrectly) against the first token defined\n      : formatBalance(this, {\n        decimals: this.registry.chainDecimals[0],\n        withSi: true,\n        withUnit: this.registry.chainTokens[0]\n      });\n    }\n\n    const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];\n    return divisor ? toPercentage(this, divisor) : formatNumber(this);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON(onlyHex = false) {\n    // FIXME this return type should by string | number, however BN returns string\n    // Options here are\n    //   - super.bitLength() - the actual used bits\n    //   - this.#bitLength - the type bits (this should be used, however contracts RPC is problematic)\n    return onlyHex || super.bitLength() > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    // NOTE In the case of balances, which have a special meaning on the UI\n    // and can be interpreted differently, return a specific value for it so\n    // underlying it always matches (no matter which length it actually is)\n    return this instanceof this.registry.createClassUnsafe('Balance') ? 'Balance' : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   * @param base The base to use for the conversion\n   */\n\n\n  toString(base) {\n    // only included here since we do not inherit docs\n    return super.toString(base);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this, {\n      bitLength: this.bitLength(),\n      isLe: true,\n      isNegative: !this.isUnsigned\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a, compactFromU8aLim, compactToU8a, isU8a } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction decodeCompact(registry, Type, value) {\n  if (isU8a(value)) {\n    const [decodedLength, bn] = (value[0] & 0b11) < 0b11 ? compactFromU8aLim(value) : compactFromU8a(value);\n    return [new Type(registry, bn), decodedLength];\n  } else if (value instanceof Compact) {\n    const raw = value.unwrap();\n    return raw instanceof Type ? [raw, 0] : [new Type(registry, raw), 0];\n  } else if (value instanceof Type) {\n    return [value, 0];\n  }\n\n  return [new Type(registry, value), 0];\n}\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\n\n\nexport class Compact {\n  #Type;\n  #raw;\n\n  constructor(registry, Type, value = 0, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    this.registry = registry;\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    const [raw, decodedLength] = decodeCompact(registry, this.#Type, value);\n    this.initialU8aLength = decodedLength;\n    this.#raw = raw;\n  }\n\n  static with(Type) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Compact {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#raw.bitLength();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other instanceof Compact ? other.#raw : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return this.#raw.toBigInt();\n  }\n  /**\n   * @description Returns the BN representation of the number\n   */\n\n\n  toBn() {\n    return this.#raw.toBn();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.#raw.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Compact<${this.registry.getClassName(this.#Type) || this.#raw.toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return compactToU8a(this.#raw.toBn());\n  }\n  /**\n   * @description Returns the embedded [[UInt]] or [[Moment]] value\n   */\n\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name DoNotConstruct\n * @description\n * An unknown type that fails on construction with the type info\n */\nexport class DoNotConstruct {\n  #neverError;\n\n  constructor(registry, typeName = 'DoNotConstruct') {\n    this.registry = registry;\n    this.#neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);\n    throw this.#neverError;\n  }\n\n  static with(typeName) {\n    return class extends DoNotConstruct {\n      constructor(registry) {\n        super(registry, typeName);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    throw this.#neverError;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw this.#neverError;\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    throw this.#neverError;\n  }\n\n  eq() {\n    throw this.#neverError;\n  }\n\n  inspect() {\n    throw this.#neverError;\n  }\n\n  toHex() {\n    throw this.#neverError;\n  }\n\n  toHuman() {\n    throw this.#neverError;\n  }\n\n  toJSON() {\n    throw this.#neverError;\n  }\n\n  toRawType() {\n    throw this.#neverError;\n  }\n\n  toString() {\n    throw this.#neverError;\n  }\n\n  toU8a() {\n    throw this.#neverError;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isNumber, isObject, isString, isU8a, objectProperties, stringCamelCase, stringify, stringPascalCase, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { mapToTypeMap, typesToMap } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\"; // export interface, this is used in Enum.with, so required as public by TS\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction isRustEnum(def) {\n  const defValues = Object.values(def);\n\n  if (defValues.some(v => isNumber(v))) {\n    if (!defValues.every(v => isNumber(v) && v >= 0 && v <= 255)) {\n      throw new Error('Invalid number-indexed enum definition');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction extractDef(registry, _def) {\n  const def = {};\n  let isBasic;\n  let isIndexed;\n\n  if (Array.isArray(_def)) {\n    for (let i = 0; i < _def.length; i++) {\n      def[_def[i]] = {\n        Type: Null,\n        index: i\n      };\n    }\n\n    isBasic = true;\n    isIndexed = false;\n  } else if (isRustEnum(_def)) {\n    const [Types, keys] = mapToTypeMap(registry, _def);\n\n    for (let i = 0; i < keys.length; i++) {\n      def[keys[i]] = {\n        Type: Types[i],\n        index: i\n      };\n    }\n\n    isBasic = !Object.values(def).some(({\n      Type\n    }) => Type !== Null);\n    isIndexed = false;\n  } else {\n    const entries = Object.entries(_def);\n\n    for (let i = 0; i < entries.length; i++) {\n      const [key, index] = entries[i];\n      def[key] = {\n        Type: Null,\n        index\n      };\n    }\n\n    isBasic = true;\n    isIndexed = true;\n  }\n\n  return {\n    def,\n    isBasic,\n    isIndexed\n  };\n}\n\nfunction getEntryType(def, checkIdx) {\n  const values = Object.values(def);\n\n  for (let i = 0; i < values.length; i++) {\n    const {\n      Type,\n      index\n    } = values[i];\n\n    if (index === checkIdx) {\n      return Type;\n    }\n  }\n\n  throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);\n}\n\nfunction createFromU8a(registry, def, index, value) {\n  const Type = getEntryType(def, index);\n  return {\n    index,\n    value: new Type(registry, value)\n  };\n}\n\nfunction createFromValue(registry, def, index = 0, value) {\n  const Type = getEntryType(def, index);\n  return {\n    index,\n    value: value instanceof Type ? value : new Type(registry, value)\n  };\n}\n\nfunction decodeFromJSON(registry, def, key, value) {\n  // JSON comes in the form of { \"<type (camelCase)>\": \"<value for type>\" }, here we\n  // additionally force to lower to ensure forward compat\n  const keys = Object.keys(def).map(k => k.toLowerCase());\n  const keyLower = key.toLowerCase();\n  const index = keys.indexOf(keyLower);\n\n  if (index === -1) {\n    throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);\n  }\n\n  try {\n    return createFromValue(registry, def, Object.values(def)[index].index, value);\n  } catch (error) {\n    throw new Error(`Enum(${key}):: ${error.message}`);\n  }\n}\n\nfunction decodeEnum(registry, def, value, index) {\n  // NOTE We check the index path first, before looking at values - this allows treating\n  // the optional indexes before anything else, more-specific > less-specific\n  if (isNumber(index)) {\n    return createFromValue(registry, def, index, value);\n  } else if (isU8a(value) || isHex(value)) {\n    const u8a = u8aToU8a(value); // nested, we don't want to match isObject below\n\n    if (u8a.length) {\n      return createFromU8a(registry, def, u8a[0], u8a.subarray(1));\n    }\n  } else if (value instanceof Enum) {\n    return createFromValue(registry, def, value.index, value.value);\n  } else if (isNumber(value)) {\n    return createFromValue(registry, def, value);\n  } else if (isString(value)) {\n    return decodeFromJSON(registry, def, value.toString());\n  } else if (isObject(value)) {\n    const key = Object.keys(value)[0];\n    return decodeFromJSON(registry, def, key, value[key]);\n  } // Worst-case scenario, return the first with default\n\n\n  return createFromValue(registry, def, Object.values(def)[0].index);\n}\n/**\n * @name Enum\n * @description\n * This implements an enum, that based on the value wraps a different type. It is effectively\n * an extension to enum where the value type is determined by the actual index.\n */\n\n\nexport class Enum {\n  #def;\n  #entryIndex;\n  #indexes;\n  #isBasic;\n  #isIndexed;\n  #raw;\n\n  constructor(registry, Types, value, index, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const {\n      def,\n      isBasic,\n      isIndexed\n    } = definition || setDefinition(extractDef(registry, Types)); // shortcut isU8a as used in SCALE decoding\n\n    const decoded = isU8a(value) && value.length && !isNumber(index) ? createFromU8a(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);\n    this.registry = registry;\n    this.#def = def;\n    this.#isBasic = isBasic;\n    this.#isIndexed = isIndexed;\n    this.#indexes = Object.values(def).map(({\n      index\n    }) => index);\n    this.#entryIndex = this.#indexes.indexOf(decoded.index);\n    this.#raw = decoded.value;\n\n    if (this.#raw.initialU8aLength) {\n      this.initialU8aLength = 1 + this.#raw.initialU8aLength;\n    }\n  }\n\n  static with(Types) {\n    const keys = Array.isArray(Types) ? Types : Object.keys(Types);\n    const asKeys = new Array(keys.length);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      const name = stringPascalCase(keys[i]);\n      asKeys[i] = `as${name}`;\n      isKeys[i] = `is${name}`;\n    }\n\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Enum {\n      constructor(registry, value, index) {\n        super(registry, Types, value, index, {\n          definition,\n          setDefinition\n        });\n        objectProperties(this, isKeys, (_, i) => this.type === keys[i]);\n        objectProperties(this, asKeys, (k, i) => {\n          if (!this[isKeys[i]]) {\n            throw new Error(`Cannot convert '${this.type}' via ${k}`);\n          }\n\n          return this.value;\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The index of the enum value\n   */\n\n\n  get index() {\n    return this.#indexes[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description true if this is a basic enum (no values)\n   */\n\n\n  get isBasic() {\n    return this.#isBasic;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof Null;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   * @deprecated use isNone\n   */\n\n\n  get isNull() {\n    return this.isNone;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defIndexes() {\n    return this.#indexes;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defKeys() {\n    return Object.keys(this.#def);\n  }\n  /**\n   * @description The name of the type this enum value represents\n   */\n\n\n  get type() {\n    return this.defKeys[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // cater for the case where we only pass the enum index\n    if (isU8a(other)) {\n      return !this.toU8a().some((entry, index) => entry !== other[index]);\n    } else if (isNumber(other)) {\n      return this.toNumber() === other;\n    } else if (this.#isBasic && isString(other)) {\n      return this.type === other;\n    } else if (isHex(other)) {\n      return this.toHex() === other;\n    } else if (other instanceof Enum) {\n      return this.index === other.index && this.value.eq(other.value);\n    } else if (isObject(other)) {\n      return this.value.eq(other[this.type]);\n    } // compare the actual wrapper value\n\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.#isBasic) {\n      return {\n        outer: [new Uint8Array([this.index])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#isBasic || this.isNone ? this.type : {\n      [this.type]: this.#raw.toHuman(isExtended)\n    };\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#isBasic ? this.type : {\n      [stringCamelCase(this.type)]: this.#raw.toJSON()\n    };\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.index;\n  }\n  /**\n   * @description Returns a raw struct representation of the enum types\n   */\n\n\n  _toRawStruct() {\n    if (this.#isBasic) {\n      return this.#isIndexed ? this.defKeys.reduce((out, key, index) => {\n        out[key] = this.#indexes[index];\n        return out;\n      }, {}) : this.defKeys;\n    }\n\n    const entries = Object.entries(this.#def);\n    return typesToMap(this.registry, entries.reduce((out, [key, {\n      Type\n    }], i) => {\n      out[0][i] = Type;\n      out[1][i] = key;\n      return out;\n    }, [new Array(entries.length), new Array(entries.length)]));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _enum: this._toRawStruct()\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.isNone ? this.type : stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? this.#raw.toU8a(isBare) : u8aConcatStrict([new Uint8Array([this.index]), this.#raw.toU8a(isBare)]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/Int.js\";\n/**\n * @name Int\n * @description\n * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class Int extends AbstractInt {\n  constructor(registry, value = 0, bitLength) {\n    super(registry, value, bitLength, true);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends Int {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\nexport class Null {\n  encodedLength = 0;\n  isEmpty = true;\n  // Added for compatibility reasons, e.g. see Option\n  initialU8aLength = 0;\n\n  constructor(registry) {\n    this.registry = registry;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || isNull(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {};\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isCodec, isNull, isU8a, isUndefined, u8aToHex } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nclass None extends Null {\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return 'None';\n  }\n\n}\n/** @internal */\n\n\nfunction decodeOption(registry, Type, value) {\n  if (value instanceof Type) {\n    // don't re-create, use as it (which also caters for derived types)\n    return value;\n  } else if (value instanceof Option) {\n    if (value.value instanceof Type) {\n      // same instance, return it\n      return value.value;\n    } else if (value.isNone) {\n      // internal is None, we are also none\n      return new None(registry);\n    } // convert the actual value into known\n\n\n    return new Type(registry, value.value);\n  } else if (isNull(value) || isUndefined(value) || value === '0x' || value instanceof None) {\n    // anyhting empty we pass as-is\n    return new None(registry);\n  } else if (isU8a(value)) {\n    // the isU8a check happens last in the if-tree - since the wrapped value\n    // may be an instance of it, so Type and Option checks go in first\n    return !value.length || value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1));\n  }\n\n  return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\n\n\nexport class Option {\n  #Type;\n  #raw;\n\n  constructor(registry, typeName, value, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const Type = definition || setDefinition(typeToConstructor(registry, typeName));\n    const decoded = isU8a(value) && value.length && !isCodec(value) ? value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);\n    this.registry = registry;\n    this.#Type = Type;\n    this.#raw = decoded;\n\n    if (decoded && decoded.initialU8aLength) {\n      this.initialU8aLength = 1 + decoded.initialU8aLength;\n    }\n  }\n\n  static with(Type) {\n    let definition;\n\n    const setDefinition = d => {\n      definition = d;\n      return d;\n    };\n\n    return class extends Option {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // boolean byte (has value, doesn't have) along with wrapped length\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isEmpty() {\n    return this.isNone;\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof None;\n  }\n  /**\n   * @description Checks if the Option has a value\n   */\n\n\n  get isSome() {\n    return !this.isNone;\n  }\n  /**\n   * @description The actual value for the Option\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Option) {\n      return this.isSome === other.isSome && this.value.eq(other.value);\n    }\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.isNone) {\n      return {\n        outer: [new Uint8Array([0])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([1]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // This attempts to align with the JSON encoding - actually in this case\n    // the isSome value is correct, however the `isNone` may be problematic\n    return this.isNone ? '0x' : u8aToHex(this.toU8a().subarray(1));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.isNone ? null : this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    const wrapped = this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType();\n    return isBare ? wrapped : `Option<${wrapped}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return this.#raw.toU8a(true);\n    }\n\n    const u8a = new Uint8Array(this.encodedLength);\n\n    if (this.isSome) {\n      u8a.set([1]);\n      u8a.set(this.#raw.toU8a(), 1);\n    }\n\n    return u8a;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available), throws if null\n   */\n\n\n  unwrap() {\n    if (this.isNone) {\n      throw new Error('Option: unwrapping a None value');\n    }\n\n    return this.#raw;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOr(defaultValue) {\n    return this.isSome ? this.unwrap() : defaultValue;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOrDefault() {\n    return this.isSome ? this.unwrap() : new this.#Type(this.registry);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from \"./Enum.js\";\n/**\n * @name Result\n * @description\n * A Result maps to the Rust Result type, that can either wrap a success or error value\n */\n\nexport class Result extends Enum {\n  constructor(registry, Ok, Err, value) {\n    // NOTE This is order-dependent, Ok (with index 0) needs to be first\n    // eslint-disable-next-line sort-keys\n    super(registry, {\n      Ok,\n      Err\n    }, value);\n  }\n\n  static with(Types) {\n    return class extends Result {\n      constructor(registry, value) {\n        super(registry, Types.Ok, Types.Err, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the wrapper Err value (if isErr)\n   */\n\n\n  get asErr() {\n    if (!this.isErr) {\n      throw new Error('Cannot extract Err value from Ok result, check isErr first');\n    }\n\n    return this.value;\n  }\n  /**\n   * @deprecated Use asErr\n   */\n\n\n  get asError() {\n    return this.asErr;\n  }\n  /**\n   * @description Returns the wrapper Ok value (if isOk)\n   */\n\n\n  get asOk() {\n    if (!this.isOk) {\n      throw new Error('Cannot extract Ok value from Err result, check isOk first');\n    }\n\n    return this.value;\n  }\n  /**\n   * @description Checks if the Result has no value\n   */\n\n\n  get isEmpty() {\n    return this.isOk && this.value.isEmpty;\n  }\n  /**\n   * @description Checks if the Result wraps an Err value\n   */\n\n\n  get isErr() {\n    return !this.isOk;\n  }\n  /**\n   * @deprecated Use isErr\n   */\n\n\n  get isError() {\n    return this.isErr;\n  }\n  /**\n   * @description Checks if the Result wraps an Ok value\n   */\n\n\n  get isOk() {\n    return this.index === 0;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const Types = this._toRawStruct();\n\n    return `Result<${Types.Ok},${Types.Err}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, isHex, isString, isU8a, stringify, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8a, mapToTypeMap, typeToConstructor } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/** @internal */\n\n\nfunction decodeTuple(registry, result, value, Classes) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeU8a(registry, result, u8aToU8a(value), Classes);\n  }\n\n  const Types = Classes[0];\n\n  for (let i = 0; i < Types.length; i++) {\n    try {\n      const entry = value === null || value === void 0 ? void 0 : value[i];\n      result[i] = entry instanceof Types[i] ? entry : new Types[i](registry, entry);\n    } catch (error) {\n      throw new Error(`Tuple: failed on ${i}:: ${error.message}`);\n    }\n  }\n\n  return [result, 0];\n}\n/**\n * @name Tuple\n * @description\n * A Tuple defines an anonymous fixed-length array, where each element has its\n * own type. It extends the base JS `Array` object.\n */\n\n\nexport class Tuple extends AbstractArray {\n  #Types;\n\n  constructor(registry, Types, value, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const Classes = definition || setDefinition(Array.isArray(Types) ? [Types.map(t => typeToConstructor(registry, t)), []] : isFunction(Types) || isString(Types) ? [[typeToConstructor(registry, Types)], []] : mapToTypeMap(registry, Types));\n    super(registry, Classes[0].length);\n    this.initialU8aLength = (isU8a(value) ? decodeU8a(registry, this, value, Classes) : decodeTuple(registry, this, value, Classes))[1];\n    this.#Types = Classes;\n  }\n\n  static with(Types) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Tuple {\n      constructor(registry, value) {\n        super(registry, Types, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description The types definition of the tuple\n   */\n\n\n  get Types() {\n    return this.#Types[1].length ? this.#Types[1] : this.#Types[0].map(T => new T(this.registry).toRawType());\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const types = this.#Types[0].map(T => this.registry.getClassName(T) || new T(this.registry).toRawType());\n    return `(${types.join(',')})`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    // Overwrite the default toString representation of Array.\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return u8aConcatStrict(this.toU8aInner(isBare));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/Int.js\";\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class UInt extends AbstractInt {\n  static with(bitLength, typeName) {\n    return class extends UInt {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, isU8a, logger, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction decodeVecLength(value) {\n  if (Array.isArray(value)) {\n    return [value, value.length, 0];\n  }\n\n  const u8a = u8aToU8a(value);\n  const [startAt, length] = compactFromU8aLim(u8a);\n\n  if (length > MAX_LENGTH) {\n    throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  }\n\n  return [u8a, length, startAt];\n}\n\nexport function decodeVec(registry, result, value, startAt, Type) {\n  if (Array.isArray(value)) {\n    const count = result.length;\n\n    for (let i = 0; i < count; i++) {\n      const entry = value[i];\n\n      try {\n        result[i] = entry instanceof Type ? entry : new Type(registry, entry);\n      } catch (error) {\n        l.error(`Unable to decode on index ${i}`, error.message);\n        throw error;\n      }\n    }\n\n    return [0, 0];\n  }\n\n  return decodeU8aVec(registry, result, u8aToU8a(value), startAt, Type);\n}\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\n\nexport class Vec extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, value = [], {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const [decodeFrom, length, startAt] = decodeVecLength(value);\n    super(registry, length);\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    this.initialU8aLength = (isU8a(decodeFrom) ? decodeU8aVec(registry, this, decodeFrom, startAt, this.#Type) : decodeVec(registry, this, decodeFrom, startAt, this.#Type))[0];\n  }\n\n  static with(Type) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Vec {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return this.#Type.name;\n  }\n  /**\n   * @description Finds the index of the value in the array\n   */\n\n\n  indexOf(_other) {\n    // convert type first, this removes overhead from the eq\n    const other = _other instanceof this.#Type ? _other : new this.#Type(this.registry, _other);\n\n    for (let i = 0; i < this.length; i++) {\n      if (other.eq(this[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Vec<${this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aConcatStrict } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nimport { decodeVec } from \"./Vec.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/**\n * @name VecFixed\n * @description\n * This manages codec arrays of a fixed length\n */\n\n\nexport class VecFixed extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, length, value = [], {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    super(registry, length);\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    this.initialU8aLength = (isU8a(value) ? decodeU8aVec(registry, this, value, 0, this.#Type) : decodeVec(registry, this, value, 0, this.#Type))[1];\n  }\n\n  static with(Type, length) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends VecFixed {\n      constructor(registry, value) {\n        super(registry, Type, length, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return new this.#Type(this.registry).toRawType();\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n\n  toU8a() {\n    // we override, we don't add the length prefix for ourselves, and at the same time we\n    // ignore isBare on entries, since they should be properly encoded at all times\n    const encoded = this.toU8aInner();\n    return encoded.length ? u8aConcatStrict(encoded) : new Uint8Array([]);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[${this.Type};${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class BTreeMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends BTreeMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value, 'BTreeMap');\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isHex, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareSet, decodeU8aVec, sortSet, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('BTreeSet');\n/** @internal */\n\nfunction decodeSetFromU8a(registry, ValClass, u8a) {\n  const output = new Set();\n  const [offset, count] = compactFromU8aLim(u8a);\n  const result = new Array(count);\n  const [decodedLength] = decodeU8aVec(registry, result, u8a, offset, ValClass);\n\n  for (let i = 0; i < count; i++) {\n    output.add(result[i]);\n  }\n\n  return [ValClass, output, decodedLength];\n}\n/** @internal */\n\n\nfunction decodeSetFromSet(registry, ValClass, value) {\n  const output = new Set();\n  value.forEach(val => {\n    try {\n      output.add(val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  });\n  return [ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Set<any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonSet\n * @internal\n */\n\n\nfunction decodeSet(registry, valType, value) {\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (!value) {\n    return [ValClass, new Set(), 0];\n  } else if (isU8a(value) || isHex(value)) {\n    return decodeSetFromU8a(registry, ValClass, u8aToU8a(value));\n  } else if (Array.isArray(value) || value instanceof Set) {\n    return decodeSetFromSet(registry, ValClass, value);\n  }\n\n  throw new Error('BTreeSet: cannot decode type');\n}\n\nexport class BTreeSet extends Set {\n  #ValClass;\n\n  constructor(registry, valType, rawValue) {\n    const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);\n    super(sortSet(values));\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#ValClass = ValClass;\n  }\n\n  static with(valType) {\n    return class extends BTreeSet {\n      constructor(registry, value) {\n        super(registry, valType, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const v of this.values()) {\n      len += v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()].map(v => v.toString());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareSet(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const v of this.values()) {\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toHuman(isExtended));\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toJSON());\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `BTreeSet<${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const v of this.values()) {\n      encoded.push(v.toU8a(isBare));\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isString, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeBitVecU8a(value) {\n  if (!value || !value.length) {\n    return [0, new Uint8Array()];\n  } // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded\n\n\n  const [offset, length] = compactFromU8aLim(value);\n  const total = offset + Math.ceil(length / 8);\n\n  if (total > value.length) {\n    throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  }\n\n  return [length, value.subarray(offset, total)];\n}\n/** @internal */\n\n\nfunction decodeBitVec(value) {\n  if (Array.isArray(value) || isString(value)) {\n    const u8a = u8aToU8a(value);\n    return [u8a.length / 8, u8a];\n  }\n\n  return decodeBitVecU8a(value);\n}\n/**\n * @name BitVec\n * @description\n * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this\n * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes\n */\n\n\nexport class BitVec extends Raw {\n  #decodedLength;\n  #isMsb; // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming\n  // we are dealing with Lsb, which is the default (as of writing) BitVec format used\n  // in the Polkadot code (this only affects the toHuman displays)\n\n  constructor(registry, value, isMsb = false) {\n    const [decodedLength, u8a] = decodeBitVec(value);\n    super(registry, u8a);\n    this.#decodedLength = decodedLength;\n    this.#isMsb = isMsb;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.#decodedLength).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [compactToU8a(this.#decodedLength), super.toU8a()]\n    };\n  }\n\n  toHuman() {\n    return `0b${[...this.toU8a(true)].map(d => `00000000${d.toString(2)}`.slice(-8)).map(s => this.#isMsb ? s : s.split('').reverse().join('')).join('_')}`;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'BitVec';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const bitVec = super.toU8a();\n    return isBare ? bitVec : u8aConcatStrict([compactToU8a(this.#decodedLength), bitVec]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactFromU8aLim, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\"; // Bytes are used for things like on-chain code, so it has a healthy limit\n\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\n\nfunction decodeBytesU8a(value) {\n  if (!value.length) {\n    return [new Uint8Array(), 0];\n  } // handle all other Uint8Array inputs, these do have a length prefix\n\n\n  const [offset, length] = compactFromU8aLim(value);\n  const total = offset + length;\n\n  if (length > MAX_LENGTH) {\n    throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  } else if (total > value.length) {\n    throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  }\n\n  return [value.subarray(offset, total), total];\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\n\n\nexport class Bytes extends Raw {\n  constructor(registry, value) {\n    const [u8a, decodedLength] = isU8a(value) && !(value instanceof Raw) ? decodeBytesU8a(value) : Array.isArray(value) || isString(value) ? [u8aToU8a(value), 0] : [value, 0];\n    super(registry, u8a, decodedLength);\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.length).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect(isBare) {\n    const clength = compactToU8a(this.length);\n    return {\n      outer: isBare ? [super.toU8a()] : this.length ? [clength, super.toU8a()] : [clength]\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Bytes';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? super.toU8a(isBare) : compactAddLength(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class HashMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends HashMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isHex, isObject, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { Enum } from \"../base/Enum.js\";\nimport { Struct } from \"../native/Struct.js\";\nimport { compareMap, decodeU8a, sortMap, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('Map');\n/** @internal */\n\nfunction decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {\n  const output = new Map();\n  const [offset, count] = compactFromU8aLim(u8a);\n  const types = [];\n\n  for (let i = 0; i < count; i++) {\n    types.push(KeyClass, ValClass);\n  }\n\n  const [values, decodedLength] = decodeU8a(registry, new Array(types.length), u8a.subarray(offset), [types, []]);\n\n  for (let i = 0; i < values.length; i += 2) {\n    output.set(values[i], values[i + 1]);\n  }\n\n  return [KeyClass, ValClass, output, offset + decodedLength];\n}\n/** @internal */\n\n\nfunction decodeMapFromMap(registry, KeyClass, ValClass, value) {\n  const output = new Map();\n\n  for (const [key, val] of value.entries()) {\n    const isComplex = KeyClass.prototype instanceof AbstractArray || KeyClass.prototype instanceof Struct || KeyClass.prototype instanceof Enum;\n\n    try {\n      output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  }\n\n  return [KeyClass, ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param KeyClass - Type of the map key\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Map<any, any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonMap\n * @internal\n */\n\n\nfunction decodeMap(registry, keyType, valType, value) {\n  const KeyClass = typeToConstructor(registry, keyType);\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (!value) {\n    return [KeyClass, ValClass, new Map(), 0];\n  } else if (isU8a(value) || isHex(value)) {\n    return decodeMapFromU8a(registry, KeyClass, ValClass, u8aToU8a(value));\n  } else if (value instanceof Map) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, value);\n  } else if (isObject(value)) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));\n  }\n\n  throw new Error('Map: cannot decode type');\n}\n\nexport class CodecMap extends Map {\n  #KeyClass;\n  #ValClass;\n  #type;\n\n  constructor(registry, keyType, valType, rawValue, type = 'HashMap') {\n    const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);\n    super(type === 'BTreeMap' ? sortMap(decoded) : decoded);\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#KeyClass = KeyClass;\n    this.#ValClass = ValClass;\n    this.#type = type;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const [k, v] of this.entries()) {\n      len += k.encodedLength + v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push(k.inspect());\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#type}<${this.registry.getClassName(this.#KeyClass) || new this.#KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const [k, v] of this.entries()) {\n      encoded.push(k.toU8a(isBare), v.toU8a(isBare));\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Option } from \"../base/Option.js\";\nimport { bool as Bool } from \"../native/Bool.js\";\n\nfunction decodeU8a(registry, value) {\n  // Encoded as -\n  //  - 0 = None\n  //  - 1 = True\n  //  - 2 = False\n  return value[0] === 0 ? null : new Bool(registry, value[0] === 1);\n}\n/**\n * @name OptionBool\n * @description A specific implementation of Option<bool> than allows for single-byte encoding\n */\n\n\nexport class OptionBool extends Option {\n  constructor(registry, value) {\n    super(registry, Bool, isU8a(value) || isHex(value) ? decodeU8a(registry, u8aToU8a(value)) : value);\n    this.initialU8aLength = 1;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return this.isSome ? !this.value.valueOf() : false;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.isSome ? this.value.valueOf() : false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    return isBare ? 'bool' : 'Option<bool>';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return super.toU8a(true);\n    }\n\n    return this.isSome ? new Uint8Array([this.isTrue ? 1 : 2]) : new Uint8Array([0]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Tuple } from \"../base/Tuple.js\";\n\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n  #rangeName;\n\n  constructor(registry, Type, value, {\n    rangeName = 'Range'\n  } = {}) {\n    super(registry, [Type, Type], value);\n    this.#rangeName = rangeName;\n  }\n\n  static with(Type) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#rangeName}<${this.start.toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Range } from \"./Range.js\";\nexport class RangeInclusive extends Range {\n  constructor(registry, Type, value) {\n    super(registry, Type, value, {\n      rangeName: 'RangeInclusive'\n    });\n  }\n\n  static with(Type) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Text } from \"../native/Text.js\";\nimport { sanitize } from \"../utils/index.js\";\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\nexport class Type extends Text {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride(sanitize(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeU8aFixed(value, bitLength) {\n  const u8a = u8aToU8a(value);\n  const byteLength = bitLength / 8;\n\n  if (!u8a.length) {\n    return [new Uint8Array(byteLength), 0];\n  }\n\n  if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n    throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n  }\n\n  return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\n\n\nexport class U8aFixed extends Raw {\n  constructor(registry, value = new Uint8Array(), bitLength = 256) {\n    const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n    super(registry, u8a, decodedLength);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends U8aFixed {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[u8;${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Bytes } from \"./Bytes.js\";\n\nfunction decodeRaw(registry, typeName, value) {\n  const Type = typeToConstructor(registry, typeName);\n\n  if (isU8a(value) || isHex(value)) {\n    try {\n      const [, u8a] = isHex(value) || value instanceof Raw ? [0, value] : compactStripLength(value);\n      return [Type, new Type(registry, u8a), value];\n    } catch {\n      return [Type, null, value];\n    }\n  }\n\n  const instance = new Type(registry, value);\n  return [Type, instance, compactAddLength(instance.toU8a())];\n}\n\nexport class WrapperKeepOpaque extends Bytes {\n  #Type;\n  #decoded;\n  #opaqueName;\n\n  constructor(registry, typeName, value, {\n    opaqueName = 'WrapperKeepOpaque'\n  } = {}) {\n    const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n    super(registry, u8a);\n    this.#Type = Type;\n    this.#decoded = decoded;\n    this.#opaqueName = opaqueName;\n  }\n\n  static with(Type) {\n    return class extends WrapperKeepOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description Checks if the wrapper is decodable\n   */\n\n\n  get isDecoded() {\n    return !!this.#decoded;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#decoded ? {\n      inner: [this.#decoded.inspect()],\n      outer: [compactToU8a(this.length)]\n    } : {\n      outer: [compactToU8a(this.length), this.toU8a(true)]\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#decoded ? this.#decoded.toHuman(isExtended) : super.toHuman();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#opaqueName}<${this.registry.getClassName(this.#Type) || (this.#decoded ? this.#decoded.toRawType() : new this.#Type(this.registry).toRawType())}>`;\n  }\n  /**\n   * @description Converts the Object to to a string (either decoded or bytes)\n   */\n\n\n  toString() {\n    return this.#decoded ? this.#decoded.toString() : super.toString();\n  }\n  /**\n   * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n   */\n\n\n  unwrap() {\n    if (!this.#decoded) {\n      throw new Error(`${this.#opaqueName}: unwrapping an undecodable value`);\n    }\n\n    return this.#decoded;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { WrapperKeepOpaque } from \"./WrapperKeepOpaque.js\";\nexport class WrapperOpaque extends WrapperKeepOpaque {\n  constructor(registry, typeName, value) {\n    super(registry, typeName, value, {\n      opaqueName: 'WrapperOpaque'\n    });\n  }\n\n  static with(Type) {\n    return class extends WrapperOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)\n   */\n\n\n  get inner() {\n    return this.unwrap();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\n\nexport class bool extends Boolean {\n  constructor(registry, value = false) {\n    super(isU8a(value) ? value[0] === 1 : value instanceof Boolean ? value.valueOf() : !!value);\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n\n\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, objectProperties, stringify } from '@polkadot/util';\nimport { compareMap } from \"../utils/index.js\";\n/** @internal */\n\nfunction decodeJson(value) {\n  return Object.entries(value || {});\n}\n/**\n * @name Json\n * @description\n * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it\n * implements a Codec, it is limited in that it can only be used with input objects via RPC,\n * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys\n * @noInheritDoc\n */\n\n\nexport class Json extends Map {\n  constructor(registry, value) {\n    const decoded = decodeJson(value);\n    super(decoded);\n    this.registry = registry;\n    objectProperties(this, decoded.map(([k]) => k), k => this.get(k));\n  }\n  /**\n   * @description Always 0, never encodes as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return [...this.keys()].length === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  inspect() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  toHex() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = isFunction(value.toHuman) ? value.toHuman() : value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Json';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    throw new Error('Unimplemented');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isAscii, isUndefined, isUtf8, u8aToHex, u8aToString, u8aToU8a } from '@polkadot/util';\n/**\n * @name Raw\n * @description\n * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ\n * from other implementations where it will consume the full Uint8Array as passed to it.\n * As such it is meant to be subclassed where the wrapper takes care of the\n * actual lengths instead of used directly.\n * @noInheritDoc\n */\n\nexport class Raw extends Uint8Array {\n  constructor(registry, value, initialU8aLength) {\n    super(u8aToU8a(value));\n    this.registry = registry;\n    this.initialU8aLength = initialU8aLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Returns true if the wrapped value contains only ASCII printable characters\n   */\n\n\n  get isAscii() {\n    return isAscii(this);\n  }\n  /**\n   * @description Returns true if the type wraps an empty/default all-0 value\n   */\n\n\n  get isEmpty() {\n    return !this.length || isUndefined(this.find(b => !!b));\n  }\n  /**\n   * @description Returns true if the wrapped value contains only utf8 characters\n   */\n\n\n  get isUtf8() {\n    return isUtf8(this);\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.length * 8;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Uint8Array) {\n      return this.length === other.length && !this.some((b, index) => b !== other[index]);\n    }\n\n    return this.eq(u8aToU8a(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Create a new slice from the actual buffer. (compat)\n   * @param start The position to start at\n   * @param end The position to end at\n   */\n\n\n  slice(start, end) {\n    // Like subarray below, we have to follow this approach since we are extending the TypeArray.\n    // This happens especially when it comes to further extensions, the length may be an override\n    return Uint8Array.from(this).slice(start, end);\n  }\n  /**\n   * @description Create a new subarray from the actual buffer. (compat)\n   * @param begin The position to start at\n   * @param end The position to end at\n   */\n\n\n  subarray(begin, end) {\n    return Uint8Array.from(this).subarray(begin, end);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    if (this.isAscii) {\n      const text = this.toUtf8(); // ensure we didn't end up with multibyte codepoints\n\n      if (isAscii(text)) {\n        return text;\n      }\n    }\n\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Raw';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return Uint8Array.from(this);\n  }\n  /**\n   * @description Returns the wrapped data as a UTF-8 string\n   */\n\n\n  toUtf8() {\n    if (!this.isUtf8) {\n      throw new Error('The character sequence is not a valid Utf8 string');\n    }\n\n    return u8aToString(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToBn, bnToU8a, isBn, isNumber, isString, isU8a, isUndefined, objectProperties, stringify, stringPascalCase, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareArray } from \"../utils/index.js\";\n\nfunction encodeSet(setValues, values) {\n  const encoded = new BN(0);\n\n  for (let i = 0; i < values.length; i++) {\n    encoded.ior(bnToBn(setValues[values[i]] || 0));\n  }\n\n  return encoded;\n}\n/** @internal */\n\n\nfunction decodeSetArray(setValues, values) {\n  const result = new Array(values.length);\n\n  for (let i = 0; i < values.length; i++) {\n    const key = values[i];\n\n    if (isUndefined(setValues[key])) {\n      throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n    }\n\n    result[i] = key;\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSetNumber(setValues, _value) {\n  const bn = bnToBn(_value);\n  const keys = Object.keys(setValues);\n  const result = [];\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n\n    if (bn.and(bnToBn(setValues[key])).eq(bnToBn(setValues[key]))) {\n      result.push(key);\n    }\n  }\n\n  const computed = encodeSet(setValues, result);\n\n  if (!bn.eq(computed)) {\n    throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSet(setValues, value = 0, bitLength) {\n  if (bitLength % 8 !== 0) {\n    throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);\n  }\n\n  const byteLength = bitLength / 8;\n\n  if (isU8a(value)) {\n    return value.length === 0 ? [] : decodeSetNumber(setValues, u8aToBn(value.subarray(0, byteLength), {\n      isLe: true\n    }));\n  } else if (isString(value)) {\n    return decodeSet(setValues, u8aToU8a(value), byteLength);\n  } else if (value instanceof Set || Array.isArray(value)) {\n    const input = Array.isArray(value) ? value : [...value.values()];\n    return decodeSetArray(setValues, input);\n  }\n\n  return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\n\n\nexport class CodecSet extends Set {\n  #allowed;\n  #byteLength;\n\n  constructor(registry, setValues, value, bitLength = 8) {\n    super(decodeSet(setValues, value, bitLength));\n    this.registry = registry;\n    this.#allowed = setValues;\n    this.#byteLength = bitLength / 8;\n  }\n\n  static with(values, bitLength) {\n    const keys = Object.keys(values);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      isKeys[i] = `is${stringPascalCase(keys[i])}`;\n    }\n\n    return class extends CodecSet {\n      constructor(registry, value) {\n        super(registry, values, value, bitLength);\n        objectProperties(this, isKeys, (_, i) => this.strings.includes(keys[i]));\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.#byteLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description true is the Set contains no values\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()];\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  get valueEncoded() {\n    return encodeSet(this.#allowed, this.strings);\n  }\n  /**\n   * @description adds a value to the Set (extended to allow for validity checking)\n   */\n\n\n  add = key => {\n    // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n    // we have the isUndefined(this._setValues) in here as well, add is used internally\n    // in the Set constructor (so it is undefined at this point, and should allow)\n    if (this.#allowed && isUndefined(this.#allowed[key])) {\n      throw new Error(`Set: Invalid key '${key}' on add`);\n    }\n\n    super.add(key);\n    return this;\n  };\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n  eq(other) {\n    if (Array.isArray(other)) {\n      // we don't actually care about the order, sort the values\n      return compareArray(this.strings.sort(), other.sort());\n    } else if (other instanceof Set) {\n      return this.eq([...other.values()]);\n    } else if (isNumber(other) || isBn(other)) {\n      return this.valueEncoded.eq(bnToBn(other));\n    }\n\n    return false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.strings;\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  toNumber() {\n    return this.valueEncoded.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _set: this.#allowed\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return `[${this.strings.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this.valueEncoded, {\n      bitLength: this.#byteLength * 8,\n      isLe: true\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBoolean, isFunction, isHex, isObject, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareMap, decodeU8aStruct, mapToTypeMap, typesToMap } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/** @internal */\n\n\nfunction decodeStructFromObject(registry, [Types, keys], value, jsonMap) {\n  let jsonObj;\n  const typeofArray = Array.isArray(value);\n  const typeofMap = value instanceof Map;\n\n  if (!typeofArray && !typeofMap && !isObject(value)) {\n    throw new Error(`Struct: Cannot decode value ${stringify(value)} (typeof ${typeof value}), expected an input object, map or array`);\n  } else if (typeofArray && value.length !== keys.length) {\n    throw new Error(`Struct: Unable to map ${stringify(value)} array to object with known keys ${keys.join(', ')}`);\n  }\n\n  const raw = new Array(keys.length);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const jsonKey = jsonMap.get(key) || key;\n    const Type = Types[i];\n    let assign;\n\n    try {\n      if (typeofArray) {\n        assign = value[i];\n      } else if (typeofMap) {\n        assign = jsonKey && value.get(jsonKey);\n      } else {\n        assign = jsonKey && value[jsonKey];\n\n        if (isUndefined(assign)) {\n          if (isUndefined(jsonObj)) {\n            const entries = Object.entries(value);\n            jsonObj = {};\n\n            for (let e = 0; e < entries.length; e++) {\n              jsonObj[stringCamelCase(entries[e][0])] = entries[e][1];\n            }\n          }\n\n          assign = jsonKey && jsonObj[jsonKey];\n        }\n      }\n\n      raw[i] = [key, assign instanceof Type ? assign : new Type(registry, assign)];\n    } catch (error) {\n      let type = Type.name;\n\n      try {\n        type = new Type(registry).toRawType();\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n    }\n  }\n\n  return [raw, 0];\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\n\n\nexport class Struct extends Map {\n  #jsonMap;\n  #Types;\n\n  constructor(registry, Types, value, jsonMap = new Map(), {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const typeMap = definition || setDefinition(mapToTypeMap(registry, Types));\n    const [decoded, decodedLength] = isU8a(value) || isHex(value) ? decodeU8aStruct(registry, new Array(typeMap[0].length), u8aToU8a(value), typeMap) : value instanceof Struct ? [value, 0] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);\n    super(decoded);\n    this.initialU8aLength = decodedLength;\n    this.registry = registry;\n    this.#jsonMap = jsonMap;\n    this.#Types = typeMap;\n  }\n\n  static with(Types, jsonMap) {\n    const keys = Object.keys(Types);\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Struct {\n      constructor(registry, value) {\n        super(registry, Types, value, jsonMap, {\n          definition,\n          setDefinition\n        });\n        objectProperties(this, keys, k => this.get(k));\n      }\n\n    };\n  }\n  /**\n   * @description The available keys for this struct\n   */\n\n\n  get defKeys() {\n    return this.#Types[1];\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    for (const v of this.values()) {\n      if (!v.isEmpty) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @description Returns the Type description of the structure\n   */\n\n\n  get Type() {\n    const result = {};\n    const [Types, keys] = this.#Types;\n\n    for (let i = 0; i < keys.length; i++) {\n      result[keys[i]] = new Types[i](this.registry).toRawType();\n    }\n\n    return result;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (const v of this.values()) {\n      total += v.encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a specific names entry in the structure\n   * @param name The name of the entry to retrieve\n   */\n\n\n  get(name) {\n    return super.get(name);\n  }\n  /**\n   * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n   */\n\n\n  getAtIndex(index) {\n    return this.toArray()[index];\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect(isBare) {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push({ ...v.inspect(!isBare || isBoolean(isBare) ? isBare : isBare[k]),\n        name: stringCamelCase(k)\n      });\n    }\n\n    return {\n      inner\n    };\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return [...this.values()];\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k] = v && v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      const jsonKey = this.#jsonMap.get(k) || k;\n      json[jsonKey] = v && v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify(typesToMap(this.registry, this.#Types));\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = [];\n\n    for (const [k, v] of this.entries()) {\n      if (v && isFunction(v.toU8a)) {\n        encoded.push(v.toU8a(!isBare || isBoolean(isBare) ? isBare : isBare[k]));\n      }\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactFromU8aLim, compactToU8a, hexToU8a, isHex, isString, isU8a, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { Raw } from \"./Raw.js\";\nconst MAX_LENGTH = 128 * 1024;\n/** @internal */\n\nfunction decodeText(value) {\n  if (isU8a(value)) {\n    if (!value.length) {\n      return ['', 0];\n    } // for Raw, the internal buffer does not have an internal length\n    // (the same applies in e.g. Bytes, where length is added at encoding-time)\n\n\n    if (value instanceof Raw) {\n      return [u8aToString(value), 0];\n    }\n\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + length;\n\n    if (length > MAX_LENGTH) {\n      throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    } else if (total > value.length) {\n      throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n\n    return [u8aToString(value.subarray(offset, total)), total];\n  } else if (isHex(value)) {\n    return [u8aToString(hexToU8a(value)), 0];\n  }\n\n  return [value ? value.toString() : '', 0];\n}\n/**\n * @name Text\n * @description\n * This is a string wrapper, along with the length. It is used both for strings as well\n * as items such as documentation. It simply extends the standard JS `String` built-in\n * object, inheriting all methods exposed from `String`.\n * @noInheritDoc\n */\n\n\nexport class Text extends String {\n  #override = null;\n\n  constructor(registry, value) {\n    const [str, decodedLength] = decodeText(value);\n    super(str);\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return isString(other) ? this.toString() === other.toString() : false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = stringToU8a(super.toString());\n    return {\n      outer: value.length ? [compactToU8a(value.length), value] : [compactToU8a(value.length)]\n    };\n  }\n  /**\n   * @description Set an override value for this\n   */\n\n\n  setOverride(override) {\n    this.#override = override;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // like with Vec<u8>, when we are encoding to hex, we don't actually add\n    // the length prefix (it is already implied by the actual string length)\n    return u8aToHex(this.toU8a(true));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Text';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#override || super.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    // NOTE Here we use the super toString (we are not taking overrides into account,\n    // rather encoding the original value the string was constructed with)\n    const encoded = stringToU8a(super.toString());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i128\n * @description\n * A 128-bit signed integer\n */\n\nexport class i128 extends Int.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i16\n * @description\n * A 16-bit signed integer\n */\n\nexport class i16 extends Int.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i256\n * @description\n * A 256-bit signed integer\n */\n\nexport class i256 extends Int.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i32\n * @description\n * A 32-bit signed integer\n */\n\nexport class i32 extends Int.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i64\n * @description\n * A 64-bit signed integer\n */\n\nexport class i64 extends Int.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i64';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i8\n * @description\n * An 8-bit signed integer\n */\n\nexport class i8 extends Int.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u128\n * @description\n * A 128-bit unsigned integer\n */\n\nexport class u128 extends UInt.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u16\n * @description\n * A 16-bit unsigned integer\n */\n\nexport class u16 extends UInt.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u256\n * @description\n * A 256-bit unsigned integer\n */\n\nexport class u256 extends UInt.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u32\n * @description\n * A 32-bit unsigned integer\n */\n\nexport class u32 extends UInt.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u64\n * @description\n * A 64-bit unsigned integer\n */\n\nexport class u64 extends UInt.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u64';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u8\n * @description\n * An 8-bit unsigned integer\n */\n\nexport class u8 extends UInt.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from \"./U32.js\";\n/**\n * @name USize\n * @description\n * A System default unsigned number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it created consensus mismatches.\n */\n\nexport class usize extends u32 {\n  constructor(registry, value) {\n    super(registry, value);\n    throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\"; // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Codec[] that the first has to be as well\n\nexport function compareArray(a, b) {\n  if (Array.isArray(b)) {\n    return a.length === b.length && isUndefined(a.find((v, index) => hasEq(v) ? !v.eq(b[index]) : v !== b[index]));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\";\n\nfunction hasMismatch(a, b) {\n  return isUndefined(a) || (hasEq(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => notEntry(e) || hasMismatch(a.get(e[0]), e[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nexport function compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if (isObject(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject } from '@polkadot/util';\n\nfunction compareSetArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => !a.has(e));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Set<string, Codec> that the first has to be as well\n\n\nexport function compareSet(a, b) {\n  if (Array.isArray(b)) {\n    return compareSetArray(a, b);\n  } else if (b instanceof Set) {\n    return compareSetArray(a, [...b.values()]);\n  } else if (isObject(b)) {\n    return compareSetArray(a, Object.values(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\n/** @internal */\n\nfunction formatFailure(registry, {\n  message\n}, u8a, i, count, Type, key) {\n  let type = '';\n\n  try {\n    type = `: ${new Type(registry).toRawType()}`;\n  } catch {// ignore\n  }\n\n  return `decodeU8a: failed at ${u8aToHex(u8a.subarray(0, 16))}…${key ? ` on ${key}` : ''} (index ${i}/${count})${type}:: ${message}`;\n}\n/**\n * @internal\n *\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param result - The result array (will be returned with values pushed)\n * @param types - The array of CodecClass to decode the U8a against.\n */\n\n\nexport function decodeU8a(registry, result, u8a, [Types, keys]) {\n  const count = result.length;\n  let offset = 0;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Types[i](registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = value;\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n  }\n\n  return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\n\nexport function decodeU8aStruct(registry, result, u8a, [Types, keys]) {\n  const count = result.length;\n  let offset = 0;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Types[i](registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = [keys[i], value];\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n  }\n\n  return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\n\nexport function decodeU8aVec(registry, result, u8a, startAt, Type) {\n  const count = result.length;\n  let offset = startAt;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Type(registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = value;\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Type));\n  }\n\n  return [offset, offset - startAt];\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { typeToConstructor } from \"./typeToConstructor.js\";\n/**\n * @description takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`\n */\n\nexport function mapToTypeMap(registry, input) {\n  const entries = Object.entries(input);\n  const count = entries.length;\n  const output = [new Array(count), new Array(count)];\n\n  for (let i = 0; i < count; i++) {\n    output[1][i] = entries[i][0];\n    output[0][i] = typeToConstructor(registry, entries[i][1]);\n  }\n\n  return output;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];\nconst ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);\nconst BOX_PRECEDING = ['<', '(', '[', '\"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple\n\nconst mappings = [// alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport\nalias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false), alias('VecDeque<', 'Vec<', false), // <T::Balance as HasCompact>\ncleanupCompact(), // Change BoundedVec<Type, Size> to Vec<Type>\nremoveExtensions('Bounded', true), // Change WeakVec<Type> to Vec<Type>\nremoveExtensions('Weak', false), // Remove all the trait prefixes\nremoveTraits(), // remove PairOf<T> -> (T, T)\nremovePairOf(), // remove boxing, `Box<Proposal>` -> `Proposal`\nremoveWrap('Box<'), // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`\nremoveGenerics(), // alias String -> Text (compat with jsonrpc methods)\nalias('String', 'Text'), // alias Vec<u8> -> Bytes\nalias('Vec<u8>', 'Bytes'), alias('&\\\\[u8\\\\]', 'Bytes'), alias(\"&'static\\\\[u8\\\\]\", 'Bytes'), // alias RawAddress -> Address\nalias('RawAddress', 'Address'), // lookups, mapped to Address/AccountId as appropriate in runtime\nalias('Lookup::Source', 'LookupSource'), alias('Lookup::Target', 'LookupTarget'), // HACK duplication between contracts & primitives, however contracts prefixed with exec\nalias('exec::StorageKey', 'ContractStorageKey'), // flattens tuples with one value, `(AccountId)` -> `AccountId`\nflattenSingleTuple(), // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal\nremoveColons(), // remove all trailing spaces - this should always be the last\ntrim()]; // given a string, trim it\n\nexport function trim() {\n  return value => value.trim();\n} // given a starting index, find the closing >\n\nexport function findClosing(value, start) {\n  let depth = 0;\n\n  for (let index = start; index < value.length; index++) {\n    if (value[index] === '>') {\n      if (!depth) {\n        return index;\n      }\n\n      depth--;\n    } else if (value[index] === '<') {\n      depth++;\n    }\n  }\n\n  throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);\n}\nexport function alias(src, dest, withChecks = true) {\n  const from = new RegExp(`(^${src}|${BOX_PRECEDING.map(box => `\\\\${box}${src}`).join('|')})`, 'g');\n\n  const to = src => {\n    from.lastIndex = 0;\n    return withChecks && BOX_PRECEDING.includes(src[0]) ? `${src[0]}${dest}` : dest;\n  };\n\n  return value => value.replace(from, to);\n}\nexport function cleanupCompact() {\n  return value => {\n    if (value.includes(' as HasCompact')) {\n      for (let index = 0; index < value.length; index++) {\n        if (value[index] === '<') {\n          const end = findClosing(value, index + 1) - 14;\n\n          if (value.substring(end, end + 14) === ' as HasCompact') {\n            value = `Compact<${value.substring(index + 1, end)}>`;\n          }\n        }\n      }\n    }\n\n    return value;\n  };\n}\nexport function flattenSingleTuple() {\n  const from1 = /,\\)/g;\n  const from2 = /\\(([^,]+)\\)/;\n  return value => {\n    from1.lastIndex = 0;\n    return value // tuples may have trailing commas, e.g. (u32, BlockNumber, )\n    .replace(from1, ')') // change (u32) -> u32\n    .replace(from2, '$1');\n  };\n}\n\nfunction replaceTagWith(value, matcher, replacer) {\n  let index = -1;\n\n  while (true) {\n    index = value.indexOf(matcher, index + 1);\n\n    if (index === -1) {\n      return value;\n    }\n\n    const start = index + matcher.length;\n    const end = findClosing(value, start);\n    value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;\n  }\n} // remove the Bounded* or Weak* wrappers\n\n\nexport function removeExtensions(type, isSized) {\n  return value => {\n    for (let i = 0; i < BOUNDED.length; i++) {\n      const tag = BOUNDED[i];\n      value = replaceTagWith(value, `${type}${tag}<`, v => {\n        const parts = v.split(',').map(s => s.trim()).filter(s => s);\n\n        if (isSized) {\n          parts.pop();\n        }\n\n        return `${tag}<${parts.join(',')}>`;\n      });\n    }\n\n    return value;\n  };\n}\nexport function removeColons() {\n  return value => {\n    let index = 0;\n\n    while (index !== -1) {\n      index = value.indexOf('::');\n\n      if (index === 0) {\n        value = value.substring(2);\n      } else if (index !== -1) {\n        let start = index;\n\n        while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {\n          start--;\n        }\n\n        value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;\n      }\n    }\n\n    return value;\n  };\n}\nexport function removeGenerics() {\n  return value => {\n    for (let index = 0; index < value.length; index++) {\n      if (value[index] === '<') {\n        // check against the allowed wrappers, be it Vec<..>, Option<...> ...\n        const box = ALLOWED_BOXES.find(box => {\n          const start = index - box.length;\n          return start >= 0 && value.substring(start, index) === box && ( // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>\n          start === 0 || BOX_PRECEDING.includes(value[start - 1]));\n        }); // we have not found anything, unwrap generic innards\n\n        if (!box) {\n          const end = findClosing(value, index + 1);\n          value = `${value.substring(0, index)}${value.substring(end + 1)}`;\n        }\n      }\n    }\n\n    return value;\n  };\n} // remove the PairOf wrappers\n\nexport function removePairOf() {\n  const replacer = v => `(${v},${v})`;\n\n  return value => replaceTagWith(value, 'PairOf<', replacer);\n} // remove the type traits\n\nexport function removeTraits() {\n  const from1 = /\\s/g;\n  const from2 = /(T|Self)::/g;\n  const from3 = /<(T|Self)asTrait>::/g;\n  const from4 = /<Tas[a-z]+::Trait>::/g;\n  const from5 = /<LookupasStaticLookup>/g;\n  const from6 = /::Type/g;\n  return value => {\n    from1.lastIndex = 0;\n    from2.lastIndex = 0;\n    from3.lastIndex = 0;\n    from4.lastIndex = 0;\n    from5.lastIndex = 0;\n    from6.lastIndex = 0;\n    return value // remove all whitespaces\n    .replace(from1, '') // anything `T::<type>` to end up as `<type>`\n    .replace(from2, '') // replace `<T as Trait>::` (whitespaces were removed above)\n    .replace(from3, '') // replace `<T as something::Trait>::` (whitespaces were removed above)\n    .replace(from4, '') // replace <Lookup as StaticLookup>\n    .replace(from5, 'Lookup') // replace `<...>::Type`\n    .replace(from6, '');\n  };\n} // remove wrapping values, i.e. Box<Proposal> -> Proposal\n\nexport function removeWrap(check) {\n  const replacer = v => v;\n\n  return value => replaceTagWith(value, check, replacer);\n}\nconst sanitizeMap = new Map();\nexport function sanitize(value) {\n  const startValue = value.toString();\n  const memoized = sanitizeMap.get(startValue);\n\n  if (memoized) {\n    return memoized;\n  }\n\n  let result = startValue;\n\n  for (let i = 0; i < mappings.length; i++) {\n    result = mappings[i](result);\n  }\n\n  sanitizeMap.set(startValue, result);\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn, isBigInt, isBn, isFunction, isNumber, stringify } from '@polkadot/util';\n\n/** @internal **/\nfunction isArrayLike(arg) {\n  return arg instanceof Uint8Array || Array.isArray(arg);\n}\n/** @internal **/\n\n\nfunction isCodec(arg) {\n  return isFunction(arg && arg.toU8a);\n}\n/** @internal **/\n\n\nfunction isEnum(arg) {\n  return isCodec(arg) && isNumber(arg.index) && isCodec(arg.value);\n}\n/** @internal */\n\n\nfunction isNumberLike(arg) {\n  return isNumber(arg) || isBn(arg) || isBigInt(arg);\n}\n/** @internal */\n\n\nfunction sortArray(a, b) {\n  // Vec, Tuple, Bytes etc.\n  let sortRes = 0;\n  const minLen = Math.min(a.length, b.length);\n\n  for (let i = 0; i < minLen; ++i) {\n    sortRes = sortAsc(a[i], b[i]);\n\n    if (sortRes !== 0) {\n      return sortRes;\n    }\n  }\n\n  return a.length - b.length;\n}\n/**\n* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)\n*/\n\n\nexport function sortAsc(a, b) {\n  if (isNumberLike(a) && isNumberLike(b)) {\n    return bnToBn(a).cmp(bnToBn(b));\n  } else if (a instanceof Map && b instanceof Map) {\n    return sortAsc(Array.from(a.values()), Array.from(b.values()));\n  } else if (isEnum(a) && isEnum(b)) {\n    return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);\n  } else if (isArrayLike(a) && isArrayLike(b)) {\n    return sortArray(a, b);\n  } else if (isCodec(a) && isCodec(b)) {\n    // Text, Bool etc.\n    return sortAsc(a.toU8a(true), b.toU8a(true));\n  }\n\n  throw new Error(`Attempting to sort unrecognized values: ${stringify(a)} (typeof ${typeof a}) <-> ${stringify(b)} (typeof ${typeof b})`);\n}\nexport function sortSet(set) {\n  return new Set(Array.from(set).sort(sortAsc));\n}\nexport function sortMap(map) {\n  return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString } from '@polkadot/util';\nexport function typeToConstructor(registry, type) {\n  return isString(type) ? registry.createClassUnsafe(type) : type;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function typesToMap(registry, [Types, keys]) {\n  const result = {};\n\n  for (let i = 0; i < keys.length; i++) {\n    result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from '@polkadot/util';\nexport function hasEq(o) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return isFunction(o.eq);\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BTreeMap, BTreeSet, Bytes, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Null, Option, Range, RangeInclusive, Result, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\nimport { isNumber, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { getTypeDef } from \"../util/getTypeDef.js\";\n\nfunction getTypeDefType({\n  lookupName,\n  type\n}) {\n  return lookupName || type;\n}\n\nfunction getSubDefArray(value) {\n  if (!Array.isArray(value.sub)) {\n    throw new Error(`Expected subtype as TypeDef[] in ${stringify(value)}`);\n  }\n\n  return value.sub;\n}\n\nfunction getSubDef(value) {\n  if (!value.sub || Array.isArray(value.sub)) {\n    throw new Error(`Expected subtype as TypeDef in ${stringify(value)}`);\n  }\n\n  return value.sub;\n}\n\nfunction getSubType(value) {\n  return getTypeDefType(getSubDef(value));\n} // create a maps of type string CodecClasss from the input\n\n\nfunction getTypeClassMap(value) {\n  const subs = getSubDefArray(value);\n  const map = {};\n\n  for (let i = 0; i < subs.length; i++) {\n    map[subs[i].name] = getTypeDefType(subs[i]);\n  }\n\n  return map;\n} // create an array of type string CodecClasss from the input\n\n\nfunction getTypeClassArray(value) {\n  return getSubDefArray(value).map(getTypeDefType);\n}\n\nfunction createInt(Clazz, {\n  displayName,\n  length\n}) {\n  if (!isNumber(length)) {\n    throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);\n  }\n\n  return Clazz.with(length, displayName);\n}\n\nfunction createHashMap(Clazz, value) {\n  const [keyType, valueType] = getTypeClassArray(value);\n  return Clazz.with(keyType, valueType);\n}\n\nfunction createWithSub(Clazz, value) {\n  return Clazz.with(getSubType(value));\n}\n\nconst infoMapping = {\n  [TypeDefInfo.BTreeMap]: (registry, value) => createHashMap(BTreeMap, value),\n  [TypeDefInfo.BTreeSet]: (registry, value) => createWithSub(BTreeSet, value),\n  [TypeDefInfo.Compact]: (registry, value) => createWithSub(Compact, value),\n  [TypeDefInfo.DoNotConstruct]: (registry, value) => DoNotConstruct.with(value.displayName || value.type),\n  [TypeDefInfo.Enum]: (registry, value) => {\n    const subs = getSubDefArray(value);\n    return Enum.with(subs.every(({\n      type\n    }) => type === 'Null') ? subs.reduce((out, {\n      index,\n      name\n    }, count) => {\n      out[name] = index || count;\n      return out;\n    }, {}) : getTypeClassMap(value));\n  },\n  [TypeDefInfo.HashMap]: (registry, value) => createHashMap(HashMap, value),\n  [TypeDefInfo.Int]: (registry, value) => createInt(Int, value),\n  // We have circular deps between Linkage & Struct\n  [TypeDefInfo.Linkage]: (registry, value) => {\n    const type = `Option<${getSubType(value)}>`; // eslint-disable-next-line sort-keys\n\n    const Clazz = Struct.with({\n      previous: type,\n      next: type\n    }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n    Clazz.prototype.toRawType = function () {\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n      return `Linkage<${this.next.toRawType(true)}>`;\n    };\n\n    return Clazz;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, _) => Null,\n  [TypeDefInfo.Option]: (registry, value) => {\n    if (!value.sub || Array.isArray(value.sub)) {\n      throw new Error('Expected type information for Option');\n    } // NOTE This is opt-in (unhandled), not by default\n    // if (value.sub.type === 'bool') {\n    //   return OptionBool;\n    // }\n\n\n    return createWithSub(Option, value);\n  },\n  [TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),\n  [TypeDefInfo.Range]: (registry, value) => createWithSub(Range, value),\n  [TypeDefInfo.RangeInclusive]: (registry, value) => createWithSub(RangeInclusive, value),\n  [TypeDefInfo.Result]: (registry, value) => {\n    const [Ok, Err] = getTypeClassArray(value); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return Result.with({\n      Err,\n      Ok\n    });\n  },\n  [TypeDefInfo.Set]: (registry, value) => CodecSet.with(getSubDefArray(value).reduce((result, {\n    index,\n    name\n  }) => {\n    result[name] = index;\n    return result;\n  }, {}), value.length),\n  [TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),\n  [TypeDefInfo.Struct]: (registry, value) => Struct.with(getTypeClassMap(value), value.alias),\n  [TypeDefInfo.Tuple]: (registry, value) => Tuple.with(getTypeClassArray(value)),\n  [TypeDefInfo.UInt]: (registry, value) => createInt(UInt, value),\n  [TypeDefInfo.Vec]: (registry, {\n    sub\n  }) => {\n    if (!sub || Array.isArray(sub)) {\n      throw new Error('Expected type information for vector');\n    }\n\n    return sub.type === 'u8' ? Bytes : Vec.with(getTypeDefType(sub));\n  },\n  [TypeDefInfo.VecFixed]: (registry, {\n    displayName,\n    length,\n    sub\n  }) => {\n    if (!isNumber(length) || !sub || Array.isArray(sub)) {\n      throw new Error('Expected length & type information for fixed vector');\n    }\n\n    return sub.type === 'u8' ? U8aFixed.with(length * 8, displayName) : VecFixed.with(getTypeDefType(sub), length);\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, value) => createWithSub(WrapperKeepOpaque, value),\n  [TypeDefInfo.WrapperOpaque]: (registry, value) => createWithSub(WrapperOpaque, value)\n};\nexport function constructTypeClass(registry, typeDef) {\n  try {\n    const Type = infoMapping[typeDef.info](registry, typeDef);\n\n    if (!Type) {\n      throw new Error('No class created');\n    } // don't clobber any existing\n\n\n    if (!Type.__fallbackType && typeDef.fallbackType) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore ...this is the only place we we actually assign this...\n      Type.__fallbackType = typeDef.fallbackType;\n    }\n\n    return Type;\n  } catch (error) {\n    throw new Error(`Unable to construct class from ${stringify(typeDef)}: ${error.message}`);\n  }\n} // Returns the type Class for construction\n\nexport function getTypeClass(registry, typeDef) {\n  return registry.getUnsafe(typeDef.type, false, typeDef);\n}\nexport function createClassUnsafe(registry, type) {\n  return (// just retrieve via name, no creation via typeDef\n    registry.getUnsafe(type) || // we don't have an existing type, create the class via typeDef\n    getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : getTypeDef(type))\n  );\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option } from '@polkadot/types-codec';\nimport { isHex, isU8a, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { createClassUnsafe } from \"./class.js\"; // With isPedantic, actually check that the encoding matches that supplied. This\n// is much slower, but verifies that we have the correct types defined\n\nfunction checkInstance(created, matcher) {\n  const u8a = created.toU8a();\n  const rawType = created.toRawType();\n  const isOk = // full match, all ok\n  u8aEq(u8a, matcher) || // on a length-prefixed type, just check the actual length\n  ['Bytes', 'Text', 'Type'].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...\n  created.isEmpty && matcher.every(v => !v);\n\n  if (!isOk) {\n    throw new Error(`${rawType}:: Decoded input doesn't match input, received ${u8aToHex(matcher, 512)} (${matcher.length} bytes), created ${u8aToHex(u8a, 512)} (${u8a.length} bytes)`);\n  }\n}\n\nfunction checkPedantic(created, [value]) {\n  if (isU8a(value)) {\n    checkInstance(created, value);\n  } else if (isHex(value)) {\n    checkInstance(created, u8aToU8a(value));\n  }\n} // Initializes a type with a value. This also checks for fallbacks and in the cases\n// where isPedantic is specified (storage decoding), also check the format/structure\n\n\nfunction initType(registry, Type, params = [], {\n  blockHash,\n  isOptional,\n  isPedantic\n} = {}) {\n  const created = new (isOptional ? Option.with(Type) : Type)(registry, ...params);\n  isPedantic && checkPedantic(created, params);\n\n  if (blockHash) {\n    created.createdAtHash = createTypeUnsafe(registry, 'Hash', [blockHash]);\n  }\n\n  return created;\n} // An unsafe version of the `createType` below. It's unsafe because the `type`\n// argument here can be any string, which, when it cannot parse, will yield a\n// runtime error.\n\n\nexport function createTypeUnsafe(registry, type, params = [], options = {}) {\n  let Clazz = null;\n  let firstError = null;\n\n  try {\n    Clazz = createClassUnsafe(registry, type);\n    return initType(registry, Clazz, params, options);\n  } catch (error) {\n    firstError = new Error(`createType(${type}):: ${error.message}`);\n  }\n\n  if (Clazz && Clazz.__fallbackType) {\n    try {\n      Clazz = createClassUnsafe(registry, Clazz.__fallbackType);\n      return initType(registry, Clazz, params, options);\n    } catch {// swallow, we will throw the first error again\n    }\n  }\n\n  throw firstError;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport let TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 3] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 4] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 5] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 6] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 7] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 8] = \"Null\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 9] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 10] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Range\"] = 11] = \"Range\";\n  TypeDefInfo[TypeDefInfo[\"RangeInclusive\"] = 12] = \"RangeInclusive\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 13] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 14] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Si\"] = 15] = \"Si\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 16] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 17] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 18] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 19] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 20] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"WrapperKeepOpaque\"] = 21] = \"WrapperKeepOpaque\";\n  TypeDefInfo[TypeDefInfo[\"WrapperOpaque\"] = 22] = \"WrapperOpaque\";\n})(TypeDefInfo || (TypeDefInfo = {}));","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber, isUndefined, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\n\nconst stringIdentity = value => value.toString();\n\nconst INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];\nexport function paramsNotation(outer, inner, transform = stringIdentity) {\n  return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>` : ''}`;\n}\n\nfunction encodeWithParams(registry, typeDef, outer) {\n  const {\n    info,\n    sub\n  } = typeDef;\n\n  switch (info) {\n    case TypeDefInfo.BTreeMap:\n    case TypeDefInfo.BTreeSet:\n    case TypeDefInfo.Compact:\n    case TypeDefInfo.HashMap:\n    case TypeDefInfo.Linkage:\n    case TypeDefInfo.Option:\n    case TypeDefInfo.Range:\n    case TypeDefInfo.RangeInclusive:\n    case TypeDefInfo.Result:\n    case TypeDefInfo.Vec:\n    case TypeDefInfo.WrapperKeepOpaque:\n    case TypeDefInfo.WrapperOpaque:\n      return paramsNotation(outer, sub, p => encodeTypeDef(registry, p));\n  }\n\n  throw new Error(`Unable to encode ${stringify(typeDef)} with params`);\n}\n\nfunction encodeSubTypes(registry, sub, asEnum, extra) {\n  const names = sub.map(({\n    name\n  }) => name);\n\n  if (!names.every(n => !!n)) {\n    throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);\n  }\n\n  const inner = objectSpread({}, extra);\n\n  for (let i = 0; i < sub.length; i++) {\n    const def = sub[i];\n    inner[def.name] = encodeTypeDef(registry, def);\n  }\n\n  return stringify(asEnum ? {\n    _enum: inner\n  } : inner);\n} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result\n// in a compile-time error with the missing index)\n\n\nconst encoders = {\n  [TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),\n  [TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),\n  [TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),\n  [TypeDefInfo.DoNotConstruct]: (registry, {\n    displayName,\n    lookupIndex,\n    lookupName\n  }) => `DoNotConstruct<${lookupName || displayName || (isUndefined(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,\n  [TypeDefInfo.Enum]: (registry, {\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Enum type');\n    } // c-like enums have all Null entries\n    // TODO We need to take the disciminant into account and auto-add empty entries\n\n\n    return sub.every(({\n      type\n    }) => type === 'Null') ? stringify({\n      _enum: sub.map(({\n        name\n      }, index) => `${name || `Empty${index}`}`)\n    }) : encodeSubTypes(registry, sub, true);\n  },\n  [TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),\n  [TypeDefInfo.Int]: (registry, {\n    length = 32\n  }) => `Int<${length}>`,\n  [TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, typeDef) => 'Null',\n  [TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Plain]: (registry, {\n    displayName,\n    type\n  }) => displayName || type,\n  [TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),\n  [TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),\n  [TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Set]: (registry, {\n    length = 8,\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Set type');\n    }\n\n    return stringify({\n      _set: sub.reduce((all, {\n        index,\n        name\n      }, count) => objectSpread(all, {\n        [`${name || `Unknown${index || count}`}`]: index || count\n      }), {\n        _bitLength: length || 8\n      })\n    });\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Si]: (registry, {\n    lookupName,\n    type\n  }) => lookupName || type,\n  [TypeDefInfo.Struct]: (registry, {\n    alias,\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Struct type');\n    }\n\n    return encodeSubTypes(registry, sub, false, alias ? {\n      _alias: [...alias.entries()].reduce((all, [k, v]) => objectSpread(all, {\n        [k]: v\n      }), {})\n    } : {});\n  },\n  [TypeDefInfo.Tuple]: (registry, {\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Tuple type');\n    }\n\n    return `(${sub.map(type => encodeTypeDef(registry, type)).join(',')})`;\n  },\n  [TypeDefInfo.UInt]: (registry, {\n    length = 32\n  }) => `UInt<${length}>`,\n  [TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),\n  [TypeDefInfo.VecFixed]: (registry, {\n    length,\n    sub\n  }) => {\n    if (!isNumber(length) || !sub || Array.isArray(sub)) {\n      throw new Error('Unable to encode VecFixed type');\n    }\n\n    return `[${sub.type};${length}]`;\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),\n  [TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')\n};\n\nfunction encodeType(registry, typeDef, withLookup = true) {\n  return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);\n}\n\nexport function encodeTypeDef(registry, typeDef) {\n  // In the case of contracts we do have the unfortunate situation where the displayName would\n  // refer to \"Option\" when it is an option. For these, string it out, only using when actually\n  // not a top-level element to be used\n  return typeDef.displayName && !INFO_WRAP.some(i => typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);\n}\nexport function withTypeString(registry, typeDef) {\n  return objectSpread({}, typeDef, {\n    type: encodeType(registry, typeDef, false)\n  });\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize } from '@polkadot/types-codec';\nimport { isNumber, isString, objectSpread } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { typeSplit } from \"./typeSplit.js\";\nconst KNOWN_INTERNALS = ['_alias', '_fallback'];\n\nfunction getTypeString(typeOrObj) {\n  return isString(typeOrObj) ? typeOrObj.toString() : JSON.stringify(typeOrObj);\n}\n\nfunction isRustEnum(details) {\n  const values = Object.values(details);\n\n  if (values.some(v => isNumber(v))) {\n    if (!values.every(v => isNumber(v) && v >= 0 && v <= 255)) {\n      throw new Error('Invalid number-indexed enum definition');\n    }\n\n    return false;\n  }\n\n  return true;\n} // decode an enum of either of the following forms\n//  { _enum: ['A', 'B', 'C'] }\n//  { _enum: { A: AccountId, B: Balance, C: u32 } }\n//  { _enum: { A: 1, B: 2 } }\n\n\nfunction _decodeEnum(value, details, count, fallbackType) {\n  value.info = TypeDefInfo.Enum;\n  value.fallbackType = fallbackType; // not as pretty, but remain compatible with oo7 for both struct and Array types\n\n  if (Array.isArray(details)) {\n    value.sub = details.map((name, index) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  } else if (isRustEnum(details)) {\n    value.sub = Object.entries(details).map(([name, typeOrObj], index) => objectSpread({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {\n      name\n    }, count), {\n      index\n    }));\n  } else {\n    value.sub = Object.entries(details).map(([name, index]) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  }\n\n  return value;\n} // decode a set of the form\n//   { _set: { A: 0b0001, B: 0b0010, C: 0b0100 } }\n\n\nfunction _decodeSet(value, details, fallbackType) {\n  value.info = TypeDefInfo.Set;\n  value.fallbackType = fallbackType;\n  value.length = details._bitLength;\n  value.sub = Object.entries(details).filter(([name]) => !name.startsWith('_')).map(([name, index]) => ({\n    index,\n    info: TypeDefInfo.Plain,\n    name,\n    type: 'Null'\n  }));\n  return value;\n} // decode a struct, set or enum\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeStruct(value, type, _, count) {\n  const parsed = JSON.parse(type);\n  const keys = Object.keys(parsed);\n\n  if (keys.includes('_enum')) {\n    return _decodeEnum(value, parsed._enum, count, parsed._fallback);\n  } else if (keys.includes('_set')) {\n    return _decodeSet(value, parsed._set, parsed._fallback);\n  }\n\n  value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;\n  value.fallbackType = parsed._fallback;\n  value.sub = keys.filter(name => !KNOWN_INTERNALS.includes(name)).map(name => getTypeDef(getTypeString(parsed[name]), {\n    name\n  }, count));\n  return value;\n} // decode a fixed vector, e.g. [u8;32]\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeFixedVec(value, type, _, count) {\n  const max = type.length - 1;\n  let index = -1;\n  let inner = 0;\n\n  for (let i = 1; i < max && index === -1; i++) {\n    switch (type[i]) {\n      case ';':\n        {\n          if (inner === 0) {\n            index = i;\n          }\n\n          break;\n        }\n\n      case '[':\n      case '(':\n      case '<':\n        inner++;\n        break;\n\n      case ']':\n      case ')':\n      case '>':\n        inner--;\n        break;\n    }\n  }\n\n  if (index === -1) {\n    throw new Error(`${type}: Unable to extract location of ';'`);\n  }\n\n  const vecType = type.substring(1, index);\n  const [strLength, displayName] = type.substring(index + 1, max).split(';');\n  const length = parseInt(strLength.trim(), 10);\n\n  if (length > 2048) {\n    throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);\n  }\n\n  value.displayName = displayName;\n  value.length = length;\n  value.sub = getTypeDef(vecType, {}, count);\n  return value;\n} // decode a tuple\n\n\nfunction _decodeTuple(value, _, subType, count) {\n  value.sub = subType.length === 0 ? [] : typeSplit(subType).map(inner => getTypeDef(inner, {}, count));\n  return value;\n} // decode a Int/UInt<bitLength[, name]>\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeAnyInt(value, type, _, clazz) {\n  const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');\n  const length = parseInt(strLength.trim(), 10);\n\n  if (length > 8192 || length % 8) {\n    throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);\n  }\n\n  value.displayName = displayName;\n  value.length = length;\n  return value;\n}\n\nfunction _decodeInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'Int');\n}\n\nfunction _decodeUInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'UInt');\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeDoNotConstruct(value, type, _) {\n  const NAME_LENGTH = 'DoNotConstruct'.length;\n  value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);\n  return value;\n}\n\nfunction hasWrapper(type, [start, end]) {\n  return type.substring(0, start.length) === start && type.slice(-1 * end.length) === end;\n}\n\nconst nestedExtraction = [['[', ']', TypeDefInfo.VecFixed, _decodeFixedVec], ['{', '}', TypeDefInfo.Struct, _decodeStruct], ['(', ')', TypeDefInfo.Tuple, _decodeTuple], // the inner for these are the same as tuple, multiple values\n['BTreeMap<', '>', TypeDefInfo.BTreeMap, _decodeTuple], ['HashMap<', '>', TypeDefInfo.HashMap, _decodeTuple], ['Int<', '>', TypeDefInfo.Int, _decodeInt], ['Result<', '>', TypeDefInfo.Result, _decodeTuple], ['UInt<', '>', TypeDefInfo.UInt, _decodeUInt], ['DoNotConstruct<', '>', TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]];\nconst wrappedExtraction = [['BTreeSet<', '>', TypeDefInfo.BTreeSet], ['Compact<', '>', TypeDefInfo.Compact], ['Linkage<', '>', TypeDefInfo.Linkage], ['Option<', '>', TypeDefInfo.Option], ['Range<', '>', TypeDefInfo.Range], ['RangeInclusive<', '>', TypeDefInfo.RangeInclusive], ['Vec<', '>', TypeDefInfo.Vec], ['WrapperKeepOpaque<', '>', TypeDefInfo.WrapperKeepOpaque], ['WrapperOpaque<', '>', TypeDefInfo.WrapperOpaque]];\n\nfunction extractSubType(type, [start, end]) {\n  return type.substring(start.length, type.length - end.length);\n}\n\nexport function getTypeDef(_type, {\n  displayName,\n  name\n} = {}, count = 0) {\n  // create the type via Type, allowing types to be sanitized\n  const type = sanitize(_type);\n  const value = {\n    displayName,\n    info: TypeDefInfo.Plain,\n    name,\n    type\n  };\n\n  if (++count > 64) {\n    throw new Error('getTypeDef: Maximum nested limit reached');\n  }\n\n  const nested = nestedExtraction.find(nested => hasWrapper(type, nested));\n\n  if (nested) {\n    value.info = nested[2];\n    return nested[3](value, type, extractSubType(type, nested), count);\n  }\n\n  const wrapped = wrappedExtraction.find(wrapped => hasWrapper(type, wrapped));\n\n  if (wrapped) {\n    value.info = wrapped[2];\n    value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);\n  }\n\n  return value;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// safely split a string on ', ' while taking care of any nested occurences\nexport function typeSplit(type) {\n  const result = []; // these are the depths of the various tokens: <, [, {, (\n\n  let c = 0;\n  let f = 0;\n  let s = 0;\n  let t = 0; // current start position\n\n  let start = 0;\n\n  for (let i = 0; i < type.length; i++) {\n    switch (type[i]) {\n      // if we are not nested, add the type\n      case ',':\n        {\n          if (!(c || f || s || t)) {\n            result.push(type.substring(start, i).trim());\n            start = i + 1;\n          }\n\n          break;\n        }\n      // adjust compact/vec (and friends) depth\n\n      case '<':\n        c++;\n        break;\n\n      case '>':\n        c--;\n        break;\n      // adjust fixed vec depths\n\n      case '[':\n        f++;\n        break;\n\n      case ']':\n        f--;\n        break;\n      // adjust struct depth\n\n      case '{':\n        s++;\n        break;\n\n      case '}':\n        s--;\n        break;\n      // adjust tuple depth\n\n      case '(':\n        t++;\n        break;\n\n      case ')':\n        t--;\n        break;\n    }\n  } // ensure we have all the terminators taken care of\n\n\n  if (c || f || s || t) {\n    throw new Error(`Invalid definition (missing terminators) found in ${type}`);\n  } // the final leg of the journey\n\n\n  result.push(type.substring(start, type.length).trim());\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nexport function mapXcmTypes(version) {\n  return XCM_MAPPINGS.reduce((all, key) => objectSpread(all, {\n    [key]: `${key}${version}`\n  }), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { lazyMethod } from '@polkadot/util';\nexport function lazyVariants(lookup, {\n  type\n}, getName, creator) {\n  const result = {};\n  const variants = lookup.getSiType(type).def.asVariant.variants;\n\n  for (let i = 0; i < variants.length; i++) {\n    lazyMethod(result, variants[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { DoNotConstruct, Json, Raw } from '@polkadot/types-codec';\nimport { constructTypeClass, createClassUnsafe, createTypeUnsafe } from '@polkadot/types-create';\nimport { assertReturn, BN_ZERO, formatBalance, isFunction, isNumber, isString, isU8a, lazyMethod, logger, objectSpread, stringCamelCase, stringify } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { decorateConstants, filterCallsSome, filterEventsSome } from \"../metadata/decorate/index.js\";\nimport { createCallFunction } from \"../metadata/decorate/extrinsics/index.js\";\nimport { Metadata } from \"../metadata/Metadata.js\";\nimport { PortableRegistry } from \"../metadata/PortableRegistry/index.js\";\nimport { lazyVariants } from \"./lazy.js\";\nconst DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);\nconst l = logger('registry');\n\nfunction sortDecimalStrings(a, b) {\n  return parseInt(a, 10) - parseInt(b, 10);\n}\n\nfunction valueToString(v) {\n  return v.toString();\n}\n\nfunction getFieldArgs(lookup, fields) {\n  const args = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    args[i] = lookup.getTypeDef(fields[i].type).type;\n  }\n\n  return args;\n}\n\nfunction clearRecord(record) {\n  const keys = Object.keys(record);\n\n  for (let i = 0; i < keys.length; i++) {\n    delete record[keys[i]];\n  }\n}\n\nfunction getVariantStringIdx({\n  index\n}) {\n  return index.toString();\n} // create error mapping from metadata\n\n\nfunction injectErrors(_, {\n  lookup,\n  pallets\n}, version, result) {\n  clearRecord(result);\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      errors,\n      index,\n      name\n    } = pallets[i];\n\n    if (errors.isSome) {\n      const sectionName = stringCamelCase(name);\n      lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, errors.unwrap(), getVariantStringIdx, ({\n        docs,\n        fields,\n        index,\n        name\n      }) => ({\n        args: getFieldArgs(lookup, fields),\n        docs: docs.map(valueToString),\n        fields,\n        index: index.toNumber(),\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      })));\n    }\n  }\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterEventsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      events,\n      index,\n      name\n    } = filtered[i];\n    lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, events.unwrap(), getVariantStringIdx, variant => {\n      const meta = registry.createType('EventMetadataLatest', objectSpread({}, variant, {\n        args: getFieldArgs(lookup, variant.fields)\n      }));\n      return class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, meta, stringCamelCase(name), variant.name.toString());\n        }\n\n      };\n    }));\n  }\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterCallsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      calls,\n      index,\n      name\n    } = filtered[i];\n    const sectionIndex = version >= 12 ? index.toNumber() : i;\n    lazyMethod(result, sectionIndex, () => lazyVariants(lookup, calls.unwrap(), getVariantStringIdx, variant => createCallFunction(registry, lookup, variant, stringCamelCase(name), sectionIndex)));\n  }\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = constants.system && (constants.system.sS58Prefix || constants.system.ss58Prefix);\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createTypeUnsafe('ChainProperties', [{\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  }]);\n}\n\nexport class TypeRegistry {\n  #classes = new Map();\n  #definitions = new Map();\n  #firstCallIndex = null;\n  #lookup;\n  #metadata;\n  #metadataVersion = 0;\n  #metadataCalls = {};\n  #metadataErrors = {};\n  #metadataEvents = {};\n  #unknownTypes = new Map();\n  #chainProperties;\n  #hasher = blake2AsU8a;\n  #knownDefaults;\n  #knownDefinitions;\n  #knownTypes = {};\n  #signedExtensions = fallbackExtensions;\n  #userExtensions;\n\n  constructor(createdAtHash) {\n    this.#knownDefaults = objectSpread({\n      Json,\n      Metadata,\n      PortableRegistry,\n      Raw\n    }, baseTypes);\n    this.#knownDefinitions = definitions;\n    const allKnown = Object.values(this.#knownDefinitions);\n\n    for (let i = 0; i < allKnown.length; i++) {\n      this.register(allKnown[i].types);\n    }\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  get chainDecimals() {\n    var _this$chainProperties;\n\n    if ((_this$chainProperties = this.#chainProperties) !== null && _this$chainProperties !== void 0 && _this$chainProperties.tokenDecimals.isSome) {\n      const allDecimals = this.#chainProperties.tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _this$chainProperties2;\n\n    return (_this$chainProperties2 = this.#chainProperties) !== null && _this$chainProperties2 !== void 0 && _this$chainProperties2.ss58Format.isSome ? this.#chainProperties.ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _this$chainProperties3;\n\n    if ((_this$chainProperties3 = this.#chainProperties) !== null && _this$chainProperties3 !== void 0 && _this$chainProperties3.tokenSymbol.isSome) {\n      const allTokens = this.#chainProperties.tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(valueToString);\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n\n  get firstCallIndex() {\n    return this.#firstCallIndex || DEFAULT_FIRST_CALL_IDX;\n  }\n  /**\n   * @description Returns true if the type is in a Compat format\n   */\n\n\n  isLookupType(value) {\n    return /Lookup\\d+$/.test(value);\n  }\n  /**\n   * @description Creates a lookup string from the supplied id\n   */\n\n\n  createLookupType(lookupId) {\n    return `Lookup${lookupId.toString()}`;\n  }\n\n  get knownTypes() {\n    return this.#knownTypes;\n  }\n\n  get lookup() {\n    return assertReturn(this.#lookup, 'Lookup has not been set on this registry');\n  }\n\n  get metadata() {\n    return assertReturn(this.#metadata, 'Metadata has not been set on this registry');\n  }\n\n  get unknownTypes() {\n    return [...this.#unknownTypes.keys()];\n  }\n\n  get signedExtensions() {\n    return this.#signedExtensions;\n  }\n\n  clearCache() {\n    this.#classes = new Map();\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    return createClassUnsafe(this, type);\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClassUnsafe(type) {\n    return createClassUnsafe(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createTypeUnsafe(this, type, params);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createTypeUnsafe(type, params, options) {\n    return createTypeUnsafe(this, type, params, options);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const [section, method] = [callIndex[0], callIndex[1]];\n    return assertReturn(this.#metadataCalls[`${section}`] && this.#metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const [section, method] = isU8a(errorIndex) ? [errorIndex[0], errorIndex[1]] : [errorIndex.index.toNumber(), isU8a(errorIndex.error) ? errorIndex.error[0] : errorIndex.error.toNumber()];\n    return assertReturn(this.#metadataErrors[`${section}`] && this.#metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const [section, method] = [eventIndex[0], eventIndex[1]];\n    return assertReturn(this.#metadataEvents[`${section}`] && this.#metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown, knownTypeDef) {\n    return this.getUnsafe(name, withUnknown, knownTypeDef);\n  }\n\n  getUnsafe(name, withUnknown, knownTypeDef) {\n    let Type = this.#classes.get(name) || this.#knownDefaults[name]; // we have not already created the type, attempt it\n\n    if (!Type) {\n      const definition = this.#definitions.get(name);\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClassUnsafe(this, definition);\n      } else if (knownTypeDef) {\n        BaseType = constructTypeClass(this, knownTypeDef);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n        this.#unknownTypes.set(name, true);\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n        this.#classes.set(name, Type); // In the case of lookups, we also want to store the actual class against\n        // the lookup name, instad of having to traverse again\n\n        if (knownTypeDef && isNumber(knownTypeDef.lookupIndex)) {\n          this.#classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);\n        }\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return this.#chainProperties;\n  }\n\n  getClassName(Type) {\n    // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of\n    // items such as u32 & U32, we get the lowercase versions here... not quite as optimal\n    // (previously this used to be a simple find & return)\n    const names = [];\n\n    for (const [name, Clazz] of Object.entries(this.#knownDefaults)) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    }\n\n    for (const [name, Clazz] of this.#classes.entries()) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    } // both sort and reverse are done in-place\n\n\n    names.sort().reverse();\n    return names.length ? names[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return this.#definitions.get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _this$knownTypes, _this$knownTypes$type, _this$knownTypes$type2, _this$knownTypes$type3, _this$knownTypes$type4;\n\n    return (_this$knownTypes = this.#knownTypes) === null || _this$knownTypes === void 0 ? void 0 : (_this$knownTypes$type = _this$knownTypes.typesBundle) === null || _this$knownTypes$type === void 0 ? void 0 : (_this$knownTypes$type2 = _this$knownTypes$type.spec) === null || _this$knownTypes$type2 === void 0 ? void 0 : (_this$knownTypes$type3 = _this$knownTypes$type2[specName]) === null || _this$knownTypes$type3 === void 0 ? void 0 : (_this$knownTypes$type4 = _this$knownTypes$type3.instances) === null || _this$knownTypes$type4 === void 0 ? void 0 : _this$knownTypes$type4[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    const Clazz = this.get(name);\n\n    if (!Clazz) {\n      throw new Error(msg || `type ${name} not found`);\n    }\n\n    return Clazz;\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(this.#signedExtensions, 'payload', this.#userExtensions);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(this.#signedExtensions, 'extrinsic', this.#userExtensions);\n  }\n\n  hasClass(name) {\n    return this.#classes.has(name) || !!this.#knownDefaults[name];\n  }\n\n  hasDef(name) {\n    return this.#definitions.has(name);\n  }\n\n  hasType(name) {\n    return !this.#unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', this.#hasher(data));\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      this.#classes.set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      if (!isFunction(arg2)) {\n        throw new Error(`Expected class definition passed to '${arg1}' registration`);\n      } else if (arg1 === arg2.toString()) {\n        throw new Error(`Unable to register circular ${arg1} === ${arg1}`);\n      }\n\n      this.#classes.set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    const entries = Object.entries(obj);\n\n    for (let e = 0; e < entries.length; e++) {\n      const [name, type] = entries[e];\n\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        this.#classes.set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n\n        if (name === def) {\n          throw new Error(`Unable to register circular ${name} === ${def}`);\n        } // we already have this type, remove the classes registered for it\n\n\n        if (this.#classes.has(name)) {\n          this.#classes.delete(name);\n        }\n\n        this.#definitions.set(name, def);\n      }\n    }\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      this.#chainProperties = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    this.#hasher = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    this.#knownTypes = knownTypes;\n  }\n\n  setLookup(lookup) {\n    this.#lookup = lookup; // register all applicable types found\n\n    lookup.register();\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    this.#metadata = metadata.asLatest;\n    this.#metadataVersion = metadata.version;\n    this.#firstCallIndex = null; // attach the lookup at this point (before injecting)\n\n    this.setLookup(this.#metadata.lookup);\n    injectExtrinsics(this, this.#metadata, this.#metadataVersion, this.#metadataCalls);\n    injectErrors(this, this.#metadata, this.#metadataVersion, this.#metadataErrors);\n    injectEvents(this, this.#metadata, this.#metadataVersion, this.#metadataEvents); // set the default call index (the lowest section, the lowest method)\n    // in most chains this should be 0,0\n\n    const [defSection] = Object.keys(this.#metadataCalls).sort(sortDecimalStrings);\n\n    if (defSection) {\n      const [defMethod] = Object.keys(this.#metadataCalls[defSection]).sort(sortDecimalStrings);\n\n      if (defMethod) {\n        this.#firstCallIndex = new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]);\n      }\n    } // setup the available extensions\n\n\n    this.setSignedExtensions(signedExtensions || (this.#metadata.extrinsic.version.gt(BN_ZERO) // FIXME Use the extension and their injected types\n    ? this.#metadata.extrinsic.signedExtensions.map(({\n      identifier\n    }) => identifier.toString()) : fallbackExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions) {\n    this.#signedExtensions = signedExtensions;\n    this.#userExtensions = userExtensions;\n    const unknown = findUnknownExtensions(this.#signedExtensions, this.#userExtensions);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { ethereumEncode, isEthereumAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (isHex(value) || isEthereumAddress(value.toString())) {\n    return hexToU8a(value.toString());\n  } else if (isString(value)) {\n    return u8aToU8a(value);\n  }\n\n  return value;\n}\n/**\n * @name GenericEthereumAccountId\n * @description\n * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with\n * underlying addresses (20 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericEthereumAccountId extends U8aFixed {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAccountId(value), 160);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return ethereumEncode(this);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountIndex } from \"../generic/AccountIndex.js\";\nimport { GenericEthereumAccountId } from \"./AccountId.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 20 ? registry.createTypeUnsafe('EthereumAccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 20) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericEthereumLookupSource ? value.inner : value instanceof GenericEthereumAccountId || value instanceof GenericAccountIndex ? value : isU8a(value) || Array.isArray(value) || isHex(value) ? decodeU8a(registry, u8aToU8a(value)) : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : decodeString(registry, value);\n}\n/**\n * @name GenericEthereumLookupSource\n * @description\n * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericEthereumLookupSource extends AbstractBase {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, isHex, isU8a, objectProperty, objectSpread, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { BIT_SIGNED, BIT_UNSIGNED, DEFAULT_VERSION, UNMASK_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicUnknown', // v0 is unknown\n'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicV4'];\nexport { EXTRINSIC_VERSION as LATEST_EXTRINSIC_VERSION } from \"./v4/Extrinsic.js\";\n/** @internal */\n\nfunction newFromValue(registry, value, version) {\n  if (value instanceof GenericExtrinsic) {\n    return value.unwrap();\n  }\n\n  const isSigned = (version & BIT_SIGNED) === BIT_SIGNED;\n  const type = VERSIONS[version & UNMASK_VERSION] || VERSIONS[0]; // we cast here since the VERSION definition is incredibly broad - we don't have a\n  // slice for \"only add extrinsic types\", and more string definitions become unwieldy\n\n  return registry.createTypeUnsafe(type, [value, {\n    isSigned,\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction decodeExtrinsic(registry, value, version = DEFAULT_VERSION) {\n  if (isU8a(value) || Array.isArray(value) || isHex(value)) {\n    return decodeU8a(registry, u8aToU8a(value), version);\n  } else if (value instanceof registry.createClassUnsafe('Call')) {\n    return newFromValue(registry, {\n      method: value\n    }, version);\n  }\n\n  return newFromValue(registry, value, version);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value, version) {\n  if (!value.length) {\n    return newFromValue(registry, new Uint8Array(), version);\n  }\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + length.toNumber();\n  assert(total <= value.length, () => `Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);\n  const data = value.subarray(offset, total);\n  return newFromValue(registry, data.subarray(1), data[0]);\n}\n\nclass ExtrinsicBase extends AbstractBase {\n  constructor(registry, value, initialU8aLength) {\n    super(registry, value, initialU8aLength);\n    const signKeys = Object.keys(registry.getSignedExtensionTypes());\n\n    const getter = key => this.inner.signature[key]; // This is on the abstract class, ensuring that hasOwnProperty operates\n    // correctly, i.e. it needs to be on the base class exposing it\n\n\n    for (let i = 0; i < signKeys.length; i++) {\n      objectProperty(this, signKeys[i], getter);\n    }\n  }\n  /**\n   * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]\n   */\n\n\n  get args() {\n    return this.method.args;\n  }\n  /**\n   * @description The argument definitions, compatible with [[Call]]\n   */\n\n\n  get argsDef() {\n    return this.method.argsDef;\n  }\n  /**\n   * @description The actual `[sectionIndex, methodIndex]` as used in the Call\n   */\n\n\n  get callIndex() {\n    return this.method.callIndex;\n  }\n  /**\n   * @description The actual data for the Call\n   */\n\n\n  get data() {\n    return this.method.data;\n  }\n  /**\n   * @description The era for this extrinsic\n   */\n\n\n  get era() {\n    return this.inner.signature.era;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description `true` id the extrinsic is signed\n   */\n\n\n  get isSigned() {\n    return this.inner.signature.isSigned;\n  }\n  /**\n   * @description The length of the actual data, excluding prefix\n   */\n\n\n  get length() {\n    return this.toU8a(true).length;\n  }\n  /**\n   * @description The [[FunctionMetadataLatest]] that describes the extrinsic\n   */\n\n\n  get meta() {\n    return this.method.meta;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The nonce for this extrinsic\n   */\n\n\n  get nonce() {\n    return this.inner.signature.nonce;\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.inner.signature.signature;\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.inner.signature.signer;\n  }\n  /**\n   * @description Forwards compat\n   */\n\n\n  get tip() {\n    return this.inner.signature.tip;\n  }\n  /**\n   * @description Returns the raw transaction version (not flagged with signing information)\n  */\n\n\n  get type() {\n    return this.inner.version;\n  }\n\n  get inner() {\n    return this.unwrap();\n  }\n  /**\n   * @description Returns the encoded version flag\n  */\n\n\n  get version() {\n    return this.type | (this.isSigned ? BIT_SIGNED : BIT_UNSIGNED);\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return this.method.is(other);\n  }\n\n  unwrap() {\n    return super.unwrap();\n  }\n\n}\n/**\n * @name GenericExtrinsic\n * @description\n * Representation of an Extrinsic in the system. It contains the actual call,\n * (optional) signature and encodes with an actual length prefix\n *\n * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.\n *\n * Can be:\n * - signed, to create a transaction\n * - left as is, to create an inherent\n */\n\n\nexport class GenericExtrinsic extends ExtrinsicBase {\n  #hashCache;\n\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsic(registry, value, version));\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    if (!this.#hashCache) {\n      this.#hashCache = super.hash;\n    }\n\n    return this.#hashCache;\n  }\n  /**\n   * @description Injects an already-generated signature into the extrinsic\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.inner.addSignature(signer, signature, payload);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return {\n      inner: this.isSigned ? this.inner.inspect().inner : this.inner.method.inspect().inner,\n      outer: [compactToU8a(encoded.length), new Uint8Array([this.version])]\n    };\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.inner.sign(account, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.inner.signFake(signer, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isBare) {\n    return u8aToHex(this.toU8a(isBare));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({}, {\n      isSigned: this.isSigned,\n      method: this.method.toHuman(isExpanded)\n    }, this.isSigned ? {\n      era: this.era.toHuman(isExpanded),\n      nonce: this.nonce.toHuman(isExpanded),\n      signature: this.signature.toHex(),\n      signer: this.signer.toHuman(isExpanded),\n      tip: this.tip.toHuman(isExpanded)\n    } : null);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Extrinsic';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value is not length-prefixed\n   */\n\n\n  toU8a(isBare) {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n  toU8aInner() {\n    // we do not apply bare to the internal values, rather this only determines out length addition,\n    // where we strip all lengths this creates an extrinsic that cannot be decoded\n    return [new Uint8Array([this.version]), this.inner.toU8a()];\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Raw, Tuple, U64 } from '@polkadot/types-codec';\nimport { assert, bnToBn, formatNumber, hexToU8a, isHex, isObject, isU8a, u8aToBn, u8aToU8a } from '@polkadot/util';\nimport { IMMORTAL_ERA } from \"./constants.js\";\n\nfunction getTrailingZeros(period) {\n  const binary = period.toString(2);\n  let index = 0;\n\n  while (binary[binary.length - 1 - index] === '0') {\n    index++;\n  }\n\n  return index;\n}\n/** @internal */\n\n\nfunction decodeMortalEra(registry, value) {\n  if (isU8a(value) || isHex(value) || Array.isArray(value)) {\n    return decodeMortalU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [new U64(registry), new U64(registry)];\n  } else if (isObject(value)) {\n    return decodeMortalObject(registry, value);\n  }\n\n  throw new Error('Invalid data passed to Mortal era');\n}\n/** @internal */\n\n\nfunction decodeMortalObject(registry, value) {\n  const {\n    current,\n    period\n  } = value;\n  let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));\n  calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);\n  const phase = current % calPeriod;\n  const quantizeFactor = Math.max(calPeriod >> 12, 1);\n  const quantizedPhase = phase / quantizeFactor * quantizeFactor;\n  return [new U64(registry, calPeriod), new U64(registry, quantizedPhase)];\n}\n/** @internal */\n\n\nfunction decodeMortalU8a(registry, value) {\n  if (value.length === 0) {\n    return [new U64(registry), new U64(registry)];\n  }\n\n  const first = u8aToBn(value.subarray(0, 1)).toNumber();\n  const second = u8aToBn(value.subarray(1, 2)).toNumber();\n  const encoded = first + (second << 8);\n  const period = 2 << encoded % (1 << 4);\n  const quantizeFactor = Math.max(period >> 12, 1);\n  const phase = (encoded >> 4) * quantizeFactor;\n  assert(period >= 4 && phase < period, 'Invalid data passed to Mortal era');\n  return [new U64(registry, period), new U64(registry, phase)];\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction decodeExtrinsicEra(value = new Uint8Array()) {\n  if (isU8a(value)) {\n    return !value.length || value[0] === 0 ? new Uint8Array([0]) : new Uint8Array([1, value[0], value[1]]);\n  } else if (!value) {\n    return new Uint8Array([0]);\n  } else if (value instanceof GenericExtrinsicEra) {\n    return decodeExtrinsicEra(value.toU8a());\n  } else if (isHex(value)) {\n    return decodeExtrinsicEra(hexToU8a(value));\n  } else if (isObject(value)) {\n    const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);\n    const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');\n    const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera'); // this is to de-serialize from JSON\n\n    return mortal ? {\n      MortalEra: mortal[1]\n    } : immortal ? {\n      ImmortalEra: immortal[1]\n    } : {\n      MortalEra: value\n    };\n  }\n\n  throw new Error('Invalid data passed to Era');\n}\n/**\n * @name ImmortalEra\n * @description\n * The ImmortalEra for an extrinsic\n */\n\n\nexport class ImmortalEra extends Raw {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  constructor(registry, value) {\n    // For immortals, we always provide the known value (i.e. treated as a\n    // constant no matter how it is constructed - it is a fixed structure)\n    super(registry, IMMORTAL_ERA);\n  }\n\n}\n/**\n * @name MortalEra\n * @description\n * The MortalEra for an extrinsic, indicating period and phase\n */\n\nexport class MortalEra extends Tuple {\n  constructor(registry, value) {\n    super(registry, {\n      period: U64,\n      phase: U64\n    }, decodeMortalEra(registry, value));\n  }\n  /**\n   * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`\n   */\n\n\n  get encodedLength() {\n    return 2;\n  }\n  /**\n   * @description The period of this Mortal wraps as a [[U64]]\n   */\n\n\n  get period() {\n    return this[0];\n  }\n  /**\n   * @description The phase of this Mortal wraps as a [[U64]]\n   */\n\n\n  get phase() {\n    return this[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return {\n      period: formatNumber(this.period),\n      phase: formatNumber(this.phase)\n    };\n  }\n  /**\n   * @description Returns a JSON representation of the actual value\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   * Period and phase are encoded:\n   *   - The period of validity from the block hash found in the signing material.\n   *   - The phase in the period that this transaction's lifetime begins (and, importantly,\n   *     implies which block hash is included in the signature material). If the `period` is\n   *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n   *     `period` is.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    const period = this.period.toNumber();\n    const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + (this.phase.toNumber() / Math.max(period >> 12, 1) << 4);\n    return new Uint8Array([encoded & 0xff, encoded >> 8]);\n  }\n  /**\n   * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.\n   */\n\n\n  birth(current) {\n    const phase = this.phase.toNumber();\n    const period = this.period.toNumber(); // FIXME No toNumber() here\n\n    return ~~((Math.max(bnToBn(current).toNumber(), phase) - phase) / period) * period + phase;\n  }\n  /**\n   * @description Get the block number of the first block at which the era has ended.\n   */\n\n\n  death(current) {\n    // FIXME No toNumber() here\n    return this.birth(current) + this.period.toNumber();\n  }\n\n}\n/**\n * @name GenericExtrinsicEra\n * @description\n * The era for an extrinsic, indicating either a mortal or immortal extrinsic\n */\n\nexport class GenericExtrinsicEra extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      ImmortalEra,\n      MortalEra\n    }, decodeExtrinsicEra(value));\n  }\n  /**\n   * @description Override the encoded length method\n   */\n\n\n  get encodedLength() {\n    return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;\n  }\n  /**\n   * @description Returns the item as a [[ImmortalEra]]\n   */\n\n\n  get asImmortalEra() {\n    assert(this.isImmortalEra, () => `Cannot convert '${this.type}' via asImmortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description Returns the item as a [[MortalEra]]\n   */\n\n\n  get asMortalEra() {\n    assert(this.isMortalEra, () => `Cannot convert '${this.type}' via asMortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description `true` if Immortal\n   */\n\n\n  get isImmortalEra() {\n    return this.index === 0;\n  }\n  /**\n   * @description `true` if Mortal\n   */\n\n\n  get isMortalEra() {\n    return this.index > 0;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { u8aToHex } from '@polkadot/util';\nimport { DEFAULT_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown\n'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];\n/** @internal */\n\nfunction decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n  if (value instanceof GenericExtrinsicPayload) {\n    return value.unwrap();\n  }\n\n  return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, {\n    version\n  }]);\n}\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\n\nexport class GenericExtrinsicPayload extends AbstractBase {\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsicPayload(registry, value, version));\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.inner.blockHash;\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.inner.era;\n  }\n  /**\n   * @description The genesis block [[Hash]] the signature applies to\n   */\n\n\n  get genesisHash() {\n    // NOTE only v3+\n    return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);\n  }\n  /**\n   * @description The [[Raw]] contained in the payload\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.inner.nonce;\n  }\n  /**\n   * @description The specVersion as a [[u32]] for this payload\n   */\n\n\n  get specVersion() {\n    // NOTE only v3+\n    return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description The [[Balance]]\n   */\n\n\n  get tip() {\n    // NOTE from v2+\n    return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);\n  }\n  /**\n   * @description The transaction version as a [[u32]] for this payload\n   */\n\n\n  get transactionVersion() {\n    // NOTE only v4+\n    return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.inner.eq(other);\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    const signature = this.inner.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra\n    // information, such as for instance the payload, i.e. `payload: this.toHex()`\n    // For the case here we sign via the extrinsic, we ignore the return, so generally\n    // this is applicable for external signing\n\n    return {\n      signature: u8aToHex(signature)\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.inner.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns a serialized u8a form\n   */\n\n\n  toU8a(isBare) {\n    // call our parent, with only the method stripped\n    return super.toU8a(isBare ? {\n      method: true\n    } : false);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericExtrinsicPayloadUnknown\n * @description\n * A default handler for payloads where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicPayloadUnknown extends Struct {\n  constructor(registry, value, {\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported extrinsic payload version ${version}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { UNMASK_VERSION } from \"./constants.js\";\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicUnknown extends Struct {\n  constructor(registry, value, {\n    isSigned = false,\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & UNMASK_VERSION}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option, Struct } from '@polkadot/types-codec';\nimport { objectProperty, objectSpread, u8aToHex } from '@polkadot/util';\nconst knownTypes = {\n  address: 'Address',\n  blockHash: 'Hash',\n  blockNumber: 'BlockNumber',\n  era: 'ExtrinsicEra',\n  genesisHash: 'Hash',\n  method: 'Call',\n  nonce: 'Compact<Index>',\n  runtimeVersion: 'RuntimeVersion',\n  signedExtensions: 'Vec<Text>',\n  tip: 'Compact<Balance>',\n  version: 'u8'\n};\n/**\n * @name GenericSignerPayload\n * @description\n * A generic signer payload that can be used for serialization between API and signer\n */\n\nexport class GenericSignerPayload extends Struct {\n  #extraTypes;\n\n  constructor(registry, value) {\n    const extensionTypes = objectSpread({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());\n    super(registry, objectSpread({}, extensionTypes, knownTypes), value);\n    this.#extraTypes = {};\n\n    const getter = key => this.get(key); // add all extras that are not in the base types\n\n\n    for (const [key, type] of Object.entries(extensionTypes)) {\n      if (!knownTypes[key]) {\n        this.#extraTypes[key] = type;\n      }\n\n      objectProperty(this, key, getter);\n    }\n  }\n\n  get address() {\n    return this.getT('address');\n  }\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n\n  get blockNumber() {\n    return this.getT('blockNumber');\n  }\n\n  get era() {\n    return this.getT('era');\n  }\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n\n  get method() {\n    return this.getT('method');\n  }\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n\n  get runtimeVersion() {\n    return this.getT('runtimeVersion');\n  }\n\n  get signedExtensions() {\n    return this.getT('signedExtensions');\n  }\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  get version() {\n    return this.getT('version');\n  }\n  /**\n   * @description Creates an representation of the structure as an ISignerPayload JSON\n   */\n\n\n  toPayload() {\n    const result = {};\n    const keys = Object.keys(this.#extraTypes); // add any explicit overrides we may have\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = this.get(key);\n      const isOption = value instanceof Option; // Don't include Option.isNone\n\n      if (!isOption || value.isSome) {\n        result[key] = value.toHex();\n      }\n    }\n\n    return objectSpread(result, {\n      // the known defaults as managed explicitly and has different\n      // formatting in cases, e.g. we mostly expose a hex format here\n      address: this.address.toString(),\n      blockHash: this.blockHash.toHex(),\n      blockNumber: this.blockNumber.toHex(),\n      era: this.era.toHex(),\n      genesisHash: this.genesisHash.toHex(),\n      method: this.method.toHex(),\n      nonce: this.nonce.toHex(),\n      signedExtensions: this.signedExtensions.map(e => e.toString()),\n      specVersion: this.runtimeVersion.specVersion.toHex(),\n      tip: this.tip.toHex(),\n      transactionVersion: this.runtimeVersion.transactionVersion.toHex(),\n      version: this.version.toNumber()\n    });\n  }\n  /**\n   * @description Creates a representation of the payload in raw Exrinsic form\n   */\n\n\n  toRaw() {\n    const payload = this.toPayload();\n    const data = u8aToHex(this.registry.createTypeUnsafe('ExtrinsicPayload', [payload, {\n      version: payload.version\n    }]) // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)\n    .toU8a({\n      method: true\n    }));\n    return {\n      address: payload.address,\n      data,\n      type: 'payload'\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BIT_SIGNED = 0b10000000;\nexport const BIT_UNSIGNED = 0;\nexport const EMPTY_U8A = new Uint8Array();\nexport const DEFAULT_VERSION = 4;\nexport const IMMORTAL_ERA = new Uint8Array([0]);\nexport const UNMASK_VERSION = 0b01111111;","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const emptyCheck = {\n  extrinsic: {},\n  payload: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { polkadot } from \"./polkadot.js\";\nimport { shell } from \"./shell.js\";\nimport { statemint } from \"./statemint.js\";\nimport { substrate } from \"./substrate.js\"; // A mapping of the known signed extensions to the extra fields that they\n// contain. Unlike in the actual extensions, we define the extra fields not\n// as a Tuple, but rather as a struct so they can be named. These will be\n// expanded into the various fields when added to the payload (we only\n// support V4 onwards with these, V3 and earlier are deemed fixed))\n\nexport const allExtensions = objectSpread({}, substrate, polkadot, shell, statemint); // the v4 signed extensions prior to the point of exposing these to the\n// metadata. This may not match 100% with the current defaults and are used\n// when not specified in the metadata (which is for very old chains). The\n// order is important here, as applied by default\n\nexport const fallbackExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexport function findUnknownExtensions(extensions, userExtensions = {}) {\n  const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];\n  return extensions.filter(k => !names.includes(k));\n}\nexport function expandExtensionTypes(extensions, type, userExtensions = {}) {\n  return extensions // Always allow user extensions first - these should provide overrides\n  .map(k => userExtensions[k] || allExtensions[k]).filter(info => !!info).reduce((result, info) => objectSpread(result, info[type]), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const polkadot = {\n  LimitParathreadCommits: emptyCheck,\n  OnlyStakingAndClaims: emptyCheck,\n  PrevalidateAttests: emptyCheck,\n  RestrictFunctionality: emptyCheck,\n  TransactionCallFilter: emptyCheck,\n  ValidateDoubleVoteReports: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const shell = {\n  DisallowSigned: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const statemint = {\n  ChargeAssetTxPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>',\n      // eslint-disable-next-line sort-keys\n      assetId: 'Option<AssetId>'\n    },\n    payload: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nconst CheckMortality = {\n  extrinsic: {\n    era: 'ExtrinsicEra'\n  },\n  payload: {\n    blockHash: 'Hash'\n  }\n};\nexport const substrate = {\n  ChargeTransactionPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>'\n    },\n    payload: {}\n  },\n  CheckBlockGasLimit: emptyCheck,\n  CheckEra: CheckMortality,\n  CheckGenesis: {\n    extrinsic: {},\n    payload: {\n      genesisHash: 'Hash'\n    }\n  },\n  CheckMortality,\n  CheckNonZeroSender: emptyCheck,\n  CheckNonce: {\n    extrinsic: {\n      nonce: 'Compact<Index>'\n    },\n    payload: {}\n  },\n  CheckSpecVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckTxVersion: {\n    extrinsic: {},\n    payload: {\n      transactionVersion: 'u32'\n    }\n  },\n  CheckVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckWeight: emptyCheck,\n  LockStakingStatus: emptyCheck,\n  ValidateEquivocationReport: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// a helper function for both types of payloads, Raw and metadata-known\nexport function sign(registry, signerPair, u8a, options) {\n  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;\n  return signerPair.sign(encoded, options);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { isU8a } from '@polkadot/util';\nexport const EXTRINSIC_VERSION = 4;\n\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsic(registry, value, isSigned = false) {\n    if (value instanceof GenericExtrinsicV4) {\n      return value;\n    } else if (value instanceof registry.createClassUnsafe('Call')) {\n      return {\n        method: value\n      };\n    } else if (isU8a(value)) {\n      // here we decode manually since we need to pull through the version information\n      const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, {\n        isSigned\n      }]);\n      const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);\n      return {\n        method,\n        signature\n      };\n    }\n\n    return value || {};\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n  /**\n   * @description The [[ExtrinsicSignatureV4]]\n   */\n\n\n  get signature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The version for the signature\n   */\n\n\n  get version() {\n    return EXTRINSIC_VERSION;\n  }\n  /**\n   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.signature.addSignature(signer, signature, payload);\n    return this;\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.signature.sign(this.method, account, options);\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.signature.signFake(this.method, signer, options);\n    return this;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Struct } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\nimport { sign } from \"../util.js\";\n/**\n * @name GenericExtrinsicPayloadV4\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is\n * variable length based on the contents included\n */\n\nexport class GenericExtrinsicPayloadV4 extends Struct {\n  #signOptions;\n\n  constructor(registry, value) {\n    super(registry, objectSpread({\n      method: 'Bytes'\n    }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value); // Do detection for the type of extrinsic, in the case of MultiSignature\n    // this is an enum, in the case of AnySignature, this is a Hash only\n    // (which may be 64 or 65 bytes)\n\n    this.#signOptions = {\n      withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof Enum\n    };\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return super.inspect({\n      method: true\n    });\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The genesis [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n  /**\n   * @description The [[Bytes]] contained in the payload\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n  /**\n   * @description The specVersion for this signature\n   */\n\n\n  get specVersion() {\n    return this.getT('specVersion');\n  }\n  /**\n   * @description The tip [[Balance]]\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n  /**\n   * @description The transactionVersion for this signature\n   */\n\n\n  get transactionVersion() {\n    return this.getT('transactionVersion');\n  }\n  /**\n   * @description\n   * The (optional) asset id for this signature for chains that support transaction fees in assets\n   */\n\n\n  get assetId() {\n    return this.getT('assetId');\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    // NOTE The `toU8a({ method: true })` argument is absolutely critical, we\n    // don't want the method (Bytes) to have the length prefix included. This\n    // means that the data-as-signed is un-decodable, but is also doesn't need\n    // the extra information, only the pure data (and is not decoded) ...\n    // The same applies to V1..V3, if we have a V5, carrythis comment\n    return sign(this.registry, signerPair, this.toU8a({\n      method: true\n    }), this.#signOptions);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { assert, isU8a, isUndefined, objectProperties, objectSpread, stringify, u8aToHex } from '@polkadot/util';\nimport { EMPTY_U8A, IMMORTAL_ERA } from \"../constants.js\";\nimport { GenericExtrinsicPayloadV4 } from \"./ExtrinsicPayload.js\"; // Ensure we have enough data for all types of signatures\n\nconst FAKE_SIGNATURE = new Uint8Array(256).fill(1);\n\nfunction toAddress(registry, address) {\n  return registry.createTypeUnsafe('Address', [isU8a(address) ? u8aToHex(address) : address]);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nexport class GenericExtrinsicSignatureV4 extends Struct {\n  #signKeys;\n\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    const signTypes = registry.getSignedExtensionTypes();\n    super(registry, objectSpread( // eslint-disable-next-line sort-keys\n    {\n      signer: 'Address',\n      signature: 'ExtrinsicSignature'\n    }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n    this.#signKeys = Object.keys(signTypes);\n    objectProperties(this, this.#signKeys, k => this.get(k));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return EMPTY_U8A;\n    } else if (value instanceof GenericExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    // the second case here is when we don't have an enum signature, treat as raw\n    return this.multiSignature.value || this.multiSignature;\n  }\n  /**\n   * @description The raw [[ExtrinsicSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.getT('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  _injectSignature(signer, signature, payload) {\n    // use the fields exposed to guide the getters\n    for (let i = 0; i < this.#signKeys.length; i++) {\n      const k = this.#signKeys[i];\n      const v = payload.get(k);\n\n      if (!isUndefined(v)) {\n        this.set(k, v);\n      }\n    } // additional fields (exposed in struct itself)\n\n\n    this.set('signer', signer);\n    this.set('signature', signature);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new GenericExtrinsicPayloadV4(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, options) {\n    const {\n      era,\n      runtimeVersion: {\n        specVersion,\n        transactionVersion\n      }\n    } = options;\n    return new GenericExtrinsicPayloadV4(this.registry, objectSpread({}, options, {\n      era: era || IMMORTAL_ERA,\n      method: method.toHex(),\n      specVersion,\n      transactionVersion\n    }));\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    assert(account && account.addressRaw, () => `Expected a valid keypair for signing, found ${stringify(account)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    assert(address, () => `Expected a valid address for signing, found ${stringify(address)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : EMPTY_U8A;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { assert, hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (!value) {\n    return new Uint8Array();\n  } else if (isHex(value)) {\n    return hexToU8a(value);\n  } else if (isString(value)) {\n    return decodeAddress(value.toString());\n  }\n\n  throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);\n}\n/**\n * @name GenericAccountId\n * @description\n * A wrapper around an AccountId/PublicKey representation. Since we are dealing with\n * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericAccountId extends U8aFixed {\n  constructor(registry, value) {\n    const decoded = decodeAccountId(value); // Part of stream containing >= 32 bytes or a all empty (defaults)\n\n    assert(decoded.length >= 32 || !decoded.some(b => b), () => `Invalid AccountId provided, expected 32 bytes, found ${decoded.length}`);\n    super(registry, decoded, 256);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return encodeAddress(this, this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from '@polkadot/types-codec';\nimport { BN, bnToBn, isBigInt, isBn, isHex, isNumber, isU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nconst PREFIX_1BYTE = 0xef;\nconst PREFIX_2BYTE = 0xfc;\nconst PREFIX_4BYTE = 0xfd;\nconst PREFIX_8BYTE = 0xfe;\nconst MAX_1BYTE = new BN(PREFIX_1BYTE);\nconst MAX_2BYTE = new BN(1).shln(16);\nconst MAX_4BYTE = new BN(1).shln(32);\n/** @internal */\n\nfunction decodeAccountIndex(value) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  if (value instanceof GenericAccountIndex) {\n    // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an\n    // AccountIndex), which has the initial `toString()` implementation.\n    return value.toBn();\n  } else if (isBn(value) || isNumber(value) || isHex(value) || isU8a(value) || isBigInt(value)) {\n    return value;\n  }\n\n  return decodeAccountIndex(decodeAddress(value));\n}\n/**\n * @name GenericAccountIndex\n * @description\n * A wrapper around an AccountIndex, which is a shortened, variable-length encoding\n * for an Account. We extends from [[U32]] to provide the number-like properties.\n */\n\n\nexport class GenericAccountIndex extends u32 {\n  constructor(registry, value = new BN(0)) {\n    super(registry, decodeAccountIndex(value));\n  }\n\n  static calcLength(_value) {\n    const value = bnToBn(_value);\n\n    if (value.lte(MAX_1BYTE)) {\n      return 1;\n    } else if (value.lt(MAX_2BYTE)) {\n      return 2;\n    } else if (value.lt(MAX_4BYTE)) {\n      return 4;\n    }\n\n    return 8;\n  }\n\n  static readLength(input) {\n    const first = input[0];\n\n    if (first === PREFIX_2BYTE) {\n      return [1, 2];\n    } else if (first === PREFIX_4BYTE) {\n      return [1, 4];\n    } else if (first === PREFIX_8BYTE) {\n      return [1, 8];\n    }\n\n    return [0, 1];\n  }\n\n  static writeLength(input) {\n    switch (input.length) {\n      case 2:\n        return new Uint8Array([PREFIX_2BYTE]);\n\n      case 4:\n        return new Uint8Array([PREFIX_4BYTE]);\n\n      case 8:\n        return new Uint8Array([PREFIX_8BYTE]);\n\n      default:\n        return new Uint8Array([]);\n    }\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // shortcut for BN or Number, don't create an object\n    if (isBn(other) || isNumber(other)) {\n      return super.eq(other);\n    } // convert and compare\n\n\n    return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    const length = GenericAccountIndex.calcLength(this);\n    return encodeAddress(this.toU8a().subarray(0, length), this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountIndex';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      header: 'Header',\n      // eslint-disable-next-line sort-keys\n      extrinsics: 'Vec<Extrinsic>'\n    }, value);\n  }\n  /**\n   * @description Encodes a content [[Hash]] for the block\n   */\n\n\n  get contentHash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The [[Extrinsic]] contained in the block\n   */\n\n\n  get extrinsics() {\n    return this.getT('extrinsics');\n  }\n  /**\n   * @description Block/header [[Hash]]\n   */\n\n\n  get hash() {\n    return this.header.hash;\n  }\n  /**\n   * @description The [[Header]] of the block\n   */\n\n\n  get header() {\n    return this.getT('header');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct, U8aFixed } from '@polkadot/types-codec';\nimport { isHex, isObject, isU8a, objectSpread, u8aToU8a } from '@polkadot/util';\n\n/**\n * Get a mapping of `argument name -> argument type` for the function, from\n * its metadata.\n *\n * @param meta - The function metadata used to get the definition.\n * @internal\n */\nfunction getArgsDef(registry, meta) {\n  return meta.fields.reduce((result, {\n    name,\n    type\n  }, index) => {\n    result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);\n    return result;\n  }, {});\n}\n/** @internal */\n\n\nfunction decodeCallViaObject(registry, value, _meta) {\n  // we only pass args/methodsIndex out\n  const {\n    args,\n    callIndex\n  } = value; // Get the correct lookupIndex\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  const lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex; // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(lookupIndex).meta;\n\n  return {\n    args,\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/** @internal */\n\n\nfunction decodeCallViaU8a(registry, value, _meta) {\n  // We need 2 bytes for the callIndex\n  const callIndex = registry.firstCallIndex.slice();\n  callIndex.set(value.subarray(0, 2), 0); // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(callIndex).meta;\n\n  return {\n    args: value.subarray(2),\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param value - Value to decode, one of:\n * - hex\n * - Uint8Array\n * - {@see DecodeMethodInput}\n * @param _meta - Metadata to use, so that `injectMethods` lookup is not\n * necessary.\n * @internal\n */\n\n\nfunction decodeCall(registry, value = new Uint8Array(), _meta) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeCallViaU8a(registry, u8aToU8a(value), _meta);\n  } else if (isObject(value) && value.callIndex && value.args) {\n    return decodeCallViaObject(registry, value, _meta);\n  }\n\n  throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);\n}\n/**\n * @name GenericCallIndex\n * @description\n * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method\n */\n\n\nexport class GenericCallIndex extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, value, 16);\n  }\n\n}\n/**\n * @name GenericCall\n * @description\n * Extrinsic function descriptor\n */\n\nexport class GenericCall extends Struct {\n  constructor(registry, value, meta) {\n    const decoded = decodeCall(registry, value, meta);\n\n    try {\n      super(registry, {\n        callIndex: GenericCallIndex,\n        // eslint-disable-next-line sort-keys\n        args: Struct.with(decoded.argsDef)\n      }, decoded);\n    } catch (error) {\n      let method = 'unknown.unknown';\n\n      try {\n        const c = registry.findMetaCall(decoded.callIndex);\n        method = `${c.section}.${c.method}`;\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Call: failed decoding ${method}:: ${error.message}`);\n    }\n\n    this._meta = decoded.meta;\n  }\n  /**\n   * @description The arguments for the function call\n   */\n\n\n  get args() {\n    return [...this.getT('args').values()];\n  }\n  /**\n   * @description The argument definitions\n   */\n\n\n  get argsDef() {\n    return getArgsDef(this.registry, this.meta);\n  }\n  /**\n   * @description The argument entries\n   */\n\n\n  get argsEntries() {\n    return [...this.getT('args').entries()];\n  }\n  /**\n   * @description The encoded `[sectionIndex, methodIndex]` identifier\n   */\n\n\n  get callIndex() {\n    return this.getT('callIndex').toU8a();\n  }\n  /**\n   * @description The encoded data\n   */\n\n\n  get data() {\n    return this.getT('args').toU8a();\n  }\n  /**\n   * @description The [[FunctionMetadata]]\n   */\n\n\n  get meta() {\n    return this._meta;\n  }\n  /**\n   * @description Returns the name of the method\n   */\n\n\n  get method() {\n    return this.registry.findMetaCall(this.callIndex).method;\n  }\n  /**\n   * @description Returns the module containing the method\n   */\n\n\n  get section() {\n    return this.registry.findMetaCall(this.callIndex).section;\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    var _call, _call2;\n\n    let call;\n\n    try {\n      call = this.registry.findMetaCall(this.callIndex);\n    } catch (error) {// swallow\n    }\n\n    return objectSpread({\n      args: this.argsEntries.reduce((args, [n, a]) => objectSpread(args, {\n        [n]: a.toHuman(isExpanded)\n      }), {}),\n      method: (_call = call) === null || _call === void 0 ? void 0 : _call.method,\n      section: (_call2 = call) === null || _call2 === void 0 ? void 0 : _call2.section\n    }, isExpanded && call ? {\n      docs: call.meta.docs.map(d => d.toString())\n    } : null);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Call';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Json } from '@polkadot/types-codec';\nimport { isFunction, isNull, isUndefined } from '@polkadot/util';\n\nfunction createValue(registry, type, value, asArray = true) {\n  // We detect codec here as well - when found, generally this is constructed from itself\n  if (value && isFunction(value.unwrapOrDefault)) {\n    return value;\n  }\n\n  return registry.createTypeUnsafe(type, [asArray ? isNull(value) || isUndefined(value) ? null : Array.isArray(value) ? value : [value] : value]);\n}\n\nfunction decodeValue(registry, key, value) {\n  return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : value;\n}\n\nfunction decode(registry, value) {\n  return ( // allow decoding from a map as well (ourselves)\n  value && isFunction(value.entries) ? [...value.entries()] : Object.entries(value || {})).reduce((all, [key, value]) => {\n    all[key] = decodeValue(registry, key, value);\n    return all;\n  }, {\n    ss58Format: registry.createTypeUnsafe('Option<u32>', []),\n    tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),\n    tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])\n  });\n}\n\nexport class GenericChainProperties extends Json {\n  constructor(registry, value) {\n    super(registry, decode(registry, value));\n  }\n  /**\n   * @description The chain ss58Format\n   */\n\n\n  get ss58Format() {\n    return this.getT('ss58Format');\n  }\n  /**\n   * @description The decimals for each of the tokens\n   */\n\n\n  get tokenDecimals() {\n    return this.getT('tokenDecimals');\n  }\n  /**\n   * @description The symbols for the tokens\n   */\n\n\n  get tokenSymbol() {\n    return this.getT('tokenSymbol');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nexport const CID_AURA = stringToU8a('aura');\nexport const CID_BABE = stringToU8a('BABE');\nexport const CID_GRPA = stringToU8a('FRNK');\nexport const CID_POW = stringToU8a('pow_');\n\nfunction getAuraAuthor(registry, bytes, sessionValidators) {\n  return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)]).slotNumber.mod(new BN(sessionValidators.length)).toNumber()];\n}\n\nfunction getBabeAuthor(registry, bytes, sessionValidators) {\n  const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);\n  return sessionValidators[digest.value.toNumber()];\n}\n\nfunction getBytesAsAuthor(registry, bytes) {\n  return registry.createTypeUnsafe('AccountId', [bytes]);\n}\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\n\n\nexport class GenericConsensusEngineId extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, isNumber(value) ? bnToU8a(value, {\n      isLe: false\n    }) : value, 32);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  get isAura() {\n    return this.eq(CID_AURA);\n  }\n  /**\n   * @description `true` is the engine matches babe\n   */\n\n\n  get isBabe() {\n    return this.eq(CID_BABE);\n  }\n  /**\n   * @description `true` is the engine matches grandpa\n   */\n\n\n  get isGrandpa() {\n    return this.eq(CID_GRPA);\n  }\n  /**\n   * @description `true` is the engine matches pow\n   */\n\n\n  get isPow() {\n    return this.eq(CID_POW);\n  }\n  /**\n   * @description From the input bytes, decode into an author\n   */\n\n\n  extractAuthor(bytes, sessionValidators) {\n    if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {\n      if (this.isAura) {\n        return getAuraAuthor(this.registry, bytes, sessionValidators);\n      } else if (this.isBabe) {\n        return getBabeAuthor(this.registry, bytes, sessionValidators);\n      }\n    } // For pow & Moonbeam, the bytes are the actual author\n\n\n    if (this.isPow || bytes.length === 20) {\n      return getBytesAsAuthor(this.registry, bytes);\n    }\n\n    return undefined;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'ConsensusEngineId';\n  }\n  /**\n   * @description Override the default toString to return a 4-byte string\n   */\n\n\n  toString() {\n    return this.isAscii ? u8aToString(this) : u8aToHex(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Null, Struct, Tuple } from '@polkadot/types-codec';\nimport { objectProperties, objectSpread } from '@polkadot/util';\n\n/** @internal */\nfunction decodeEvent(registry, value) {\n  if (!value || !value.length) {\n    return {\n      DataType: Null\n    };\n  }\n\n  const index = value.subarray(0, 2);\n  return {\n    DataType: registry.findMetaEvent(index),\n    value: {\n      data: value.subarray(2),\n      index\n    }\n  };\n}\n/**\n * @name GenericEventData\n * @description\n * Wrapper for the actual data that forms part of an [[Event]]\n */\n\n\nexport class GenericEventData extends Tuple {\n  #meta;\n  #method;\n  #names = null;\n  #section;\n  #typeDef;\n\n  constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {\n    const fields = (meta === null || meta === void 0 ? void 0 : meta.fields) || [];\n    super(registry, fields.map(({\n      type\n    }) => registry.createLookupType(type)), value);\n    this.#meta = meta;\n    this.#method = method;\n    this.#section = section;\n    this.#typeDef = fields.map(({\n      type\n    }) => registry.lookup.getTypeDef(type));\n    const names = fields.map(({\n      name\n    }) => registry.lookup.sanitizeField(name)[0]).filter(n => !!n);\n\n    if (names.length === fields.length) {\n      this.#names = names;\n      objectProperties(this, names, (_, i) => this[i]);\n    }\n  }\n  /**\n   * @description The wrapped [[EventMetadata]]\n   */\n\n\n  get meta() {\n    return this.#meta;\n  }\n  /**\n   * @description The method as a string\n   */\n\n\n  get method() {\n    return this.#method;\n  }\n  /**\n   * @description The field names (as available)\n   */\n\n\n  get names() {\n    return this.#names;\n  }\n  /**\n   * @description The section as a string\n   */\n\n\n  get section() {\n    return this.#section;\n  }\n  /**\n   * @description The [[TypeDef]] for this event\n   */\n\n\n  get typeDef() {\n    return this.#typeDef;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    if (this.#names !== null) {\n      const json = {};\n\n      for (let i = 0; i < this.#names.length; i++) {\n        json[this.#names[i]] = this[i].toHuman(isExtended);\n      }\n\n      return json;\n    }\n\n    return super.toHuman(isExtended);\n  }\n\n}\n/**\n * @name GenericEvent\n * @description\n * A representation of a system event. These are generated via the [[Metadata]] interfaces and\n * specific to a specific Substrate runtime\n */\n\nexport class GenericEvent extends Struct {\n  // Currently we _only_ decode from Uint8Array, since we expect it to\n  // be used via EventRecord\n  constructor(registry, _value) {\n    const {\n      DataType,\n      value\n    } = decodeEvent(registry, _value);\n    super(registry, {\n      index: 'EventId',\n      // eslint-disable-next-line sort-keys\n      data: DataType\n    }, value);\n  }\n  /**\n   * @description The wrapped [[EventData]]\n   */\n\n\n  get data() {\n    return this.getT('data');\n  }\n  /**\n   * @description The [[EventId]], identifying the raw event\n   */\n\n\n  get index() {\n    return this.getT('index');\n  }\n  /**\n   * @description The [[EventMetadata]] with the documentation\n   */\n\n\n  get meta() {\n    return this.data.meta;\n  }\n  /**\n   * @description The method string identifying the event\n   */\n\n\n  get method() {\n    return this.data.method;\n  }\n  /**\n   * @description The section string identifying the event\n   */\n\n\n  get section() {\n    return this.data.section;\n  }\n  /**\n   * @description The [[TypeDef]] for the event\n   */\n\n\n  get typeDef() {\n    return this.data.typeDef;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({\n      method: this.method,\n      section: this.section\n    }, isExpanded ? {\n      docs: this.meta.docs.map(d => d.toString())\n    } : null, super.toHuman(isExpanded));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 32 ? registry.createTypeUnsafe('AccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 32) {\n    return registry.createTypeUnsafe('AccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n/** @internal */\n\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericLookupSource ? value.inner : value instanceof GenericAccountId || value instanceof GenericAccountIndex ? value : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : Array.isArray(value) || isHex(value) || isU8a(value) ? decodeU8a(registry, u8aToU8a(value)) : decodeString(registry, value);\n}\n/**\n * @name LookupSource\n * @description\n * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericLookupSource extends AbstractBase {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = this.inner.toU8a().subarray(0, this._rawLength);\n    return {\n      outer: [new Uint8Array(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(value) : ACCOUNT_ID_PREFIX), value]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { isBn, isNumber, isString, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\";\n\nfunction decodeU8a(registry, u8a) {\n  if ([0, 32].includes(u8a.length)) {\n    return {\n      Id: u8a\n    };\n  } else if (u8a.length === 20) {\n    return {\n      Address20: u8a\n    };\n  } else if (u8a.length <= 8) {\n    return {\n      Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber()\n    };\n  }\n\n  return u8a;\n}\n\nfunction decodeMultiAny(registry, value) {\n  if (value instanceof GenericAccountId) {\n    return {\n      Id: value\n    };\n  } else if (isU8a(value)) {\n    // NOTE This is after the AccountId check (which is U8a)\n    return decodeU8a(registry, value);\n  } else if (value instanceof GenericMultiAddress) {\n    return value;\n  } else if (value instanceof GenericAccountIndex || isBn(value) || isNumber(value)) {\n    return {\n      Index: isNumber(value) ? value : value.toNumber()\n    };\n  } else if (isString(value)) {\n    return decodeU8a(registry, decodeAddress(value.toString()));\n  }\n\n  return value;\n}\n\nexport class GenericMultiAddress extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      Id: 'AccountId',\n      Index: 'Compact<AccountIndex>',\n      Raw: 'Bytes',\n      // eslint-disable-next-line sort-keys\n      Address32: 'H256',\n      // eslint-disable-next-line sort-keys\n      Address20: 'H160'\n    }, decodeMultiAny(registry, value));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const {\n      inner,\n      outer = []\n    } = this.inner.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.value.toString();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Bool, U8aFixed } from '@polkadot/types-codec';\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\n// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  return new Uint8Array([(new Bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS) | registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if (isU8a(value)) {\n    return decodeVoteU8a(value);\n  } else if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n    return decodeVoteBool(new Bool(registry, value).isTrue);\n  } else if (isNumber(value)) {\n    return decodeVoteBool(value < 0);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nexport class GenericVote extends U8aFixed {\n  #aye;\n  #conviction;\n\n  constructor(registry, value) {\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    const decoded = decodeVote(registry, value);\n    super(registry, decoded, 8);\n    this.#aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    this.#conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  get conviction() {\n    return this.#conviction;\n  }\n  /**\n   * @description true if the wrapped value is a positive vote\n   */\n\n\n  get isAye() {\n    return this.#aye;\n  }\n  /**\n   * @description true if the wrapped value is a negative vote\n   */\n\n\n  get isNay() {\n    return !this.isAye;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return {\n      conviction: this.conviction.toHuman(isExpanded),\n      vote: this.isAye ? 'Aye' : 'Nay'\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Vote';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // type overrides for modules (where duplication between modules exist)\n\nconst typesAlias = {\n  assets: {\n    Approval: 'AssetApproval',\n    ApprovalKey: 'AssetApprovalKey',\n    Balance: 'TAssetBalance',\n    DestroyWitness: 'AssetDestroyWitness'\n  },\n  babe: {\n    EquivocationProof: 'BabeEquivocationProof'\n  },\n  balances: {\n    Status: 'BalanceStatus'\n  },\n  beefy: {\n    AuthorityId: 'BeefyId'\n  },\n  contracts: {\n    StorageKey: 'ContractStorageKey'\n  },\n  electionProviderMultiPhase: {\n    Phase: 'ElectionPhase'\n  },\n  ethereum: {\n    Block: 'EthBlock',\n    Header: 'EthHeader',\n    Receipt: 'EthReceipt',\n    Transaction: 'EthTransaction',\n    TransactionStatus: 'EthTransactionStatus'\n  },\n  evm: {\n    Account: 'EvmAccount',\n    Log: 'EvmLog',\n    Vicinity: 'EvmVicinity'\n  },\n  grandpa: {\n    Equivocation: 'GrandpaEquivocation',\n    EquivocationProof: 'GrandpaEquivocationProof'\n  },\n  identity: {\n    Judgement: 'IdentityJudgement'\n  },\n  inclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parachains: {\n    Id: 'ParaId'\n  },\n  parasDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  proposeParachain: {\n    Proposal: 'ParachainProposal'\n  },\n  proxy: {\n    Announcement: 'ProxyAnnouncement'\n  },\n  scheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  shared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  society: {\n    Judgement: 'SocietyJudgement',\n    Vote: 'SocietyVote'\n  },\n  staking: {\n    Compact: 'CompactAssignments'\n  },\n  treasury: {\n    Proposal: 'TreasuryProposal'\n  },\n  xcm: {\n    AssetId: 'XcmAssetId'\n  },\n  xcmPallet: {\n    AssetId: 'XcmAssetId'\n  }\n};\n/**\n * @description Get types for specific modules (metadata override)\n */\n\nexport function getAliasTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return objectSpread({}, typesAlias[section], (_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetApprovalKey: {\n      owner: 'AccountId',\n      delegate: 'AccountId'\n    },\n    AssetApproval: {\n      amount: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance'\n    },\n    AssetBalance: {\n      balance: 'TAssetBalance',\n      isFrozen: 'bool',\n      isSufficient: 'bool'\n    },\n    AssetDestroyWitness: {\n      accounts: 'Compact<u32>',\n      sufficients: 'Compact<u32>',\n      approvals: 'Compact<u32>'\n    },\n    AssetDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      supply: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance',\n      minBalance: 'TAssetBalance',\n      isSufficient: 'bool',\n      accounts: 'u32',\n      sufficients: 'u32',\n      approvals: 'u32',\n      isFrozen: 'bool'\n    },\n    AssetMetadata: {\n      deposit: 'TAssetDepositBalance',\n      name: 'Vec<u8>',\n      symbol: 'Vec<u8>',\n      decimals: 'u8',\n      isFrozen: 'bool'\n    },\n    TAssetBalance: 'u64',\n    TAssetDepositBalance: 'BalanceOf'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BlockAttestations: {\n      receipt: 'CandidateReceipt',\n      valid: 'Vec<AccountId>',\n      invalid: 'Vec<AccountId>'\n    },\n    IncludedBlocks: {\n      actualNumber: 'BlockNumber',\n      session: 'SessionIndex',\n      randomSeed: 'H256',\n      activeParachains: 'Vec<ParaId>',\n      paraBlocks: 'Vec<Hash>'\n    },\n    MoreAttestations: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    RawAuraPreDigest: {\n      slotNumber: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    hasKey: {\n      description: 'Returns true if the keystore has private keys for the given public key and key type.',\n      params: [{\n        name: 'publicKey',\n        type: 'Bytes'\n      }, {\n        name: 'keyType',\n        type: 'Text'\n      }],\n      type: 'bool'\n    },\n    hasSessionKeys: {\n      description: 'Returns true if the keystore has private keys for the given session public keys.',\n      params: [{\n        name: 'sessionKeys',\n        type: 'Bytes'\n      }],\n      type: 'bool'\n    },\n    removeExtrinsic: {\n      description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',\n      params: [{\n        name: 'bytesOrHash',\n        type: 'Vec<ExtrinsicOrHash>'\n      }],\n      type: 'Vec<Hash>'\n    },\n    insertKey: {\n      description: 'Insert a key into the keystore.',\n      params: [{\n        name: 'keyType',\n        type: 'Text'\n      }, {\n        name: 'suri',\n        type: 'Text'\n      }, {\n        name: 'publicKey',\n        type: 'Bytes'\n      }],\n      type: 'Bytes'\n    },\n    rotateKeys: {\n      description: 'Generate new session keys and returns the corresponding public keys',\n      params: [],\n      type: 'Bytes'\n    },\n    pendingExtrinsics: {\n      description: 'Returns all pending extrinsics, potentially grouped by sender',\n      params: [],\n      type: 'Vec<Extrinsic>'\n    },\n    submitExtrinsic: {\n      isSigned: true,\n      description: 'Submit a fully formatted extrinsic for block inclusion',\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      type: 'Hash'\n    },\n    submitAndWatchExtrinsic: {\n      description: 'Submit and subscribe to watch an extrinsic until unsubscribed',\n      isSigned: true,\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],\n      type: 'ExtrinsicStatus'\n    }\n  },\n  types: {\n    ExtrinsicOrHash: {\n      _enum: {\n        Hash: 'Hash',\n        Extrinsic: 'Bytes'\n      }\n    },\n    ExtrinsicStatus: {\n      _enum: {\n        Future: 'Null',\n        Ready: 'Null',\n        Broadcast: 'Vec<Text>',\n        InBlock: 'Hash',\n        Retracted: 'Hash',\n        FinalityTimeout: 'Hash',\n        Finalized: 'Hash',\n        Usurped: 'Hash',\n        Dropped: 'Null',\n        Invalid: 'Null'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    UncleEntryItem: {\n      _enum: {\n        InclusionHeight: 'BlockNumber',\n        Uncle: '(Hash, Option<AccountId>)'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    epochAuthorship: {\n      description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',\n      params: [],\n      type: 'HashMap<AuthorityId, EpochAuthorship>'\n    }\n  },\n  types: {\n    AllowedSlots: {\n      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n    },\n    BabeAuthorityWeight: 'u64',\n    BabeEpochConfiguration: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    BabeBlockWeight: 'u32',\n    BabeEquivocationProof: {\n      offender: 'AuthorityId',\n      slotNumber: 'SlotNumber',\n      firstHeader: 'Header',\n      secondHeader: 'Header'\n    },\n    BabeWeight: 'u64',\n    MaybeRandomness: 'Option<Randomness>',\n    MaybeVrf: 'Option<VrfData>',\n    EpochAuthorship: {\n      primary: 'Vec<u64>',\n      secondary: 'Vec<u64>',\n      secondary_vrf: 'Vec<u64>'\n    },\n    NextConfigDescriptor: {\n      _enum: {\n        V0: 'Null',\n        V1: 'NextConfigDescriptorV1'\n      }\n    },\n    NextConfigDescriptorV1: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    Randomness: 'Hash',\n    RawBabePreDigest: {\n      _enum: {\n        Phantom: 'Null',\n        // index starts at 1... empty slot at 0\n        Primary: 'RawBabePreDigestPrimary',\n        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n      }\n    },\n    RawBabePreDigestPrimary: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryPlain: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber'\n    },\n    RawBabePreDigestSecondaryVRF: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestTo159: {\n      _enum: {\n        Primary: 'RawBabePreDigestPrimaryTo159',\n        Secondary: 'RawBabePreDigestSecondaryTo159'\n      }\n    },\n    RawBabePreDigestPrimaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight'\n    },\n    // a cross old/new compatible version of the digest, that is _only_ useful\n    // for partial parsing and extraction of the author. This assumes that all\n    // entries has the authorityIndex in the first position - and that it is all\n    // we are interested in\n    RawBabePreDigestCompat: {\n      _enum: {\n        Zero: 'u32',\n        One: 'u32',\n        Two: 'u32',\n        Three: 'u32'\n      }\n    },\n    SlotNumber: 'u64',\n    VrfData: '[u8; 32]',\n    VrfOutput: '[u8; 32]',\n    VrfProof: '[u8; 64]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountData: {\n      free: 'Balance',\n      reserved: 'Balance',\n      miscFrozen: 'Balance',\n      feeFrozen: 'Balance'\n    },\n    BalanceLockTo212: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      until: 'BlockNumber',\n      reasons: 'WithdrawReasons'\n    },\n    BalanceLock: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      reasons: 'Reasons'\n    },\n    BalanceStatus: {\n      _enum: ['Free', 'Reserved']\n    },\n    Reasons: {\n      _enum: ['Fee', 'Misc', 'All']\n    },\n    ReserveData: {\n      id: 'ReserveIdentifier',\n      amount: 'Balance'\n    },\n    ReserveIdentifier: '[u8; 8]',\n    VestingSchedule: {\n      offset: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    },\n    WithdrawReasons: {\n      _set: {\n        TransactionPayment: 0b00000001,\n        Transfer: 0b00000010,\n        Reserve: 0b00000100,\n        Fee: 0b00001000,\n        Tip: 0b00010000\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    subscribeJustifications: {\n      description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'BeefySignedCommitment'\n    },\n    getFinalizedHead: {\n      description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',\n      params: [],\n      type: 'H256'\n    }\n  },\n  types: {\n    BeefyCommitment: {\n      payload: 'BeefyPayload',\n      blockNumber: 'BlockNumber',\n      validatorSetId: 'ValidatorSetId'\n    },\n    BeefyId: '[u8; 33]',\n    BeefySignedCommitment: {\n      commitment: 'BeefyCommitment',\n      signatures: 'Vec<Option<EcdsaSignature>>'\n    },\n    BeefyNextAuthoritySet: {\n      id: 'u64',\n      len: 'u32',\n      root: 'H256'\n    },\n    BeefyPayload: 'MmrRootHash',\n    MmrRootHash: 'H256',\n    ValidatorSetId: 'u64'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BridgedBlockHash: 'H256',\n    BridgedBlockNumber: 'BlockNumber',\n    BridgedHeader: 'Header',\n    BridgeMessageId: '(LaneId, MessageNonce)',\n    CallOrigin: {\n      _enum: {\n        SourceRoot: 'Null',\n        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n        SourceAccount: 'AccountId'\n      }\n    },\n    ChainId: '[u8; 4]',\n    DeliveredMessages: {\n      begin: 'MessageNonce',\n      end: 'MessageNonce',\n      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n      dispatchResults: 'BitVec'\n    },\n    DispatchFeePayment: {\n      _enum: ['AtSourceChain', 'AtTargetChain']\n    },\n    InboundLaneData: {\n      relayers: 'Vec<UnrewardedRelayer>',\n      lastConfirmedNonce: 'MessageNonce'\n    },\n    InboundRelayer: 'AccountId',\n    InitializationData: {\n      header: 'Header',\n      authorityList: 'AuthorityList',\n      setId: 'SetId',\n      isHalted: 'bool'\n    },\n    LaneId: '[u8; 4]',\n    MessageData: {\n      payload: 'Bytes',\n      fee: 'Balance'\n    },\n    MessagesDeliveryProofOf: {\n      bridgedHeaderHash: 'BlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId'\n    },\n    MessageKey: {\n      laneId: 'LaneId',\n      nonce: 'MessageNonce'\n    },\n    MessageNonce: 'u64',\n    MessagesProofOf: {\n      bridgedHeaderHash: 'BridgedBlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId',\n      noncesStart: 'MessageNonce',\n      noncesEnd: 'MessageNonce'\n    },\n    OperatingMode: {\n      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n    },\n    OutboundLaneData: {\n      oldestUnprunedNonce: 'MessageNonce',\n      latestReceivedNonce: 'MessageNonce',\n      latestGeneratedNonce: 'MessageNonce'\n    },\n    OutboundMessageFee: 'Balance',\n    OutboundPayload: {\n      specVersion: 'u32',\n      weight: 'Weight',\n      origin: 'CallOrigin',\n      dispatchFeePayment: 'DispatchFeePayment',\n      call: 'Bytes'\n    },\n    Parameter: 'Null',\n    RelayerId: 'AccountId',\n    UnrewardedRelayer: {\n      relayer: 'RelayerId',\n      messages: 'DeliveredMessages'\n    },\n    UnrewardedRelayersState: {\n      unrewardedRelayer_Entries: 'MessageNonce',\n      messagesInOldestEntry: 'MessageNonce',\n      totalMessages: 'MessageNonce'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getHeader: {\n      alias: ['chain_getHead'],\n      description: 'Retrieves the header for a specific block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Header'\n    },\n    getBlock: {\n      description: 'Get header and body of a relay chain block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'SignedBlock'\n    },\n    getBlockHash: {\n      description: 'Get the block hash for a specific block',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber',\n        isOptional: true\n      }],\n      type: 'BlockHash'\n    },\n    getFinalizedHead: {\n      alias: ['chain_getFinalisedHead'],\n      description: 'Get hash of the last finalized block in the canon chain',\n      params: [],\n      type: 'BlockHash'\n    },\n    subscribeNewHeads: {\n      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n      description: 'Retrieves the best header via subscription',\n      params: [],\n      // NOTE These still has the aliassed version, compatible with 1.x\n      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n      type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n      description: 'Retrieves the best finalized header via subscription',\n      params: [],\n      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n      type: 'Header'\n    },\n    subscribeAllHeads: {\n      description: 'Retrieves the newest header via subscription',\n      params: [],\n      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n      type: 'Header'\n    }\n  },\n  types: {\n    BlockHash: 'Hash'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getKeys: {\n      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n      alias: ['childstate_getKeysPagedAt'],\n      description: 'Returns the keys with prefix from a child storage with pagination support',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      description: 'Returns a child storage entry at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n      description: 'Returns child storage entries for multiple keys at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n      description: 'Returns the hash of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Hash>'\n    },\n    getStorageSize: {\n      description: 'Returns the size of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<u64>'\n    }\n  },\n  types: {\n    // StorageKey extends Bytes\n    PrefixedStorageKey: 'StorageKey'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    StatementKind: {\n      _enum: ['Regular', 'Saft']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CollectiveOrigin: {\n      _enum: {\n        Members: '(MemberCount, MemberCount)',\n        Member: 'AccountId'\n      }\n    },\n    MemberCount: 'u32',\n    ProposalIndex: 'u32',\n    VotesTo230: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>'\n    },\n    Votes: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>',\n      end: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthorityId: 'AccountId',\n    RawVRFOutput: '[u8; 32]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport rpc from \"./rpc.js\";\nexport default {\n  rpc,\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      pairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      rentPaid: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>',\n      _reserved: 'Option<Null>'\n    },\n    CodeHash: 'Hash',\n    CodeSource: {\n      _enum: {\n        Upload: 'Bytes',\n        Existing: 'Hash'\n      }\n    },\n    CodeUploadRequest: {\n      origin: 'AccountId',\n      code: 'Bytes',\n      storageDepositLimit: 'Option<Balance>'\n    },\n    CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',\n    CodeUploadResultValue: {\n      codeHash: 'CodeHash',\n      deposit: 'Balance'\n    },\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      storageDepositLimit: 'Option<Balance>',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccessTo260: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResultTo260: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo260',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultOk: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',\n    ContractExecResultTo267: {\n      gasConsumed: 'u64',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractExecResult: {\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractCallFlags: {\n      _set: {\n        _bitLength: 32,\n        ForwardInput: 0b00000001,\n        CloneInput: 0b00000010,\n        TailCall: 0b00000100,\n        AllowReentry: 0b00001000\n      }\n    },\n    ContractReturnFlags: {\n      _set: {\n        _bitLength: 32,\n        Revert: 0x00000001\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    DeletedContract: {\n      pairCount: 'u32',\n      trieId: 'TrieId'\n    },\n    ExecReturnValue: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    Gas: 'u64',\n    HostFnWeightsTo264: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      terminatePerCodeByte: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerCallerCodeByte: 'Weight',\n      restoreToPerTombstoneCodeByte: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callPerCodeByte: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerCodeByte: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      instantiatePerSaltByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight',\n      rentParams: 'Weight'\n    },\n    InstantiateRequestV1: {\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequestV2: {\n      _fallback: 'InstantiateRequestV1',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequest: {\n      _fallback: 'InstantiateRequestV2',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'CodeSource',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',\n    ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',\n    ContractInstantiateResult: {\n      _fallback: 'ContractInstantiateResultTo299',\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'InstantiateReturnValue'\n    },\n    InstantiateReturnValueTo267: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId',\n      rentProjection: 'Option<RentProjection>'\n    },\n    InstantiateReturnValueOk: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId'\n    },\n    InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',\n    InstructionWeights: {\n      i64const: 'u32',\n      i64load: 'u32',\n      i64store: 'u32',\n      select: 'u32',\n      rIf: 'u32',\n      br: 'u32',\n      brIf: 'u32',\n      brIable: 'u32',\n      brIablePerEntry: 'u32',\n      call: 'u32',\n      callIndirect: 'u32',\n      callIndirectPerParam: 'u32',\n      localGet: 'u32',\n      localSet: 'u32',\n      local_tee: 'u32',\n      globalGet: 'u32',\n      globalSet: 'u32',\n      memoryCurrent: 'u32',\n      memoryGrow: 'u32',\n      i64clz: 'u32',\n      i64ctz: 'u32',\n      i64popcnt: 'u32',\n      i64eqz: 'u32',\n      i64extendsi32: 'u32',\n      i64extendui32: 'u32',\n      i32wrapi64: 'u32',\n      i64eq: 'u32',\n      i64ne: 'u32',\n      i64lts: 'u32',\n      i64ltu: 'u32',\n      i64gts: 'u32',\n      i64gtu: 'u32',\n      i64les: 'u32',\n      i64leu: 'u32',\n      i64ges: 'u32',\n      i64geu: 'u32',\n      i64add: 'u32',\n      i64sub: 'u32',\n      i64mul: 'u32',\n      i64divs: 'u32',\n      i64divu: 'u32',\n      i64rems: 'u32',\n      i64remu: 'u32',\n      i64and: 'u32',\n      i64or: 'u32',\n      i64xor: 'u32',\n      i64shl: 'u32',\n      i64shrs: 'u32',\n      i64shru: 'u32',\n      i64rotl: 'u32',\n      i64rotr: 'u32'\n    },\n    LimitsTo264: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32',\n      codeSize: 'u32'\n    },\n    Limits: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      refcount: 'Compact<u64>',\n      _reserved: 'Option<Null>',\n      code: 'Bytes',\n      originalCodeLen: 'u32'\n    },\n    RentProjection: {\n      _enum: {\n        EvictionAt: 'BlockNumber',\n        NoEviction: 'Null'\n      }\n    },\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo264: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'LimitsTo264',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeightsTo264'\n    },\n    Schedule: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'Limits',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights'\n    },\n    SeedOf: 'Hash',\n    StorageDeposit: {\n      _enum: {\n        Refund: 'Balance',\n        Charge: 'Balance'\n      }\n    },\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  call: {\n    description: 'Executes a call to a contract',\n    params: [{\n      name: 'callRequest',\n      type: 'ContractCallRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'ContractExecResult'\n  },\n  instantiate: {\n    description: 'Instantiate a new contract',\n    params: [{\n      name: 'request',\n      type: 'InstantiateRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'ContractInstantiateResult'\n  },\n  uploadCode: {\n    // The RPC here is terribly misnamed - somebody forgot how the RPCs\n    // are actually done, ie. <module>_<camelCasedMethod>\n    endpoint: 'contracts_upload_code',\n    description: 'Upload new code without instantiating a contract from it',\n    params: [{\n      name: 'uploadRequest',\n      type: 'CodeUploadRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'CodeUploadResult'\n  },\n  getStorage: {\n    description: 'Returns the value under a specified storage key in a contract',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'key',\n      type: 'H256'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<Bytes>'\n  },\n  rentProjection: {\n    description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<BlockNumber>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst layout = {\n  ContractCryptoHasher: {\n    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n  },\n  ContractDiscriminant: 'u32',\n  ContractLayoutArray: {\n    offset: 'ContractLayoutKey',\n    len: 'u32',\n    cellsPerElem: 'u64',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutCell: {\n    key: 'ContractLayoutKey',\n    ty: 'SiLookupTypeId'\n  },\n  ContractLayoutEnum: {\n    dispatchKey: 'ContractLayoutKey',\n    variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'\n  },\n  ContractLayoutHash: {\n    offset: 'ContractLayoutKey',\n    strategy: 'ContractLayoutHashingStrategy',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutHashingStrategy: {\n    hasher: 'ContractCryptoHasher',\n    postfix: 'Vec<u8>',\n    prefix: 'Vec<u8>'\n  },\n  ContractLayoutKey: '[u8; 32]',\n  ContractLayoutStruct: {\n    fields: 'Vec<ContractLayoutStructField>'\n  },\n  ContractLayoutStructField: {\n    layout: 'ContractStorageLayout',\n    name: 'Text'\n  },\n  ContractStorageLayout: {\n    _enum: {\n      Cell: 'ContractLayoutCell',\n      Hash: 'ContractLayoutHash',\n      Array: 'ContractLayoutArray',\n      Struct: 'ContractLayoutStruct',\n      Enum: 'ContractLayoutEnum'\n    }\n  }\n};\nconst spec = {\n  ContractConstructorSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV3: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV0: {\n    constructors: 'Vec<ContractConstructorSpecV0>',\n    messages: 'Vec<ContractMessageSpecV0>',\n    events: 'Vec<ContractEventSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV1: {\n    constructors: 'Vec<ContractConstructorSpecV1>',\n    messages: 'Vec<ContractMessageSpecV1>',\n    events: 'Vec<ContractEventSpecV1>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV2: {\n    constructors: 'Vec<ContractConstructorSpecV2>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV3: {\n    constructors: 'Vec<ContractConstructorSpecV3>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractDisplayName: 'SiPath',\n  ContractEventParamSpecV0: {\n    name: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventParamSpecV2: {\n    label: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV0: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV1: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV2: {\n    label: 'Text',\n    args: 'Vec<ContractEventParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageParamSpecV0: {\n    name: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageParamSpecV2: {\n    label: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractSelector: '[u8; 4]',\n  ContractTypeSpec: {\n    type: 'SiLookupTypeId',\n    displayName: 'ContractDisplayName'\n  }\n};\nconst ContractMetadataV0 = {\n  types: 'Vec<Si0Type>',\n  spec: 'ContractContractSpecV0'\n};\nconst ContractMetadataV1 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV1'\n};\nconst ContractMetadataV2 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV2'\n};\nconst ContractMetadataV3 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV3'\n};\nconst ContractProjectInfo = {\n  source: 'ContractProjectSource',\n  contract: 'ContractProjectContract'\n};\nconst latest = {\n  ContractConstructorSpecLatest: 'ContractConstructorSpecV3',\n  ContractEventSpecLatest: 'ContractEventSpecV2',\n  ContractEventParamSpecLatest: 'ContractEventParamSpecV2',\n  ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',\n  ContractMessageSpecLatest: 'ContractMessageSpecV2',\n  ContractMetadataLatest: 'ContractMetadataV3'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, layout, spec, latest, {\n    ContractProjectInfo,\n    ContractMetadataV0,\n    ContractMetadataV1,\n    ContractMetadataV2,\n    ContractMetadataV3,\n    ContractMetadata: {\n      _enum: {\n        V0: 'ContractMetadataV0',\n        V1: 'ContractMetadataV1',\n        V2: 'ContractMetadataV2',\n        V3: 'ContractMetadataV3'\n      }\n    },\n    ContractProjectV0: objectSpread({\n      metadataVersion: 'Text'\n    }, ContractProjectInfo, ContractMetadataV0),\n    ContractProject: '(ContractProjectInfo, ContractMetadata)',\n    ContractProjectContract: {\n      _alias: {\n        docs: 'documentation'\n      },\n      name: 'Text',\n      version: 'Text',\n      authors: 'Vec<Text>',\n      description: 'Option<Text>',\n      docs: 'Option<Text>',\n      repository: 'Option<Text>',\n      homepage: 'Option<Text>',\n      license: 'Option<Text>'\n    },\n    ContractProjectSource: {\n      _alias: {\n        wasmHash: 'hash'\n      },\n      wasmHash: '[u8; 32]',\n      language: 'Text',\n      compiler: 'Text',\n      wasm: 'Raw'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    FundIndex: 'u32',\n    LastContribution: {\n      _enum: {\n        Never: 'Null',\n        PreEnding: 'u32',\n        Ending: 'BlockNumber'\n      }\n    },\n    FundInfo: {\n      depositor: 'AccountId',\n      verifier: 'Option<MultiSigner>',\n      deposit: 'Balance',\n      raised: 'Balance',\n      end: 'BlockNumber',\n      cap: 'Balance',\n      lastContribution: 'LastContribution',\n      firstPeriod: 'LeasePeriod',\n      lastPeriod: 'LeasePeriod',\n      trieIndex: 'TrieIndex'\n    },\n    TrieIndex: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst dmpQueue = {\n  ConfigData: {\n    maxIndividual: 'Weight'\n  },\n  MessageId: '[u8; 32]',\n  OverweightIndex: 'u64',\n  PageCounter: 'u32',\n  PageIndexData: {\n    beginUsed: 'PageCounter',\n    endUsed: 'PageCounter',\n    overweightCount: 'OverweightIndex'\n  }\n};\nexport default {\n  rpc: {},\n  types: dmpQueue\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllConvictions = [// 0.1x votes, unlocked.\n'None', // 1x votes, locked for an enactment period following a successful vote.\n'Locked1x', // 2x votes, locked for 2x enactment periods following a successful vote.\n'Locked2x', // 3x votes, locked for 4x...\n'Locked3x', // 4x votes, locked for 8x...\n'Locked4x', // 5x votes, locked for 16x...\n'Locked5x', /// 6x votes, locked for 32x...\n'Locked6x'];\nexport default {\n  rpc: {},\n  types: {\n    AccountVote: {\n      _enum: {\n        Standard: 'AccountVoteStandard',\n        Split: 'AccountVoteSplit'\n      }\n    },\n    AccountVoteSplit: {\n      aye: 'Balance',\n      nay: 'Balance'\n    },\n    AccountVoteStandard: {\n      vote: 'Vote',\n      balance: 'Balance'\n    },\n    Conviction: {\n      _enum: AllConvictions\n    },\n    Delegations: {\n      votes: 'Balance',\n      capital: 'Balance'\n    },\n    PreimageStatus: {\n      _enum: {\n        Missing: 'BlockNumber',\n        Available: 'PreimageStatusAvailable'\n      }\n    },\n    PreimageStatusAvailable: {\n      data: 'Bytes',\n      provider: 'AccountId',\n      deposit: 'Balance',\n      since: 'BlockNumber',\n      expiry: 'Option<BlockNumber>'\n    },\n    PriorLock: '(BlockNumber, Balance)',\n    PropIndex: 'u32',\n    Proposal: 'Call',\n    ProxyState: {\n      _enum: {\n        Open: 'AccountId',\n        Active: 'AccountId'\n      }\n    },\n    ReferendumIndex: 'u32',\n    ReferendumInfoTo239: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber'\n    },\n    ReferendumInfo: {\n      _enum: {\n        Ongoing: 'ReferendumStatus',\n        Finished: 'ReferendumInfoFinished'\n      }\n    },\n    ReferendumInfoFinished: {\n      approved: 'bool',\n      end: 'BlockNumber'\n    },\n    ReferendumStatus: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber',\n      tally: 'Tally'\n    },\n    Tally: {\n      ayes: 'Balance',\n      nays: 'Balance',\n      turnout: 'Balance'\n    },\n    Voting: {\n      _enum: {\n        Direct: 'VotingDirect',\n        Delegating: 'VotingDelegating'\n      }\n    },\n    VotingDirect: {\n      votes: 'Vec<VotingDirectVote>',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    },\n    VotingDirectVote: '(ReferendumIndex, AccountVote)',\n    VotingDelegating: {\n      balance: 'Balance',\n      target: 'AccountId',\n      conviction: 'Conviction',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getBlockStats: {\n      description: 'Reexecute the specified `block_hash` and gather statistics while doing so',\n      params: [{\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true\n      }],\n      type: 'Option<BlockStats>'\n    }\n  },\n  types: {\n    BlockStats: {\n      witnessLen: 'u64',\n      witnessCompactLen: 'u64',\n      blockLen: 'u64',\n      blockNumExtrinsics: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ApprovalFlag: 'u32',\n    DefunctVoter: {\n      who: 'AccountId',\n      voteCount: 'Compact<u32>',\n      candidateCount: 'Compact<u32>'\n    },\n    Renouncing: {\n      _enum: {\n        Member: 'Null',\n        RunnerUp: 'Null',\n        Candidate: 'Compact<u32>'\n      }\n    },\n    SetIndex: 'u32',\n    Vote: 'GenericVote',\n    VoteIndex: 'u32',\n    VoterInfo: {\n      lastActive: 'VoteIndex',\n      lastWin: 'VoteIndex',\n      pot: 'Balance',\n      stake: 'Balance'\n    },\n    VoteThreshold: {\n      _enum: ['Super Majority Approve', 'Super Majority Against', 'Simple Majority']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    createBlock: {\n      description: 'Instructs the manual-seal authorship task to create a new block',\n      params: [{\n        name: 'createEmpty',\n        type: 'bool'\n      }, {\n        name: 'finalize',\n        type: 'bool'\n      }, {\n        name: 'parentHash',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'CreatedBlock'\n    },\n    finalizeBlock: {\n      description: 'Instructs the manual-seal authorship task to finalize a block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash'\n      }, {\n        name: 'justification',\n        type: 'Justification',\n        isOptional: true\n      }],\n      type: 'bool'\n    }\n  },\n  types: {\n    CreatedBlock: {\n      _alias: {\n        blockHash: 'hash'\n      },\n      blockHash: 'BlockHash',\n      aux: 'ImportedAux'\n    },\n    ImportedAux: {\n      headerOnly: 'bool',\n      clearJustificationRequests: 'bool',\n      needsJustification: 'bool',\n      badJustification: 'bool',\n      needsFinalityProof: 'bool',\n      isNewBest: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// As per frontier\nimport { objectSpread } from '@polkadot/util';\nimport { rpc } from \"./rpc.js\";\nconst V0 = {\n  BlockV0: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV0>',\n    ommers: 'Vec<EthHeader>'\n  },\n  LegacyTransaction: {\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    signature: 'EthTransactionSignature'\n  },\n  TransactionV0: 'LegacyTransaction'\n};\nconst V1 = {\n  BlockV1: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV1>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP2930Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV1: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction'\n    }\n  }\n};\nconst V2 = {\n  BlockV2: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV2>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP1559Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    maxPriorityFeePerGas: 'U256',\n    maxFeePerGas: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV2: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction',\n      EIP1559: 'EIP1559Transaction'\n    }\n  }\n};\nconst types = objectSpread({}, V0, V1, V2, {\n  EthereumAccountId: 'GenericEthereumAccountId',\n  EthereumAddress: 'GenericEthereumAccountId',\n  EthereumLookupSource: 'GenericEthereumLookupSource',\n  EthereumSignature: '[u8; 65]',\n  EthAccessListItem: {\n    address: 'EthAddress',\n    slots: 'Vec<H256>'\n  },\n  EthAccessList: 'Vec<EthAccessListItem>',\n  EthAccount: {\n    address: 'EthAddress',\n    balance: 'U256',\n    nonce: 'U256',\n    codeHash: 'H256',\n    storageHash: 'H256',\n    accountProof: 'Vec<Bytes>',\n    storageProof: 'Vec<EthStorageProof>'\n  },\n  EthAddress: 'H160',\n  EthBlock: {\n    header: 'EthHeader',\n    transactions: 'Vec<EthTransaction>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EthHeader: {\n    parentHash: 'H256',\n    ommersHash: 'H256',\n    beneficiary: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    logsBloom: 'EthBloom',\n    difficulty: 'U256',\n    number: 'U256',\n    gasLimit: 'U256',\n    gasUsed: 'U256',\n    timestamp: 'u64',\n    extraData: 'Bytes',\n    mixMash: 'H256',\n    nonce: 'H64'\n  },\n  EthRichBlock: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    totalDifficulty: 'Option<U256>',\n    sealFields: 'Vec<Bytes>',\n    uncles: 'Vec<H256>',\n    transactions: 'Vec<EthTransaction>',\n    blockSize: 'Option<U256>'\n  },\n  EthBloom: 'H2048',\n  EthCallRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthFilter: {\n    fromBlock: 'Option<BlockNumber>',\n    toBlock: 'Option<BlockNumber>',\n    blockHash: 'Option<H256>',\n    address: 'Option<EthFilterAddress>',\n    topics: 'Option<EthFilterTopic>'\n  },\n  EthFilterAddress: {\n    _enum: {\n      Single: 'EthAddress',\n      Multiple: 'Vec<EthAddress>',\n      Null: 'Null'\n    }\n  },\n  EthFilterChanges: {\n    _enum: {\n      Logs: 'Vec<EthLog>',\n      Hashes: 'Vec<H256>',\n      Empty: 'Null'\n    }\n  },\n  EthFilterTopic: {\n    _enum: {\n      Single: 'EthFilterTopicInner',\n      Multiple: 'Vec<EthFilterTopicInner>',\n      Null: 'Null'\n    }\n  },\n  EthFilterTopicEntry: 'Option<H256>',\n  EthFilterTopicInner: {\n    _enum: {\n      Single: 'EthFilterTopicEntry',\n      Multiple: 'Vec<EthFilterTopicEntry>',\n      Null: 'Null'\n    }\n  },\n  EthRichHeader: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    sealFields: 'Vec<Bytes>',\n    blockSize: 'Option<U256>'\n  },\n  EthLog: {\n    address: 'EthAddress',\n    topics: 'Vec<H256>',\n    data: 'Bytes',\n    blockHash: 'Option<H256>',\n    blockNumber: 'Option<U256>',\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    logIndex: 'Option<U256>',\n    transactionLogIndex: 'Option<U256>',\n    removed: 'bool'\n  },\n  EthReceipt: {\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    blockHash: 'Option<H256>',\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    blockNumber: 'Option<U256>',\n    cumulativeGasUsed: 'U256',\n    gasUsed: 'Option<U256>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    root: 'Option<H256>',\n    logsBloom: 'EthBloom',\n    statusCode: 'Option<U64>'\n  },\n  EthStorageProof: {\n    key: 'U256',\n    value: 'U256',\n    proof: 'Vec<Bytes>'\n  },\n  EthSubKind: {\n    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n  },\n  EthSubParams: {\n    _enum: {\n      None: 'Null',\n      Logs: 'EthFilter'\n    }\n  },\n  EthSubResult: {\n    _enum: {\n      Header: 'EthRichHeader',\n      Log: 'EthLog',\n      TransactionHash: 'H256',\n      SyncState: 'EthSyncStatus'\n    }\n  },\n  EthSyncInfo: {\n    startingBlock: 'U256',\n    currentBlock: 'U256',\n    highestBlock: 'U256',\n    warpChunksAmount: 'Option<U256>',\n    warpChunksProcessed: 'Option<U256>'\n  },\n  EthSyncStatus: {\n    _enum: {\n      Info: 'EthSyncInfo',\n      None: 'Null'\n    }\n  },\n  EthTransaction: 'LegacyTransaction',\n  EthTransactionSignature: {\n    v: 'u64',\n    r: 'H256',\n    s: 'H256'\n  },\n  EthTransactionAction: {\n    _enum: {\n      Call: 'H160',\n      Create: 'Null'\n    }\n  },\n  EthTransactionCondition: {\n    _enum: {\n      block: 'u64',\n      time: 'u64'\n    }\n  },\n  EthTransactionRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthTransactionStatus: {\n    transactionHash: 'H256',\n    transactionIndex: 'u32',\n    from: 'EthAddress',\n    to: 'Option<EthAddress>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    logsBloom: 'EthBloom'\n  },\n  EthWork: {\n    powHash: 'H256',\n    seedHash: 'H256',\n    target: 'H256',\n    number: 'Option<u64>'\n  }\n});\nexport default {\n  rpc,\n  types\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// As per frontier\nimport { objectSpread } from '@polkadot/util'; // We use aliasSection here to override since these are in another namespace\n\nconst netRpc = {\n  listening: {\n    aliasSection: 'net',\n    description: 'Returns true if client is actively listening for network connections. Otherwise false.',\n    params: [],\n    type: 'bool'\n  },\n  peerCount: {\n    aliasSection: 'net',\n    description: 'Returns number of peers connected to node.',\n    params: [],\n    type: 'String'\n  },\n  version: {\n    aliasSection: 'net',\n    description: 'Returns protocol version.',\n    params: [],\n    type: 'String'\n  }\n};\nconst web3Rpc = {\n  clientVersion: {\n    aliasSection: 'web3',\n    description: 'Returns current client version.',\n    params: [],\n    type: 'String'\n  },\n  sha3: {\n    aliasSection: 'web3',\n    description: 'Returns sha3 of the given data',\n    params: [{\n      name: 'data',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  }\n};\nexport const rpc = objectSpread({}, netRpc, web3Rpc, {\n  accounts: {\n    description: 'Returns accounts list.',\n    params: [],\n    type: 'Vec<H160>'\n  },\n  blockNumber: {\n    description: 'Returns the blockNumber',\n    params: [],\n    type: 'U256'\n  },\n  call: {\n    description: 'Call contract, returning the output data.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  chainId: {\n    description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',\n    params: [],\n    type: 'U64'\n  },\n  coinbase: {\n    description: 'Returns block author.',\n    params: [],\n    type: 'H160'\n  },\n  estimateGas: {\n    description: 'Estimate gas needed for execution of given contract.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  gasPrice: {\n    description: 'Returns current gas price.',\n    params: [],\n    type: 'U256'\n  },\n  getBalance: {\n    description: 'Returns balance of the given account.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getBlockByHash: {\n    description: 'Returns block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockByNumber: {\n    description: 'Returns block with given number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockTransactionCountByHash: {\n    description: 'Returns the number of transactions in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getBlockTransactionCountByNumber: {\n    description: 'Returns the number of transactions in a block with given block number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getCode: {\n    description: 'Returns the code at given address at given time (block number).',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  getFilterChanges: {\n    description: 'Returns filter changes since last poll.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthFilterChanges'\n  },\n  getFilterLogs: {\n    description: 'Returns all logs matching given filter (in a range \\'from\\' - \\'to\\').',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getLogs: {\n    description: 'Returns logs matching given filter object.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getProof: {\n    description: 'Returns proof for account and storage.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'storageKeys',\n      type: 'Vec<H256>'\n    }, {\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'EthAccount'\n  },\n  getStorageAt: {\n    description: 'Returns content of the storage at given address.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'H256'\n  },\n  getTransactionByBlockHashAndIndex: {\n    description: 'Returns transaction at given block hash and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByBlockNumberAndIndex: {\n    description: 'Returns transaction by given block number and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByHash: {\n    description: 'Get transaction by its hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionCount: {\n    description: 'Returns the number of transactions sent from given address at given time (block number).',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getTransactionReceipt: {\n    description: 'Returns transaction receipt by transaction hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthReceipt'\n  },\n  getUncleByBlockHashAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleByBlockNumberAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleCountByBlockHash: {\n    description: 'Returns the number of uncles in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getUncleCountByBlockNumber: {\n    description: 'Returns the number of uncles in a block with given block number.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getWork: {\n    description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',\n    params: [],\n    type: 'EthWork'\n  },\n  hashrate: {\n    description: 'Returns the number of hashes per second that the node is mining with.',\n    params: [],\n    type: 'U256'\n  },\n  mining: {\n    description: 'Returns true if client is actively mining new blocks.',\n    params: [],\n    type: 'bool'\n  },\n  newBlockFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  newFilter: {\n    description: 'Returns id of new filter.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'U256'\n  },\n  newPendingTransactionFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  protocolVersion: {\n    description: 'Returns protocol version encoded as a string (quotes are necessary).',\n    params: [],\n    type: 'u64'\n  },\n  sendRawTransaction: {\n    description: 'Sends signed transaction, returning its hash.',\n    params: [{\n      name: 'bytes',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  },\n  sendTransaction: {\n    description: 'Sends transaction; will block waiting for signer to return the transaction hash',\n    params: [{\n      name: 'tx',\n      type: 'EthTransactionRequest'\n    }],\n    type: 'H256'\n  },\n  submitHashrate: {\n    description: 'Used for submitting mining hashrate.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }, {\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  submitWork: {\n    description: 'Used for submitting a proof-of-work solution.',\n    params: [{\n      name: 'nonce',\n      type: 'H64'\n    }, {\n      name: 'headerHash',\n      type: 'H256'\n    }, {\n      name: 'mixDigest',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  subscribe: {\n    description: 'Subscribe to Eth subscription.',\n    params: [{\n      name: 'kind',\n      type: 'EthSubKind'\n    }, {\n      isOptional: true,\n      name: 'params',\n      type: 'EthSubParams'\n    }],\n    pubsub: ['subscription', 'subscribe', 'unsubscribe'],\n    type: 'Null'\n  },\n  syncing: {\n    description: 'Returns an object with data about the sync status or false.',\n    params: [],\n    type: 'EthSyncStatus'\n  },\n  uninstallFilter: {\n    description: 'Uninstalls filter.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'bool'\n  }\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    EvmAccount: {\n      nonce: 'u256',\n      balance: 'u256'\n    },\n    EvmLog: {\n      address: 'H160',\n      topics: 'Vec<H256>',\n      data: 'Bytes'\n    },\n    EvmVicinity: {\n      gasPrice: 'u256',\n      origin: 'H160'\n    },\n    ExitError: {\n      _enum: {\n        StackUnderflow: 'Null',\n        StackOverflow: 'Null',\n        InvalidJump: 'Null',\n        InvalidRange: 'Null',\n        DesignatedInvalid: 'Null',\n        CallTooDeep: 'Null',\n        CreateCollision: 'Null',\n        CreateContractLimit: 'Null',\n        OutOfOffset: 'Null',\n        OutOfGas: 'Null',\n        OutOfFund: 'Null',\n        PCUnderflow: 'Null',\n        CreateEmpty: 'Null',\n        Other: 'Text'\n      }\n    },\n    ExitFatal: {\n      _enum: {\n        NotSupported: 'Null',\n        UnhandledInterrupt: 'Null',\n        CallErrorAsFatal: 'ExitError',\n        Other: 'Text'\n      }\n    },\n    ExitReason: {\n      _enum: {\n        Succeed: 'ExitSucceed',\n        Error: 'ExitError',\n        Revert: 'ExitRevert',\n        Fatal: 'ExitFatal'\n      }\n    },\n    ExitRevert: {\n      _enum: ['Reverted']\n    },\n    ExitSucceed: {\n      _enum: ['Stopped', 'Returned', 'Suicided']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Extrinsic: 'GenericExtrinsic',\n    ExtrinsicEra: 'GenericExtrinsicEra',\n    ExtrinsicPayload: 'GenericExtrinsicPayload',\n    ExtrinsicSignature: 'MultiSignature',\n    ExtrinsicV4: 'GenericExtrinsicV4',\n    ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',\n    ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',\n    ExtrinsicUnknown: 'GenericExtrinsicUnknown',\n    ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',\n    // eras\n    Era: 'ExtrinsicEra',\n    ImmortalEra: 'GenericImmortalEra',\n    MortalEra: 'GenericMortalEra',\n    // signatures & signer\n    AnySignature: 'H512',\n    MultiSignature: {\n      _enum: {\n        Ed25519: 'Ed25519Signature',\n        Sr25519: 'Sr25519Signature',\n        Ecdsa: 'EcdsaSignature'\n      }\n    },\n    Signature: 'H512',\n    SignerPayload: 'GenericSignerPayload',\n    EcdsaSignature: '[u8; 65]',\n    Ed25519Signature: 'H512',\n    Sr25519Signature: 'H512'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetOptions: {\n      initalIssuance: 'Compact<Balance>',\n      permissions: 'PermissionLatest'\n    },\n    Owner: {\n      _enum: {\n        None: 'Null',\n        Address: 'AccountId'\n      }\n    },\n    PermissionsV1: {\n      update: 'Owner',\n      mint: 'Owner',\n      burn: 'Owner'\n    },\n    PermissionVersions: {\n      _enum: {\n        V1: 'PermissionsV1'\n      }\n    },\n    PermissionLatest: 'PermissionsV1'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveGilt: {\n      proportion: 'Perquintill',\n      amount: 'Balance',\n      who: 'AccountId',\n      expiry: 'BlockNumber'\n    },\n    ActiveGiltsTotal: {\n      frozen: 'Balance',\n      proportion: 'Perquintill',\n      index: 'ActiveIndex',\n      target: 'Perquintill'\n    },\n    ActiveIndex: 'u32',\n    GiltBid: {\n      amount: 'Balance',\n      who: 'AccountId'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    proveFinality: {\n      description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber'\n      }],\n      type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n      description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n      params: [],\n      type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n      description: 'Subscribes to grandpa justifications',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'JustificationNotification'\n    }\n  },\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    IdentityFields: {\n      _set: {\n        _bitLength: 64,\n        // Mapped here to 32 bits, in Rust these are 64-bit values\n        Display: 0b00000000000000000000000000000001,\n        Legal: 0b00000000000000000000000000000010,\n        Web: 0b00000000000000000000000000000100,\n        Riot: 0b00000000000000000000000000001000,\n        Email: 0b00000000000000000000000000010000,\n        PgpFingerprint: 0b00000000000000000000000000100000,\n        Image: 0b00000000000000000000000001000000,\n        Twitter: 0b00000000000000000000000010000000\n      }\n    },\n    IdentityInfoAdditional: '(Data, Data)',\n    IdentityInfoTo198: {\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data'\n    },\n    IdentityInfo: {\n      _fallback: 'IdentityInfoTo198',\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data',\n      twitter: 'Data'\n    },\n    IdentityJudgement: {\n      _enum: {\n        Unknown: 'Null',\n        FeePaid: 'Balance',\n        Reasonable: 'Null',\n        KnownGood: 'Null',\n        OutOfDate: 'Null',\n        LowQuality: 'Null',\n        Erroneous: 'Null'\n      }\n    },\n    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n    RegistrationTo198: {\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfoTo198'\n    },\n    Registration: {\n      _fallback: 'RegistrationTo198',\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfo'\n    },\n    RegistrarIndex: 'u32',\n    RegistrarInfo: {\n      account: 'AccountId',\n      fee: 'Balance',\n      fields: 'IdentityFields'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthIndex: 'u32',\n    AuthoritySignature: 'Signature',\n    Heartbeat: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex',\n      validatorsLen: 'u32'\n    },\n    HeartbeatTo244: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex'\n    },\n    OpaqueMultiaddr: 'Bytes',\n    OpaquePeerId: 'Bytes',\n    OpaqueNetworkState: {\n      peerId: 'OpaquePeerId',\n      externalAddresses: 'Vec<OpaqueMultiaddr>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CallIndex: '(u8, u8)',\n    LotteryConfig: {\n      price: 'Balance',\n      start: 'BlockNumber',\n      length: 'BlockNumber',\n      delay: 'BlockNumber',\n      repeat: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { AllHashers } from \"./hashers.js\";\nimport { v9 } from \"./v9.js\";\nimport { v10 } from \"./v10.js\";\nimport { v11 } from \"./v11.js\";\nimport { v12 } from \"./v12.js\";\nimport { v13 } from \"./v13.js\";\nimport { v14 } from \"./v14.js\";\nexport { AllHashers };\nexport default {\n  rpc: {},\n  types: objectSpread({}, v9, v10, v11, v12, v13, v14, {\n    // latest mappings\n    ErrorMetadataLatest: 'ErrorMetadataV14',\n    EventMetadataLatest: 'EventMetadataV14',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',\n    FunctionMetadataLatest: 'FunctionMetadataV14',\n    MetadataLatest: 'MetadataV14',\n    PalletCallMetadataLatest: 'PalletCallMetadataV14',\n    PalletConstantMetadataLatest: 'PalletConstantMetadataV14',\n    PalletErrorMetadataLatest: 'PalletErrorMetadataV14',\n    PalletEventMetadataLatest: 'PalletEventMetadataV14',\n    PalletMetadataLatest: 'PalletMetadataV14',\n    PalletStorageMetadataLatest: 'PalletStorageMetadataV14',\n    PortableType: 'PortableTypeV14',\n    SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV14',\n    StorageEntryModifierLatest: 'StorageEntryModifierV14',\n    StorageEntryTypeLatest: 'StorageEntryTypeV14',\n    StorageHasher: 'StorageHasherV14',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'DoNotConstruct<MetadataV0>',\n        V1: 'DoNotConstruct<MetadataV1>',\n        V2: 'DoNotConstruct<MetadataV2>',\n        V3: 'DoNotConstruct<MetadataV3>',\n        V4: 'DoNotConstruct<MetadataV4>',\n        V5: 'DoNotConstruct<MetadataV5>',\n        V6: 'DoNotConstruct<MetadataV6>',\n        V7: 'DoNotConstruct<MetadataV7>',\n        V8: 'DoNotConstruct<MetadataV8>',\n        // First version on Kusama in V9, dropping will be problematic\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11',\n        V12: 'MetadataV12',\n        V13: 'MetadataV13',\n        V14: 'MetadataV14'\n      }\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v10 = {\n  // v10\n  ErrorMetadataV10: 'ErrorMetadataV9',\n  EventMetadataV10: 'EventMetadataV9',\n  FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n  FunctionMetadataV10: 'FunctionMetadataV9',\n  MetadataV10: {\n    modules: 'Vec<ModuleMetadataV10>'\n  },\n  ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n  ModuleMetadataV10: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV10>',\n    calls: 'Option<Vec<FunctionMetadataV10>>',\n    events: 'Option<Vec<EventMetadataV10>>',\n    constants: 'Vec<ModuleConstantMetadataV10>',\n    errors: 'Vec<ErrorMetadataV10>'\n  },\n  StorageEntryModifierV10: 'StorageEntryModifierV9',\n  StorageEntryMetadataV10: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV10',\n    type: 'StorageEntryTypeV10',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV10: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV10',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV10',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV10'\n      }\n    }\n  },\n  StorageMetadataV10: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV10>'\n  },\n  StorageHasherV10: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Blake2_128Concat: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { AllHashers } from \"./hashers.js\";\nexport const v11 = {\n  // v11\n  ErrorMetadataV11: 'ErrorMetadataV10',\n  EventMetadataV11: 'EventMetadataV10',\n  ExtrinsicMetadataV11: {\n    version: 'u8',\n    signedExtensions: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n  FunctionMetadataV11: 'FunctionMetadataV10',\n  MetadataV11: {\n    modules: 'Vec<ModuleMetadataV11>',\n    extrinsic: 'ExtrinsicMetadataV11'\n  },\n  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n  ModuleMetadataV11: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV11>',\n    calls: 'Option<Vec<FunctionMetadataV11>>',\n    events: 'Option<Vec<EventMetadataV11>>',\n    constants: 'Vec<ModuleConstantMetadataV11>',\n    errors: 'Vec<ErrorMetadataV11>'\n  },\n  StorageEntryModifierV11: 'StorageEntryModifierV10',\n  StorageEntryMetadataV11: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV11',\n    type: 'StorageEntryTypeV11',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV11: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV11',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV11',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV11'\n      }\n    }\n  },\n  StorageMetadataV11: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV11>'\n  },\n  StorageHasherV11: {\n    _enum: AllHashers\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v12 = {\n  // v12\n  ErrorMetadataV12: 'ErrorMetadataV11',\n  EventMetadataV12: 'EventMetadataV11',\n  ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n  FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n  FunctionMetadataV12: 'FunctionMetadataV11',\n  MetadataV12: {\n    modules: 'Vec<ModuleMetadataV12>',\n    extrinsic: 'ExtrinsicMetadataV12'\n  },\n  ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n  ModuleMetadataV12: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV12>',\n    calls: 'Option<Vec<FunctionMetadataV12>>',\n    events: 'Option<Vec<EventMetadataV12>>',\n    constants: 'Vec<ModuleConstantMetadataV12>',\n    errors: 'Vec<ErrorMetadataV12>',\n    index: 'u8'\n  },\n  StorageEntryModifierV12: 'StorageEntryModifierV11',\n  StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n  StorageEntryTypeV12: 'StorageEntryTypeV11',\n  StorageMetadataV12: 'StorageMetadataV11',\n  StorageHasherV12: 'StorageHasherV11'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v13 = {\n  // v13\n  ErrorMetadataV13: 'ErrorMetadataV12',\n  EventMetadataV13: 'EventMetadataV12',\n  ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',\n  FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',\n  FunctionMetadataV13: 'FunctionMetadataV12',\n  MetadataV13: {\n    modules: 'Vec<ModuleMetadataV13>',\n    extrinsic: 'ExtrinsicMetadataV13'\n  },\n  ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',\n  ModuleMetadataV13: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV13>',\n    calls: 'Option<Vec<FunctionMetadataV13>>',\n    events: 'Option<Vec<EventMetadataV13>>',\n    constants: 'Vec<ModuleConstantMetadataV13>',\n    errors: 'Vec<ErrorMetadataV13>',\n    index: 'u8'\n  },\n  StorageEntryModifierV13: 'StorageEntryModifierV12',\n  StorageEntryMetadataV13: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV13',\n    type: 'StorageEntryTypeV13',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV13: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV13',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV13',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV13'\n      },\n      NMap: {\n        keyVec: 'Vec<Type>',\n        hashers: 'Vec<StorageHasherV13>',\n        value: 'Type'\n      }\n    }\n  },\n  StorageMetadataV13: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV13>'\n  },\n  StorageHasherV13: 'StorageHasherV12'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { Si1Variant } from \"../scaleInfo/v1.js\";\nexport const v14 = {\n  // registry\n  PortableTypeV14: {\n    id: 'Si1LookupTypeId',\n    type: 'Si1Type'\n  },\n  // compatibility with earlier layouts, i.e. don't break previous users\n  ErrorMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  EventMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  FunctionArgumentMetadataV14: {\n    name: 'Text',\n    type: 'Type',\n    typeName: 'Option<Type>'\n  },\n  FunctionMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<FunctionArgumentMetadataV14>'\n  }),\n  // V14\n  ExtrinsicMetadataV14: {\n    type: 'SiLookupTypeId',\n    version: 'u8',\n    signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n  },\n  MetadataV14: {\n    lookup: 'PortableRegistry',\n    pallets: 'Vec<PalletMetadataV14>',\n    extrinsic: 'ExtrinsicMetadataV14',\n    type: 'SiLookupTypeId'\n  },\n  PalletCallMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletConstantMetadataV14: {\n    name: 'Text',\n    type: 'SiLookupTypeId',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  PalletErrorMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletEventMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletMetadataV14: {\n    name: 'Text',\n    storage: 'Option<PalletStorageMetadataV14>',\n    calls: 'Option<PalletCallMetadataV14>',\n    events: 'Option<PalletEventMetadataV14>',\n    constants: 'Vec<PalletConstantMetadataV14>',\n    errors: 'Option<PalletErrorMetadataV14>',\n    index: 'u8'\n  },\n  PalletStorageMetadataV14: {\n    prefix: 'Text',\n    // NOTE: Renamed from entries\n    items: 'Vec<StorageEntryMetadataV14>'\n  },\n  SignedExtensionMetadataV14: {\n    identifier: 'Text',\n    type: 'SiLookupTypeId',\n    additionalSigned: 'SiLookupTypeId'\n  },\n  StorageEntryMetadataV14: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV14',\n    type: 'StorageEntryTypeV14',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV14: 'StorageEntryModifierV13',\n  StorageEntryTypeV14: {\n    _enum: {\n      Plain: 'SiLookupTypeId',\n      Map: {\n        hashers: 'Vec<StorageHasherV14>',\n        key: 'SiLookupTypeId',\n        // NOTE: Renamed from \"keys\"\n        value: 'SiLookupTypeId'\n      }\n    }\n  },\n  StorageHasherV14: 'StorageHasherV13'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v9 = {\n  // v9\n  ErrorMetadataV9: {\n    name: 'Text',\n    docs: 'Vec<Text>'\n  },\n  EventMetadataV9: {\n    name: 'Text',\n    args: 'Vec<Type>',\n    docs: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV9: {\n    name: 'Text',\n    type: 'Type'\n  },\n  FunctionMetadataV9: {\n    name: 'Text',\n    args: 'Vec<FunctionArgumentMetadataV9>',\n    docs: 'Vec<Text>'\n  },\n  MetadataV9: {\n    modules: 'Vec<ModuleMetadataV9>'\n  },\n  ModuleConstantMetadataV9: {\n    name: 'Text',\n    type: 'Type',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  ModuleMetadataV9: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV9>',\n    calls: 'Option<Vec<FunctionMetadataV9>>',\n    events: 'Option<Vec<EventMetadataV9>>',\n    constants: 'Vec<ModuleConstantMetadataV9>',\n    errors: 'Vec<ErrorMetadataV9>'\n  },\n  StorageEntryMetadataV9: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV9',\n    type: 'StorageEntryTypeV9',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV9: {\n    _enum: ['Optional', 'Default', 'Required']\n  },\n  StorageEntryTypeV9: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV9',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV9',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV9'\n      }\n    }\n  },\n  StorageHasherV9: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  },\n  StorageMetadataV9: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV9>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    generateBatchProof: {\n      description: 'Generate MMR proof for the given leaf indices.',\n      params: [{\n        name: 'leafIndices',\n        type: 'Vec<u64>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MmrLeafProof'\n    },\n    generateProof: {\n      description: 'Generate MMR proof for given leaf index.',\n      params: [{\n        name: 'leafIndex',\n        type: 'u64'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MmrLeafBatchProof'\n    }\n  },\n  types: {\n    MmrLeafBatchProof: {\n      blockHash: 'BlockHash',\n      leaves: 'Bytes',\n      proof: 'Bytes'\n    },\n    MmrLeafProof: {\n      blockHash: 'BlockHash',\n      leaf: 'Bytes',\n      proof: 'Bytes'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    localStorageSet: {\n      description: 'Set offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }, {\n        name: 'value',\n        type: 'Bytes'\n      }],\n      type: 'Null'\n    },\n    localStorageGet: {\n      description: 'Get offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }],\n      type: 'Option<Bytes>'\n    }\n  },\n  types: {\n    StorageKind: {\n      _enum: {\n        PERSISTENT: 1,\n        LOCAL: 2\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',\n    Kind: '[u8; 16]',\n    OffenceDetails: {\n      offender: 'Offender',\n      reporters: 'Vec<Reporter>'\n    },\n    Offender: 'IdentificationTuple',\n    OpaqueTimeSlot: 'Bytes',\n    ReportIdOf: 'Hash',\n    Reporter: 'AccountId'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport hrmpTypes from \"./hrmp.js\";\nimport slotTypes from \"./slots.js\"; // proposeParachain\n\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    genesisHead: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Bytes',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nconst cumulusTypes = {\n  ServiceQuality: {\n    _enum: ['Ordered', 'Fast']\n  }\n};\nconst disputeTypes = {\n  DisputeLocation: {\n    _enum: ['Local', 'Remote']\n  },\n  DisputeResult: {\n    _enum: ['Valid', 'Invalid']\n  },\n  DisputeState: {\n    validatorsFor: 'BitVec',\n    validatorsAgainst: 'BitVec',\n    start: 'BlockNumber',\n    concludedAt: 'Option<BlockNumber>'\n  },\n  DisputeStatement: {\n    _enum: {\n      Valid: 'ValidDisputeStatementKind',\n      Invalid: 'InvalidDisputeStatementKind'\n    }\n  },\n  DisputeStatementSet: {\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex',\n    statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'\n  },\n  ExplicitDisputeStatement: {\n    valid: 'bool',\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex'\n  },\n  InvalidDisputeStatementKind: {\n    _enum: ['Explicit']\n  },\n  MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',\n  ValidDisputeStatementKind: {\n    _enum: {\n      Explicit: 'Null',\n      BackingSeconded: 'Hash',\n      BackingValid: 'Hash',\n      ApprovalChecking: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, cumulusTypes, disputeTypes, hrmpTypes, proposeTypes, slotTypes, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AbridgedHostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber'\n    },\n    AbridgedHrmpChannel: {\n      maxCapacity: 'u32',\n      maxTotalSize: 'u32',\n      maxMessageSize: 'u32',\n      msgCount: 'u32',\n      totalSize: 'u32',\n      mqcHead: 'Option<Hash>'\n    },\n    AssignmentId: 'AccountId',\n    AssignmentKind: {\n      _enum: {\n        Parachain: 'Null',\n        Parathread: '(CollatorId, u32)'\n      }\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuthorityDiscoveryId: 'AccountId',\n    AvailabilityBitfield: 'BitVec',\n    AvailabilityBitfieldRecord: {\n      bitfield: 'AvailabilityBitfield',\n      submittedTt: 'BlockNumber'\n    },\n    BackedCandidate: {\n      candidate: 'CommittedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    BufferedSessionChange: {\n      applyAt: 'BlockNumber',\n      validators: 'Vec<ValidatorId>',\n      queued: 'Vec<ValidatorId>',\n      sessionIndex: 'SessionIndex'\n    },\n    CandidateCommitments: {\n      upwardMessages: 'Vec<UpwardMessage>',\n      horizontalMessages: 'Vec<OutboundHrmpMessage>',\n      newValidationCode: 'Option<ValidationCode>',\n      headData: 'HeadData',\n      processedDownwardMessages: 'u32',\n      hrmpWatermark: 'BlockNumber'\n    },\n    CandidateDescriptor: {\n      paraId: 'ParaId',\n      relayParent: 'RelayChainHash',\n      collatorId: 'CollatorId',\n      persistedValidationDataHash: 'Hash',\n      povHash: 'Hash',\n      erasureRoot: 'Hash',\n      signature: 'CollatorSignature',\n      paraHead: 'Hash',\n      validationCodeHash: 'ValidationCodeHash'\n    },\n    CandidateHash: 'Hash',\n    CandidateInfo: {\n      who: 'AccountId',\n      deposit: 'Balance'\n    },\n    CandidatePendingAvailability: {\n      core: 'CoreIndex',\n      hash: 'CandidateHash',\n      descriptor: 'CandidateDescriptor',\n      availabilityVotes: 'BitVec',\n      backers: 'BitVec',\n      relayParentNumber: 'BlockNumber',\n      backedInNumber: 'BlockNumber',\n      backingGroup: 'GroupIndex'\n    },\n    CandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitmentsHash: 'Hash'\n    },\n    GlobalValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    CollatorId: 'H256',\n    CollatorSignature: 'Signature',\n    CommittedCandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitments: 'CandidateCommitments'\n    },\n    CoreAssignment: {\n      core: 'CoreIndex',\n      paraId: 'ParaId',\n      kind: 'AssignmentKind',\n      groupIdx: 'GroupIndex'\n    },\n    CoreIndex: 'u32',\n    CoreOccupied: {\n      _enum: {\n        Parathread: 'ParathreadEntry',\n        Parachain: 'Null'\n      }\n    },\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: 'Bytes',\n    GroupIndex: 'u32',\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    HostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber',\n      maxPovSize: 'u32',\n      maxDownwardMessageSize: 'u32',\n      preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n      hrmpMaxParachainOutboundChannels: 'u32',\n      hrmpMaxParathreadOutboundChannels: 'u32',\n      hrmpOpenRequestTtl: 'u32',\n      hrmpSenderDeposit: 'Balance',\n      hrmpRecipientDeposit: 'Balance',\n      hrmpChannelMaxCapacity: 'u32',\n      hrmpChannelMaxTotalSize: 'u32',\n      hrmpMaxParachainInboundChannels: 'u32',\n      hrmpMaxParathreadInboundChannels: 'u32',\n      hrmpChannelMaxMessageSize: 'u32',\n      codeRetentionPeriod: 'BlockNumber',\n      parathreadCores: 'u32',\n      parathreadRetries: 'u32',\n      groupRotationFrequency: 'BlockNumber',\n      chainAvailabilityPeriod: 'BlockNumber',\n      threadAvailabilityPeriod: 'BlockNumber',\n      schedulingLookahead: 'u32',\n      maxValidatorsPerCore: 'Option<u32>',\n      maxValidators: 'Option<u32>',\n      disputePeriod: 'SessionIndex',\n      disputePostConclusionAcceptancePeriod: 'BlockNumber',\n      disputeMaxSpamSlots: 'u32',\n      disputeConclusionByTimeOutPeriod: 'BlockNumber',\n      noShowSlots: 'u32',\n      nDelayTranches: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      neededApprovals: 'u32',\n      relayVrfModuloSamples: 'u32'\n    },\n    InboundDownwardMessage: {\n      pubSentAt: 'BlockNumber',\n      pubMsg: 'DownwardMessage'\n    },\n    InboundHrmpMessage: {\n      sentAt: 'BlockNumber',\n      data: 'Bytes'\n    },\n    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    MessageIngestionType: {\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n    },\n    MessageQueueChain: 'RelayChainHash',\n    OutboundHrmpMessage: {\n      recipient: 'u32',\n      data: 'Bytes'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParachainInherentData: {\n      validationData: 'PersistedValidationData',\n      relayChainState: 'StorageProof',\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n    },\n    ParachainsInherentData: {\n      bitfields: 'SignedAvailabilityBitfields',\n      backedCandidates: 'Vec<BackedCandidate>',\n      disputes: 'MultiDisputeStatementSet',\n      parentHeader: 'Header'\n    },\n    ParaGenesisArgs: {\n      genesisHead: 'Bytes',\n      validationCode: 'Bytes',\n      parachain: 'bool'\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      manager: 'AccountId',\n      deposit: 'Balance',\n      locked: 'bool'\n    },\n    ParaLifecycle: {\n      _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<ReplacementTimes>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    ParathreadClaim: '(ParaId, CollatorId)',\n    ParathreadClaimQueue: {\n      queue: 'Vec<QueuedParathread>',\n      nextCoreOffset: 'u32'\n    },\n    ParathreadEntry: {\n      claim: 'ParathreadClaim',\n      retries: 'u32'\n    },\n    ParaValidatorIndex: 'u32',\n    PersistedValidationData: {\n      parentHead: 'HeadData',\n      relayParentNumber: 'RelayChainBlockNumber',\n      relayParentStorageRoot: 'Hash',\n      maxPovSize: 'u32'\n    },\n    QueuedParathread: {\n      claim: 'ParathreadEntry',\n      coreOffset: 'u32'\n    },\n    RelayBlockNumber: 'u32',\n    RelayChainBlockNumber: 'RelayBlockNumber',\n    RelayHash: 'Hash',\n    RelayChainHash: 'RelayHash',\n    Remark: '[u8; 32]',\n    ReplacementTimes: {\n      expectedAt: 'BlockNumber',\n      activatedAt: 'BlockNumber'\n    },\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SessionInfo: {\n      validators: 'Vec<ValidatorId>',\n      discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n      assignmentKeys: 'Vec<AssignmentId>',\n      validatorGroups: 'Vec<SessionInfoValidatorGroup>',\n      nCores: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      relayVrfModuloSamples: 'u32',\n      nDelayTranches: 'u32',\n      noShowSlots: 'u32',\n      neededApprovals: 'u32'\n    },\n    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n    SignedAvailabilityBitfield: {\n      payload: 'BitVec',\n      validatorIndex: 'ParaValidatorIndex',\n      signature: 'ValidatorSignature'\n    },\n    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    TransientValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>',\n      dmqLength: 'u32'\n    },\n    UpgradeGoAhead: {\n      _enum: ['Abort', 'GoAhead']\n    },\n    UpgradeRestriction: {\n      _enum: ['Present']\n    },\n    UpwardMessage: 'Bytes',\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidationCodeHash: 'Hash',\n    ValidationData: {\n      persisted: 'PersistedValidationData',\n      transient: 'TransientValidationData'\n    },\n    ValidationDataType: {\n      validationData: 'ValidationData',\n      relayChainState: 'Vec<Bytes>'\n    },\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    MessagingStateSnapshot: {\n      relayDispatchQueueSize: '(u32, u32)',\n      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n    },\n    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n    SystemInherentData: 'ParachainInherentData',\n    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  HrmpChannel: {\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32',\n    maxMessageSize: 'u32',\n    msgCount: 'u32',\n    totalSize: 'u32',\n    mqcHead: 'Option<Hash>',\n    senderDeposit: 'Balance',\n    recipientDeposit: 'Balance'\n  },\n  HrmpChannelId: {\n    sender: 'u32',\n    receiver: 'u32'\n  },\n  HrmpOpenChannelRequest: {\n    confirmed: 'bool',\n    age: 'SessionIndex',\n    senderDeposit: 'Balance',\n    maxMessageSize: 'u32',\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst SlotRange10 = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n};\nconst SlotRange = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']\n};\nconst oldTypes = {\n  Bidder: {\n    _enum: {\n      New: 'NewBidder',\n      Existing: 'ParaId'\n    }\n  },\n  IncomingParachain: {\n    _enum: {\n      Unset: 'NewBidder',\n      Fixed: 'IncomingParachainFixed',\n      Deploy: 'IncomingParachainDeploy'\n    }\n  },\n  IncomingParachainDeploy: {\n    code: 'ValidationCode',\n    initialHeadData: 'HeadData'\n  },\n  IncomingParachainFixed: {\n    codeHash: 'Hash',\n    codeSize: 'u32',\n    initialHeadData: 'HeadData'\n  },\n  NewBidder: {\n    who: 'AccountId',\n    sub: 'SubId'\n  },\n  SubId: 'u32'\n};\nexport default objectSpread({}, oldTypes, {\n  AuctionIndex: 'u32',\n  LeasePeriod: 'BlockNumber',\n  LeasePeriodOf: 'BlockNumber',\n  SlotRange10,\n  SlotRange,\n  WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,\n  WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,\n  WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',\n  WinnersData10: 'Vec<WinnersDataTuple10>',\n  WinnersData: 'Vec<WinnersDataTuple>',\n  WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',\n  WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst QUERY_PARAMS = [{\n  name: 'extrinsic',\n  type: 'Bytes'\n}, {\n  name: 'at',\n  type: 'BlockHash',\n  isHistoric: true,\n  isOptional: true\n}];\nexport default {\n  rpc: {\n    queryInfo: {\n      description: 'Retrieves the fee information for an encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'RuntimeDispatchInfo'\n    },\n    queryFeeDetails: {\n      description: 'Query the detailed fee of a given encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'FeeDetails'\n    }\n  },\n  types: {\n    FeeDetails: {\n      inclusionFee: 'Option<InclusionFee>' // skipped in serde\n      // tip: 'Balance'\n\n    },\n    InclusionFee: {\n      baseFee: 'Balance',\n      lenFee: 'Balance',\n      adjustedWeightFee: 'Balance'\n    },\n    RuntimeDispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      partialFee: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Approvals: '[bool; 4]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ProxyDefinition: {\n      delegate: 'AccountId',\n      proxyType: 'ProxyType',\n      delay: 'BlockNumber'\n    },\n    ProxyType: {\n      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']\n    },\n    ProxyAnnouncement: {\n      real: 'AccountId',\n      callHash: 'Hash',\n      height: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountStatus: {\n      validity: 'AccountValidity',\n      freeBalance: 'Balance',\n      lockedBalance: 'Balance',\n      signature: 'Vec<u8>',\n      vat: 'Permill'\n    },\n    AccountValidity: {\n      _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveRecovery: {\n      created: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>'\n    },\n    RecoveryConfig: {\n      delayPeriod: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>',\n      threshold: 'u16'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    methods: {\n      description: 'Retrieves the list of RPC methods that are exposed by the node',\n      params: [],\n      type: 'RpcMethods'\n    }\n  },\n  types: {\n    RpcMethods: {\n      version: 'u32',\n      methods: 'Vec<Text>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst numberTypes = {\n  Fixed64: 'Int<64, Fixed64>',\n  FixedI64: 'Int<64, FixedI64>',\n  FixedU64: 'UInt<64, FixedU64>',\n  Fixed128: 'Int<128, Fixed128>',\n  FixedI128: 'Int<128, FixedI128>',\n  FixedU128: 'UInt<128, FixedU128>',\n  I32F32: 'Int<64, I32F32>',\n  U32F32: 'UInt<64, U32F32>',\n  PerU16: 'UInt<16, PerU16>',\n  Perbill: 'UInt<32, Perbill>',\n  Percent: 'UInt<8, Percent>',\n  Permill: 'UInt<32, Permill>',\n  Perquintill: 'UInt<64, Perquintill>'\n}; // Since we don't have insight into the origin specification, we can only define what we know about\n// in a pure Substrate/Polkadot implementation, any other custom origins won't be handled at all\n\nexport const knownOrigins = {\n  //\n  // (1) Defaults from Substrate\n  //\n  Council: 'CollectiveOrigin',\n  System: 'SystemOrigin',\n  TechnicalCommittee: 'CollectiveOrigin',\n  //\n  // (2) Defaults from Polkadot\n  //\n  Xcm: 'XcmOrigin',\n  XcmPallet: 'XcmOrigin',\n  //\n  // (3) Defaults from Acala\n  //\n  Authority: 'AuthorityOrigin',\n  GeneralCouncil: 'CollectiveOrigin'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, numberTypes, {\n    AccountId: 'AccountId32',\n    AccountId20: 'GenericEthereumAccountId',\n    AccountId32: 'GenericAccountId',\n    AccountIdOf: 'AccountId',\n    AccountIndex: 'GenericAccountIndex',\n    Address: 'MultiAddress',\n    AssetId: 'u32',\n    Balance: 'UInt<128, Balance>',\n    BalanceOf: 'Balance',\n    Block: 'GenericBlock',\n    BlockNumber: 'u32',\n    BlockNumberFor: 'BlockNumber',\n    BlockNumberOf: 'BlockNumber',\n    Call: 'GenericCall',\n    CallHash: 'Hash',\n    CallHashOf: 'CallHash',\n    ChangesTrieConfiguration: {\n      digestInterval: 'u32',\n      digestLevels: 'u32'\n    },\n    ChangesTrieSignal: {\n      _enum: {\n        NewConfiguration: 'Option<ChangesTrieConfiguration>'\n      }\n    },\n    ConsensusEngineId: 'GenericConsensusEngineId',\n    CodecHash: 'Hash',\n    CrateVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Digest: {\n      logs: 'Vec<DigestItem>'\n    },\n    DigestItem: {\n      _enum: {\n        Other: 'Bytes',\n        // 0\n        AuthoritiesChange: 'Vec<AuthorityId>',\n        // 1\n        ChangesTrieRoot: 'Hash',\n        // 2\n        SealV0: 'SealV0',\n        // 3\n        Consensus: 'Consensus',\n        // 4\n        Seal: 'Seal',\n        // 5\n        PreRuntime: 'PreRuntime',\n        // 6\n        ChangesTrieSignal: 'ChangesTrieSignal',\n        // 7\n        RuntimeEnvironmentUpdated: 'Null' // 8\n\n      }\n    },\n    ExtrinsicsWeight: {\n      normal: 'Weight',\n      operational: 'Weight'\n    },\n    H32: '[u8; 4; H32]',\n    H64: '[u8; 8; H64]',\n    H128: '[u8; 16; H128]',\n    H160: '[u8; 20; H160]',\n    H256: '[u8; 32; H256]',\n    H512: '[u8; 64; H512]',\n    H1024: '[u8; 128; H1024]',\n    H2048: '[u8; 256; H2048]',\n    Hash: 'H256',\n    Header: {\n      parentHash: 'Hash',\n      number: 'Compact<BlockNumber>',\n      stateRoot: 'Hash',\n      extrinsicsRoot: 'Hash',\n      digest: 'Digest'\n    },\n    HeaderPartial: {\n      parentHash: 'Hash',\n      // since we only parse JSON with this, having non-compact works\n      number: 'BlockNumber'\n    },\n    IndicesLookupSource: 'GenericLookupSource',\n    Index: 'u32',\n    Justification: '(ConsensusEngineId, EncodedJustification)',\n    EncodedJustification: 'Bytes',\n    Justifications: 'Vec<Justification>',\n    KeyValue: '(StorageKey, StorageData)',\n    KeyTypeId: 'u32',\n    LockIdentifier: '[u8; 8]',\n    LookupSource: 'MultiAddress',\n    LookupTarget: 'AccountId',\n    ModuleId: 'LockIdentifier',\n    MultiAddress: 'GenericMultiAddress',\n    MultiSigner: {\n      _enum: {\n        Ed25519: '[u8; 32]',\n        Sr25519: '[u8; 32]',\n        Ecdsa: '[u8; 33]'\n      }\n    },\n    Moment: 'UInt<64, Moment>',\n    OpaqueCall: 'Bytes',\n    Origin: 'DoNotConstruct<Origin>',\n    OriginCaller: {\n      _enum: {\n        // this should be dynamically built from the actual modules, based on index\n        System: 'SystemOrigin'\n      }\n    },\n    PalletId: 'LockIdentifier',\n    PalletsOrigin: 'OriginCaller',\n    PalletVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Pays: {\n      _enum: ['Yes', 'No']\n    },\n    Phantom: 'Null',\n    PhantomData: 'Null',\n    Releases: {\n      _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']\n    },\n    RuntimeDbWeight: {\n      read: 'Weight',\n      write: 'Weight'\n    },\n    SignedBlock: 'SignedBlockWithJustifications',\n    SignedBlockWithJustification: {\n      block: 'Block',\n      justification: 'Option<EncodedJustification>'\n    },\n    SignedBlockWithJustifications: {\n      block: 'Block',\n      justifications: 'Option<Justifications>'\n    },\n    Slot: 'u64',\n    StorageData: 'Bytes',\n    StorageProof: {\n      trieNodes: 'Vec<Bytes>'\n    },\n    TransactionPriority: 'u64',\n    TransactionInfo: {\n      _alias: {\n        dataSize: 'size'\n      },\n      chunkRoot: 'H256',\n      contentHash: 'H256',\n      dataSize: 'u32',\n      blockChunks: 'u32'\n    },\n    TransactionStorageProof: {\n      chunk: 'Vec<u8>',\n      proof: 'Vec<Vec<u8>>'\n    },\n    ValidatorId: 'AccountId',\n    ValidatorIdOf: 'ValidatorId',\n    Weight: 'u64',\n    WeightMultiplier: 'Fixed64',\n    // digest\n    PreRuntime: '(ConsensusEngineId, Bytes)',\n    SealV0: '(u64, Signature)',\n    Seal: '(ConsensusEngineId, Bytes)',\n    Consensus: '(ConsensusEngineId, Bytes)'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\"; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nexport default {\n  rpc: {},\n  types: objectSpread({}, v0, v1, {\n    // latest mappings\n    SiField: 'Si1Field',\n    SiLookupTypeId: 'Si1LookupTypeId',\n    SiPath: 'Si1Path',\n    SiType: 'Si1Type',\n    SiTypeDef: 'Si1TypeDef',\n    SiTypeDefArray: 'Si1TypeDefArray',\n    SiTypeDefBitSequence: 'Si1TypeDefBitSequence',\n    SiTypeDefCompact: 'Si1TypeDefCompact',\n    SiTypeDefComposite: 'Si1TypeDefComposite',\n    SiTypeDefPrimitive: 'Si1TypeDefPrimitive',\n    SiTypeDefSequence: 'Si1TypeDefSequence',\n    SiTypeDefTuple: 'Si1TypeDefTuple',\n    SiTypeParameter: 'Si1TypeParameter',\n    SiTypeDefVariant: 'Si1TypeDefVariant',\n    SiVariant: 'Si1Variant'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  Si0Field: {\n    name: 'Option<Text>',\n    type: 'Si0LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si0LookupTypeId: 'u32',\n  Si0Path: 'Vec<Text>',\n  Si0Type: {\n    path: 'Si0Path',\n    params: 'Vec<Si0LookupTypeId>',\n    def: 'Si0TypeDef'\n  },\n  Si0TypeDef: {\n    _enum: {\n      Composite: 'Si0TypeDefComposite',\n      Variant: 'Si0TypeDefVariant',\n      Sequence: 'Si0TypeDefSequence',\n      Array: 'Si0TypeDefArray',\n      Tuple: 'Si0TypeDefTuple',\n      Primitive: 'Si0TypeDefPrimitive',\n      Compact: 'Si0TypeDefCompact',\n      Phantom: 'Si0TypeDefPhantom',\n      BitSequence: 'Si0TypeDefBitSequence'\n    }\n  },\n  Si0TypeDefArray: {\n    len: 'u32',\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefBitSequence: {\n    bitStoreType: 'Si0LookupTypeId',\n    bitOrderType: 'Si0LookupTypeId'\n  },\n  Si0TypeDefCompact: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefComposite: {\n    fields: 'Vec<Si0Field>'\n  },\n  Si0TypeDefPhantom: 'Null',\n  Si0TypeDefVariant: {\n    variants: 'Vec<Si0Variant>'\n  },\n  Si0TypeDefPrimitive: {\n    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']\n  },\n  Si0TypeDefSequence: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',\n  Si0TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si0LookupTypeId>'\n  },\n  Si0Variant: {\n    name: 'Text',\n    fields: 'Vec<Si0Field>',\n    index: 'Option<u8>',\n    discriminant: 'Option<u64>',\n    docs: 'Vec<Text>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const Si1Variant = {\n  name: 'Text',\n  fields: 'Vec<Si1Field>',\n  index: 'u8',\n  docs: 'Vec<Text>'\n};\nexport const v1 = {\n  Si1Field: {\n    name: 'Option<Text>',\n    type: 'Si1LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si1LookupTypeId: 'Compact<u32>',\n  Si1Path: 'Si0Path',\n  Si1Type: {\n    path: 'Si1Path',\n    params: 'Vec<Si1TypeParameter>',\n    def: 'Si1TypeDef',\n    docs: 'Vec<Text>'\n  },\n  Si1TypeDef: {\n    _enum: {\n      Composite: 'Si1TypeDefComposite',\n      Variant: 'Si1TypeDefVariant',\n      Sequence: 'Si1TypeDefSequence',\n      Array: 'Si1TypeDefArray',\n      Tuple: 'Si1TypeDefTuple',\n      Primitive: 'Si1TypeDefPrimitive',\n      Compact: 'Si1TypeDefCompact',\n      BitSequence: 'Si1TypeDefBitSequence',\n      // NOTE: This is specific to the implementation for pre-v14 metadata\n      // compatibility (always keep this as the last entry in the enum)\n      HistoricMetaCompat: 'Type'\n    }\n  },\n  Si1TypeDefArray: {\n    len: 'u32',\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefBitSequence: {\n    bitStoreType: 'Si1LookupTypeId',\n    bitOrderType: 'Si1LookupTypeId'\n  },\n  Si1TypeDefCompact: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefComposite: {\n    fields: 'Vec<Si1Field>'\n  },\n  Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',\n  Si1TypeDefSequence: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',\n  Si1TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si1LookupTypeId>'\n  },\n  Si1TypeDefVariant: {\n    variants: 'Vec<Si1Variant>'\n  },\n  Si1Variant\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Period: '(BlockNumber, u32)',\n    Priority: 'u8',\n    SchedulePeriod: 'Period',\n    SchedulePriority: 'Priority',\n    Scheduled: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>',\n      origin: 'PalletsOrigin'\n    },\n    ScheduledTo254: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>'\n    },\n    TaskAddress: '(BlockNumber, u32)'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util'; // The runtime definition of SessionKeys are passed as a Trait to session\n// Defined in `node/runtime/src/lib.rs` as follow\n//   impl_opaque_keys! {\n//     pub struct SessionKeys {\n// Here we revert to tuples to keep the interfaces \"opaque\", as per the use\n\nconst keyTypes = {\n  // key for beefy\n  BeefyKey: '[u8; 33]',\n  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n  Keys: 'SessionKeys4',\n  SessionKeys1: '(AccountId)',\n  SessionKeys2: '(AccountId, AccountId)',\n  SessionKeys3: '(AccountId, AccountId, AccountId)',\n  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, keyTypes, {\n    FullIdentification: 'Exposure',\n    IdentificationTuple: '(ValidatorId, FullIdentification)',\n    MembershipProof: {\n      session: 'SessionIndex',\n      trieNodes: 'Vec<Vec<u8>>',\n      validatorCount: 'ValidatorCount'\n    },\n    SessionIndex: 'u32',\n    ValidatorCount: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bid: {\n      who: 'AccountId',\n      kind: 'BidKind',\n      value: 'Balance'\n    },\n    BidKind: {\n      _enum: {\n        Deposit: 'Balance',\n        Vouch: '(AccountId, Balance)'\n      }\n    },\n    // a society-specific Judgement (not the same as identity Judgement)\n    SocietyJudgement: {\n      _enum: ['Rebid', 'Reject', 'Approve']\n    },\n    // a society-specific Vote\n    SocietyVote: {\n      _enum: ['Skeptic', 'Reject', 'Approve']\n    },\n    StrikeCount: 'u32',\n    VouchingStatus: {\n      _enum: ['Vouching', 'Banned']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst deprecated = {\n  Points: 'u32',\n  EraPoints: {\n    total: 'Points',\n    individual: 'Vec<Points>'\n  }\n};\nconst phragmen = {\n  CompactAssignments: 'CompactAssignmentsWith16',\n  CompactAssignmentsWith16: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsWith24: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n  CompactAssignmentsTo257: {\n    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n  },\n  CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n  ElectionCompute: {\n    // in previous versions the last entry was \"AuthorityId\"\n    // (since no data attached, and it is via SCALE can rename)\n    _enum: ['OnChain', 'Signed', 'Unsigned']\n  },\n  ElectionPhase: {\n    _enum: {\n      Off: null,\n      Signed: null,\n      Unsigned: '(bool, BlockNumber)',\n      Emergency: null\n    }\n  },\n  ElectionResult: {\n    compute: 'ElectionCompute',\n    slotStake: 'Balance',\n    electedStashes: 'Vec<AccountId>',\n    exposures: 'Vec<(AccountId, Exposure)>'\n  },\n  ElectionScore: '[u128; 3]',\n  ElectionSize: {\n    validators: 'Compact<ValidatorIndex>',\n    nominators: 'Compact<NominatorIndex>'\n  },\n  ElectionStatus: {\n    _enum: {\n      Close: 'Null',\n      Open: 'BlockNumber'\n    }\n  },\n  ExtendedBalance: 'u128',\n  RawSolution: 'RawSolutionWith16',\n  RawSolutionWith16: {\n    compact: 'CompactAssignmentsWith16',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionWith24: {\n    compact: 'CompactAssignmentsWith24',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionTo265: 'RawSolutionWith16',\n  ReadySolution: {\n    supports: 'SolutionSupports',\n    score: 'ElectionScore',\n    compute: 'ElectionCompute'\n  },\n  RoundSnapshot: {\n    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n    targets: 'Vec<AccountId>'\n  },\n  SeatHolder: {\n    who: 'AccountId',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  SignedSubmission: {\n    _fallback: 'SignedSubmissionTo276',\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution',\n    reward: 'Balance'\n  },\n  SignedSubmissionTo276: {\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution'\n  },\n  SignedSubmissionOf: 'SignedSubmission',\n  SolutionOrSnapshotSize: {\n    voters: 'Compact<u32>',\n    targets: 'Compact<u32>'\n  },\n  SolutionSupport: {\n    total: 'ExtendedBalance',\n    voters: 'Vec<(AccountId, ExtendedBalance)>'\n  },\n  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n  Supports: 'SolutionSupports',\n  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n  Voter: {\n    votes: 'Vec<AccountId>',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  VoteWeight: 'u64'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, deprecated, phragmen, {\n    ActiveEraInfo: {\n      index: 'EraIndex',\n      start: 'Option<Moment>'\n    },\n    EraIndex: 'u32',\n    EraRewardPoints: {\n      total: 'RewardPoint',\n      individual: 'BTreeMap<AccountId, RewardPoint>'\n    },\n    EraRewards: {\n      total: 'u32',\n      rewards: 'Vec<u32>'\n    },\n    Exposure: {\n      total: 'Compact<Balance>',\n      own: 'Compact<Balance>',\n      others: 'Vec<IndividualExposure>'\n    },\n    Forcing: {\n      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    IndividualExposure: {\n      who: 'AccountId',\n      value: 'Compact<Balance>'\n    },\n    KeyType: 'AccountId',\n    MomentOf: 'Moment',\n    Nominations: {\n      targets: 'Vec<AccountId>',\n      submittedIn: 'EraIndex',\n      suppressed: 'bool'\n    },\n    NominatorIndex: 'u32',\n    NominatorIndexCompact: 'Compact<NominatorIndex>',\n    OffchainAccuracy: 'PerU16',\n    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n    PhragmenScore: '[u128; 3]',\n    Points: 'u32',\n    RewardDestination: {\n      _enum: {\n        Staked: 'Null',\n        Stash: 'Null',\n        Controller: 'Null',\n        Account: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RewardPoint: 'u32',\n    SlashJournalEntry: {\n      who: 'AccountId',\n      amount: 'Balance',\n      ownSlash: 'Balance'\n    },\n    SlashingSpansTo204: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SlashingSpans: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      lastNonzeroSlash: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SpanIndex: 'u32',\n    SpanRecord: {\n      slashed: 'Balance',\n      paidOut: 'Balance'\n    },\n    StakingLedgerTo223: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>'\n    },\n    StakingLedgerTo240: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      lastReward: 'Option<EraIndex>'\n    },\n    StakingLedger: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      claimedRewards: 'Vec<EraIndex>'\n    },\n    UnappliedSlashOther: '(AccountId, Balance)',\n    UnappliedSlash: {\n      validator: 'AccountId',\n      own: 'Balance',\n      others: 'Vec<UnappliedSlashOther>',\n      reporters: 'Vec<AccountId>',\n      payout: 'Balance'\n    },\n    UnlockChunk: {\n      value: 'Compact<Balance>',\n      era: 'Compact<BlockNumber>'\n    },\n    ValidatorIndex: 'u16',\n    ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n    ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n    ValidatorPrefsWithCommission: {\n      commission: 'Compact<Perbill>'\n    },\n    ValidatorPrefsWithBlocked: {\n      commission: 'Compact<Perbill>',\n      blocked: 'bool'\n    },\n    ValidatorPrefsTo196: {\n      validatorPayment: 'Compact<Balance>'\n    },\n    ValidatorPrefsTo145: {\n      unstakeThreshold: 'Compact<u32>',\n      validatorPayment: 'Compact<Balance>'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      alias: ['state_callAt'],\n      description: 'Perform a call to a builtin on the chain',\n      params: [{\n        name: 'method',\n        type: 'Text'\n      }, {\n        name: 'data',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Bytes'\n    },\n    getKeys: {\n      description: 'Retrieves the keys with a certain prefix',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getPairs: {\n      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n      params: [{\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<KeyValue>'\n    },\n    getKeysPaged: {\n      alias: ['state_getKeysPagedAt'],\n      description: 'Returns the keys with prefix with pagination support.',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      alias: ['state_getStorageAt'],\n      description: 'Retrieves the storage for a key',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getStorageHash: {\n      alias: ['state_getStorageHashAt'],\n      description: 'Retrieves the storage hash',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getStorageSize: {\n      alias: ['state_getStorageSizeAt'],\n      description: 'Retrieves the storage size',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getChildKeys: {\n      description: 'Retrieves the keys with prefix of a specific child storage',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getChildStorage: {\n      description: 'Retrieves the child storage for a key',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getChildStorageHash: {\n      description: 'Retrieves the child storage hash',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getChildStorageSize: {\n      description: 'Retrieves the child storage size',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getMetadata: {\n      description: 'Returns the runtime metadata',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Metadata'\n    },\n    getRuntimeVersion: {\n      alias: ['chain_getRuntimeVersion'],\n      description: 'Get the runtime version',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'RuntimeVersion'\n    },\n    queryStorage: {\n      description: 'Query historical storage entries (by key) starting from a start block',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'fromBlock',\n        type: 'Hash'\n      }, {\n        name: 'toBlock',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n      description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    getChildReadProof: {\n      description: 'Returns proof of storage for child key entries at a specific block state.',\n      params: [{\n        name: 'childStorageKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    getReadProof: {\n      description: 'Returns proof of storage entries at a specific block state',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    subscribeRuntimeVersion: {\n      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n      description: 'Retrieves the runtime version via subscription',\n      params: [],\n      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n      type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n      description: 'Subscribes to storage changes for the provided keys',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>',\n        isOptional: true\n      }],\n      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],\n      type: 'StorageChangeSet'\n    },\n    traceBlock: {\n      description: 'Provides a way to trace the re-execution of a single block',\n      params: [{\n        name: 'block',\n        type: 'Hash'\n      }, {\n        name: 'targets',\n        type: 'Option<Text>'\n      }, {\n        name: 'storageKeys',\n        type: 'Option<Text>'\n      }, {\n        name: 'methods',\n        type: 'Option<Text>'\n      }],\n      type: 'TraceBlockResponse'\n    },\n    trieMigrationStatus: {\n      description: 'Check current migration state',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MigrationStatusResult'\n    }\n  },\n  types: {\n    ApiId: '[u8; 8]',\n    BlockTrace: {\n      blockHash: 'Text',\n      parentHash: 'Text',\n      tracingTargets: 'Text',\n      storageKeys: 'Text',\n      spans: 'Vec<BlockTraceSpan>',\n      events: 'Vec<BlockTraceEvent>'\n    },\n    BlockTraceEvent: {\n      target: 'Text',\n      data: 'BlockTraceEventData',\n      parentId: 'Option<u64>'\n    },\n    BlockTraceEventData: {\n      stringValues: 'HashMap<Text, Text>'\n    },\n    BlockTraceSpan: {\n      id: 'u64',\n      parentId: 'Option<u64>',\n      name: 'Text',\n      target: 'Text',\n      wasm: 'bool'\n    },\n    KeyValueOption: '(StorageKey, Option<StorageData>)',\n    MigrationStatusResult: {\n      topRemainingToMigrate: 'u64',\n      childRemainingToMigrate: 'u64'\n    },\n    ReadProof: {\n      at: 'Hash',\n      proof: 'Vec<Bytes>'\n    },\n    RuntimeVersionApi: '(ApiId, u32)',\n    RuntimeVersion: {\n      specName: 'Text',\n      implName: 'Text',\n      authoringVersion: 'u32',\n      specVersion: 'u32',\n      implVersion: 'u32',\n      apis: 'Vec<RuntimeVersionApi>',\n      transactionVersion: 'u32'\n    },\n    RuntimeVersionPartial: {\n      specName: 'Text',\n      specVersion: 'u32'\n    },\n    SpecVersion: 'u32',\n    StorageChangeSet: {\n      block: 'Hash',\n      changes: 'Vec<KeyValueOption>'\n    },\n    TraceBlockResponse: {\n      _enum: {\n        TraceError: 'TraceError',\n        BlockTrace: 'BlockTrace'\n      }\n    },\n    TraceError: {\n      error: 'Text'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    WeightToFeeCoefficient: {\n      coeffInteger: 'Balance',\n      coeffFrac: 'Perbill',\n      negative: 'bool',\n      degree: 'u8'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    genSyncSpec: {\n      endpoint: 'sync_state_genSyncSpec',\n      description: 'Returns the json-serialized chainspec running the node, with a sync state.',\n      params: [{\n        name: 'raw',\n        type: 'bool'\n      }],\n      type: 'Json'\n    }\n  },\n  types: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { rpc } from \"./rpc.js\";\nexport default {\n  rpc,\n  types: {\n    AccountInfo: 'AccountInfoWithTripleRefCount',\n    AccountInfoWithRefCountU8: {\n      nonce: 'Index',\n      refcount: 'u8',\n      data: 'AccountData'\n    },\n    AccountInfoWithRefCount: {\n      _fallback: 'AccountInfoWithRefCountU8',\n      nonce: 'Index',\n      refcount: 'RefCount',\n      data: 'AccountData'\n    },\n    AccountInfoWithDualRefCount: {\n      _fallback: 'AccountInfoWithRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      data: 'AccountData'\n    },\n    // original naming\n    AccountInfoWithProviders: 'AccountInfoWithDualRefCount',\n    AccountInfoWithTripleRefCount: {\n      _fallback: 'AccountInfoWithDualRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      sufficients: 'RefCount',\n      data: 'AccountData'\n    },\n    ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',\n    ArithmeticError: {\n      _enum: ['Underflow', 'Overflow', 'DivisionByZero']\n    },\n    BlockLength: {\n      max: 'PerDispatchClassU32'\n    },\n    BlockWeights: {\n      baseBlock: 'Weight',\n      maxBlock: 'Weight',\n      perClass: 'PerDispatchClassWeightsPerClass'\n    },\n    ChainProperties: 'GenericChainProperties',\n    ChainType: {\n      _enum: {\n        Development: 'Null',\n        Local: 'Null',\n        Live: 'Null',\n        Custom: 'Text'\n      }\n    },\n    ConsumedWeight: 'PerDispatchClassWeight',\n    DigestOf: 'Digest',\n    DispatchClass: {\n      _enum: ['Normal', 'Operational', 'Mandatory']\n    },\n    DispatchError: {\n      _enum: {\n        Other: 'Null',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'DispatchErrorModule',\n        ConsumerRemaining: 'Null',\n        NoProviders: 'Null',\n        TooManyConsumers: 'Null',\n        Token: 'TokenError',\n        Arithmetic: 'ArithmeticError',\n        Transactional: 'TransactionalError'\n      }\n    },\n    DispatchErrorModuleU8: {\n      index: 'u8',\n      error: 'u8'\n    },\n    DispatchErrorModuleU8a: {\n      index: 'u8',\n      error: '[u8; 4]'\n    },\n    DispatchErrorModule: 'DispatchErrorModuleU8a',\n    DispatchErrorTo198: {\n      module: 'Option<u8>',\n      error: 'u8'\n    },\n    DispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'Pays'\n    },\n    DispatchInfoTo190: {\n      weight: 'Weight',\n      class: 'DispatchClass'\n    },\n    DispatchInfoTo244: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'bool'\n    },\n    DispatchOutcome: 'Result<(), DispatchError>',\n    DispatchResult: 'Result<(), DispatchError>',\n    DispatchResultOf: 'DispatchResult',\n    DispatchResultTo198: 'Result<(), Text>',\n    Event: 'GenericEvent',\n    EventId: '[u8; 2]',\n    EventIndex: 'u32',\n    EventRecord: {\n      phase: 'Phase',\n      event: 'Event',\n      topics: 'Vec<Hash>'\n    },\n    Health: {\n      peers: 'u64',\n      isSyncing: 'bool',\n      shouldHavePeers: 'bool'\n    },\n    InvalidTransaction: {\n      _enum: {\n        Call: 'Null',\n        Payment: 'Null',\n        Future: 'Null',\n        Stale: 'Null',\n        BadProof: 'Null',\n        AncientBirthBlock: 'Null',\n        ExhaustsResources: 'Null',\n        Custom: 'u8',\n        BadMandatory: 'Null',\n        MandatoryDispatch: 'Null'\n      }\n    },\n    Key: 'Bytes',\n    LastRuntimeUpgradeInfo: {\n      specVersion: 'Compact<u32>',\n      specName: 'Text'\n    },\n    NetworkState: {\n      peerId: 'Text',\n      listenedAddresses: 'Vec<Text>',\n      externalAddresses: 'Vec<Text>',\n      connectedPeers: 'HashMap<Text, Peer>',\n      notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',\n      averageDownloadPerSec: 'u64',\n      averageUploadPerSec: 'u64',\n      peerset: 'NetworkStatePeerset'\n    },\n    NetworkStatePeerset: {\n      messageQueue: 'u64',\n      nodes: 'HashMap<Text, NetworkStatePeersetInfo>'\n    },\n    NetworkStatePeersetInfo: {\n      connected: 'bool',\n      reputation: 'i32'\n    },\n    NodeRole: {\n      _enum: {\n        Full: 'Null',\n        LightClient: 'Null',\n        Authority: 'Null',\n        UnknownRole: 'u8'\n      }\n    },\n    NotConnectedPeer: {\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'Option<PeerPing>',\n      versionString: 'Option<Text>'\n    },\n    Peer: {\n      enabled: 'bool',\n      endpoint: 'PeerEndpoint',\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'PeerPing',\n      open: 'bool',\n      versionString: 'Text'\n    },\n    PeerEndpoint: {\n      listening: 'PeerEndpointAddr'\n    },\n    PeerEndpointAddr: {\n      _alias: {\n        localAddr: 'local_addr',\n        sendBackAddr: 'send_back_addr'\n      },\n      localAddr: 'Text',\n      sendBackAddr: 'Text'\n    },\n    PeerPing: {\n      nanos: 'u64',\n      secs: 'u64'\n    },\n    PeerInfo: {\n      peerId: 'Text',\n      roles: 'Text',\n      protocolVersion: 'u32',\n      bestHash: 'Hash',\n      bestNumber: 'BlockNumber'\n    },\n    PerDispatchClassU32: {\n      normal: 'u32',\n      operational: 'u32',\n      mandatory: 'u32'\n    },\n    PerDispatchClassWeight: {\n      normal: 'Weight',\n      operational: 'Weight',\n      mandatory: 'Weight'\n    },\n    PerDispatchClassWeightsPerClass: {\n      normal: 'WeightPerClass',\n      operational: 'WeightPerClass',\n      mandatory: 'WeightPerClass'\n    },\n    Phase: {\n      _enum: {\n        ApplyExtrinsic: 'u32',\n        Finalization: 'Null',\n        Initialization: 'Null'\n      }\n    },\n    RawOrigin: {\n      _enum: {\n        Root: 'Null',\n        Signed: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RefCount: 'u32',\n    RefCountTo259: 'u8',\n    SyncState: {\n      startingBlock: 'BlockNumber',\n      currentBlock: 'BlockNumber',\n      highestBlock: 'Option<BlockNumber>'\n    },\n    SystemOrigin: 'RawOrigin',\n    TokenError: {\n      _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', 'Unsupported', // these are dropped, but still in older versions\n      // (if this adjusts, will need to take a re-look)\n      'Underflow', 'Overflow']\n    },\n    TransactionValidityError: {\n      _enum: {\n        Invalid: 'InvalidTransaction',\n        Unknown: 'UnknownTransaction'\n      }\n    },\n    TransactionalError: {\n      _enum: ['LimitReached', 'NoLayer']\n    },\n    UnknownTransaction: {\n      _enum: {\n        CannotLookup: 'Null',\n        NoUnsignedValidator: 'Null',\n        Custom: 'u8'\n      }\n    },\n    WeightPerClass: {\n      baseExtrinsic: 'Weight',\n      maxExtrinsic: 'Option<Weight>',\n      maxTotal: 'Option<Weight>',\n      reserved: 'Option<Weight>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// As per frontier\nexport const rpc = {\n  accountNextIndex: {\n    alias: ['account_nextIndex'],\n    description: 'Retrieves the next accountIndex as available on the node',\n    params: [{\n      name: 'accountId',\n      type: 'AccountId'\n    }],\n    type: 'Index'\n  },\n  addLogFilter: {\n    description: 'Adds the supplied directives to the current log filter',\n    params: [{\n      name: 'directives',\n      type: 'Text'\n    }],\n    type: 'Null'\n  },\n  addReservedPeer: {\n    description: 'Adds a reserved peer',\n    params: [{\n      name: 'peer',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  chain: {\n    description: 'Retrieves the chain',\n    params: [],\n    type: 'Text'\n  },\n  chainType: {\n    description: 'Retrieves the chain type',\n    params: [],\n    type: 'ChainType'\n  },\n  dryRun: {\n    alias: ['system_dryRunAt'],\n    description: 'Dry run an extrinsic at a given block',\n    params: [{\n      name: 'extrinsic',\n      type: 'Bytes'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'ApplyExtrinsicResult'\n  },\n  health: {\n    description: 'Return health status of the node',\n    noErrorLog: true,\n    params: [],\n    type: 'Health'\n  },\n  localListenAddresses: {\n    description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  localPeerId: {\n    description: 'Returns the base58-encoded PeerId of the node',\n    params: [],\n    type: 'Text'\n  },\n  name: {\n    description: 'Retrieves the node name',\n    params: [],\n    type: 'Text'\n  },\n  networkState: {\n    alias: ['system_unstable_networkState'],\n    description: 'Returns current state of the network',\n    params: [],\n    type: 'NetworkState'\n  },\n  nodeRoles: {\n    description: 'Returns the roles the node is running as',\n    params: [],\n    type: 'Vec<NodeRole>'\n  },\n  peers: {\n    description: 'Returns the currently connected peers',\n    params: [],\n    type: 'Vec<PeerInfo>'\n  },\n  properties: {\n    description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n    params: [],\n    type: 'ChainProperties'\n  },\n  removeReservedPeer: {\n    description: 'Remove a reserved peer',\n    params: [{\n      name: 'peerId',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  reservedPeers: {\n    description: 'Returns the list of reserved peers',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  resetLogFilter: {\n    description: 'Resets the log filter to Substrate defaults',\n    params: [],\n    type: 'Null'\n  },\n  syncState: {\n    description: 'Returns the state of the syncing of the node',\n    params: [],\n    type: 'SyncState'\n  },\n  version: {\n    description: 'Retrieves the version of the node',\n    params: [],\n    type: 'Text'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bounty: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      fee: 'Balance',\n      curatorDeposit: 'Balance',\n      bond: 'Balance',\n      status: 'BountyStatus'\n    },\n    BountyIndex: 'u32',\n    BountyStatus: {\n      _enum: {\n        Proposed: 'Null',\n        Approved: 'Null',\n        Funded: 'Null',\n        CuratorProposed: 'BountyStatusCuratorProposed',\n        Active: 'BountyStatusActive',\n        PendingPayout: 'BountyStatusPendingPayout'\n      }\n    },\n    BountyStatusActive: {\n      curator: 'AccountId',\n      updateDue: 'BlockNumber'\n    },\n    BountyStatusCuratorProposed: {\n      curator: 'AccountId'\n    },\n    BountyStatusPendingPayout: {\n      curator: 'AccountId',\n      beneficiary: 'AccountId',\n      unlockAt: 'BlockNumber'\n    },\n    OpenTip: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'AccountId',\n      deposit: 'Balance',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>',\n      findersFee: 'bool'\n    },\n    OpenTipTo225: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'Option<OpenTipFinderTo225>',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>'\n    },\n    OpenTipFinderTo225: '(AccountId, Balance)',\n    OpenTipTip: '(AccountId, Balance)',\n    TreasuryProposal: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      beneficiary: 'AccountId',\n      bond: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport default {\n  rpc: {},\n  types: {\n    Multiplier: 'Fixed128'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ClassId: 'u32',\n    InstanceId: 'u32',\n    DepositBalance: 'Balance',\n    DepositBalanceOf: 'Balance',\n    ClassDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      totalDeposit: 'DepositBalance',\n      freeHolding: 'bool',\n      instances: 'u32',\n      instanceMetadatas: 'u32',\n      attributes: 'u32',\n      isFrozen: 'bool'\n    },\n    DestroyWitness: {\n      instances: 'Compact<u32>',\n      instanceMetadatas: 'Compact<u32>',\n      attributes: 'Compact<u32>'\n    },\n    InstanceDetails: {\n      owner: 'AccountId',\n      approved: 'Option<AccountId>',\n      isFrozen: 'bool',\n      deposit: 'DepositBalance'\n    },\n    ClassMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    },\n    InstanceMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Multisig: {\n      when: 'Timepoint',\n      deposit: 'Balance',\n      depositor: 'AccountId',\n      approvals: 'Vec<AccountId>'\n    },\n    Timepoint: {\n      height: 'BlockNumber',\n      index: 'u32'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    VestingInfo: {\n      locked: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { mapXcmTypes } from '@polkadot/types-create';\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\";\nimport { v2 } from \"./v2.js\";\nconst XCM_LATEST = 'V2';\nconst xcm = {\n  XcmOrigin: {\n    _enum: {\n      Xcm: 'MultiLocation'\n    }\n  },\n  XcmpMessageFormat: {\n    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n  },\n  XcmAssetId: {\n    _enum: {\n      Concrete: 'MultiLocation',\n      Abstract: 'Bytes'\n    }\n  },\n  InboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  OutboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n  BodyId: {\n    _enum: {\n      Unit: 'Null',\n      Named: 'Vec<u8>',\n      Index: 'Compact<u32>',\n      Executive: 'Null',\n      Technical: 'Null',\n      Legislative: 'Null',\n      Judicial: 'Null'\n    }\n  },\n  BodyPart: {\n    _enum: {\n      Voice: 'Null',\n      Members: 'Compact<u32>',\n      Fraction: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      AtLeastProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      MoreThanProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      }\n    }\n  },\n  InteriorMultiLocation: 'Junctions',\n  NetworkId: {\n    _enum: {\n      Any: 'Null',\n      Named: 'Vec<u8>',\n      Polkadot: 'Null',\n      Kusama: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, location, xcm, v0, v1, v2, mapXcmTypes(XCM_LATEST), {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    Outcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmErrorV0)',\n        Error: 'XcmErrorV0'\n      }\n    },\n    QueryId: 'u64',\n    QueryStatus: {\n      _enum: {\n        Pending: {\n          responder: 'VersionedMultiLocation',\n          maybeNotify: 'Option<(u8, u8)>',\n          timeout: 'BlockNumber'\n        },\n        Ready: {\n          response: 'VersionedResponse',\n          at: 'BlockNumber'\n        }\n      }\n    },\n    QueueConfigData: {\n      suspendThreshold: 'u32',\n      dropThreshold: 'u32',\n      resumeThreshold: 'u32',\n      thresholdWeight: 'Weight',\n      weightRestrictDecay: 'Weight'\n    },\n    VersionMigrationStage: {\n      _enum: {\n        MigrateSupportedVersion: 'Null',\n        MigrateVersionNotifiers: 'Null',\n        NotifyCurrentTargets: 'Option<Bytes>',\n        MigrateAndNotifyOldTargets: 'Null'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAssetV0',\n        V1: 'MultiAssetV1',\n        V2: 'MultiAssetV2'\n      }\n    },\n    VersionedMultiAssets: {\n      _enum: {\n        V0: 'Vec<MultiAssetV0>',\n        V1: 'MultiAssetsV1',\n        V2: 'MultiAssetsV2'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocationV0',\n        V1: 'MultiLocationV1',\n        V2: 'MultiLocationV2'\n      }\n    },\n    VersionedResponse: {\n      V0: 'ResponseV0',\n      V1: 'ResponseV1',\n      V2: 'ResponseV2'\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'XcmV0',\n        V1: 'XcmV1',\n        V2: 'XcmV2'\n      }\n    },\n    XcmVersion: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  FungibilityV0: 'FungibilityV1',\n  WildFungibilityV0: 'WildFungibilityV1',\n  AssetInstanceV0: {\n    _enum: {\n      Undefined: 'Null',\n      Index8: 'u8',\n      Index16: 'Compact<u16>',\n      Index32: 'Compact<u32>',\n      Index64: 'Compact<u64>',\n      Index128: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Vec<u8>'\n    }\n  },\n  JunctionV0: {\n    _enum: {\n      Parent: 'Null',\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  MultiAssetV0: {\n    _enum: {\n      None: 'Null',\n      All: 'Null',\n      AllFungible: 'Null',\n      AllNonFungible: 'Null',\n      AllAbstractFungible: 'Vec<u8>',\n      AllAbstractNonFungible: 'Vec<u8>',\n      AllConcreteFungible: 'MultiLocationV0',\n      AllConcreteNonFungible: 'MultiLocationV0',\n      AbstractFungible: {\n        id: 'Vec<u8>',\n        instance: 'Compact<u128>'\n      },\n      AbstractNonFungible: {\n        class: 'Vec<u8>',\n        instance: 'AssetInstanceV0'\n      },\n      ConcreteFungible: {\n        id: 'MultiLocationV0',\n        amount: 'Compact<u128>'\n      },\n      ConcreteNonFungible: {\n        class: 'MultiLocationV0',\n        instance: 'AssetInstanceV0'\n      }\n    }\n  },\n  MultiLocationV0: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV0',\n      X2: '(JunctionV0, JunctionV0)',\n      X3: '(JunctionV0, JunctionV0, JunctionV0)',\n      X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'\n    }\n  },\n  OriginKindV0: {\n    _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n  },\n  ResponseV0: {\n    _enum: {\n      Assets: 'Vec<MultiAssetV0>'\n    }\n  },\n  XcmV0: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV0'\n      },\n      TransferAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      TransferReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV0',\n        message: 'XcmV0'\n      }\n    }\n  },\n  XcmErrorV0: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocation, Xcm)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV0: {\n    _enum: {\n      Null: 'Null',\n      DepositAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      DepositReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ExchangeAsset: {\n        give: 'Vec<MultiAssetV0>',\n        receive: 'Vec<MultiAssetV0>'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'Vec<MultiAssetV0>',\n        reserve: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      InitiateTeleport: {\n        assets: 'Vec<MultiAsset>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV0',\n        assets: 'Vec<MultiAssetV0>'\n      },\n      BuyExecution: {\n        fees: 'MultiAsset',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        xcm: 'Vec<XcmV0>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v1 = {\n  AssetInstanceV1: {\n    _enum: {\n      Undefined: 'Null',\n      Index: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Bytes'\n    }\n  },\n  FungibilityV1: {\n    _enum: {\n      Fungible: 'Compact<u128>',\n      NonFungible: 'AssetInstanceV1'\n    }\n  },\n  JunctionV1: {\n    _enum: {\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  JunctionsV1: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV1',\n      X2: '(JunctionV1, JunctionV1)',\n      X3: '(JunctionV1, JunctionV1, JunctionV1)',\n      X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'\n    }\n  },\n  MultiAssetsV1: 'Vec<MultiAssetV1>',\n  MultiAssetV1: {\n    id: 'XcmAssetId',\n    fungibility: 'FungibilityV1'\n  },\n  MultiAssetFilterV1: {\n    _enum: {\n      Definite: 'MultiAssetsV1',\n      Wild: 'WildMultiAssetV1'\n    }\n  },\n  MultiLocationV1: {\n    parents: 'u8',\n    interior: 'JunctionsV1'\n  },\n  OriginKindV1: 'OriginKindV0',\n  ResponseV1: {\n    _enum: {\n      Assets: 'MultiAssetsV1'\n    }\n  },\n  WildFungibilityV1: {\n    _enum: ['Fungible', 'NonFungible']\n  },\n  WildMultiAssetV1: {\n    _enum: {\n      All: 'Null',\n      AllOf: {\n        id: 'XcmAssetId',\n        fungibility: 'WildFungibilityV1'\n      }\n    }\n  },\n  XcmV1: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV1'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV1',\n        message: 'XcmV1'\n      }\n    }\n  },\n  XcmErrorV1: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocationV1, XcmV1)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV1: {\n    _enum: {\n      Noop: 'Null',\n      DepositAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV1'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV1',\n        receive: 'MultiAssetsV1'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV1',\n        reserve: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV1',\n        assets: 'MultiAssetFilterV1'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV1',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        instructions: 'Vec<XcmV1>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v2 = {\n  AssetInstanceV2: 'AssetInstanceV1',\n  FungibilityV2: 'FungibilityV1',\n  JunctionV2: 'JunctionV1',\n  JunctionsV2: 'JunctionsV1',\n  MultiAssetsV2: 'MultiAssetsV1',\n  MultiAssetV2: 'MultiAssetV1',\n  MultiAssetFilterV2: 'MultiAssetFilterV1',\n  MultiLocationV2: 'MultiLocationV1',\n  OriginKindV2: 'OriginKindV1',\n  WildFungibilityV2: 'WildFungibilityV1',\n  ResponseV2: {\n    _enum: {\n      Null: 'Null',\n      Assets: 'MultiAssetsV2',\n      ExecutionResult: 'ResponseV2Result'\n    }\n  },\n  ResponseV2Error: '(u32, XcmErrorV2)',\n  ResponseV2Result: 'Result<Null, ResponseV2Error>',\n  WeightLimitV2: {\n    _enum: {\n      Unlimited: 'Null',\n      Limited: 'Compact<u64>'\n    }\n  },\n  InstructionV2: {\n    _enum: {\n      WithdrawAsset: 'MultiAssetsV2',\n      ReserveAssetDeposited: 'MultiAssetsV2',\n      ReceiveTeleportedAsset: 'MultiAssetsV2',\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV2',\n        maxWeight: 'Compact<u64>'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV2',\n        beneficiary: 'MultiLocationV2'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      Transact: {\n        originType: 'OriginKindV2',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      ClearOrigin: 'Null',\n      DescendOrigin: 'InteriorMultiLocation',\n      ReportError: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        maxResponseWeight: 'Compact<u64>'\n      },\n      DepositAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV2'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV2',\n        receive: 'MultiAssetsV2'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV2',\n        reserve: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      QueryHolding: {\n        query_id: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        assets: 'MultiAssetFilterV2',\n        maxResponse_Weight: 'Compact<u64>'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV2',\n        weightLimit: 'WeightLimitV2'\n      },\n      RefundSurplus: 'Null',\n      SetErrorHandler: 'XcmV2',\n      SetAppendix: 'XcmV2',\n      ClearError: 'Null',\n      ClaimAsset: {\n        assets: 'MultiAssetsV2',\n        ticket: 'MultiLocationV2'\n      },\n      Trap: 'u64'\n    }\n  },\n  WildMultiAssetV2: 'WildMultiAssetV1',\n  XcmV2: 'Vec<InstructionV2>',\n  XcmErrorV2: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      MultiLocationFull: 'Null',\n      MultiLocationNotInvertible: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null',\n      Transport: 'Null',\n      Unroutable: 'Null',\n      UnknownWeightRequired: 'Null',\n      Trap: 'u64',\n      UnknownClaim: 'Null',\n      InvalidLocation: 'Null'\n    }\n  },\n  XcmOrderV2: 'XcmOrderV1'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U32 } from '@polkadot/types-codec';\nexport const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding\n\nexport class MagicNumber extends U32 {\n  constructor(registry, value) {\n    super(registry, value);\n\n    if (!this.isEmpty && !this.eq(MAGIC_NUMBER)) {\n      throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from \"./MetadataVersioned.js\"; // magic u32 preceding the version id\n\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\n/** @internal */\n\nfunction decodeU8a(registry, value) {\n  const u8a = value.length === 0 ? EMPTY_METADATA : value; // This is an f-ing hack as a follow-up to another ugly hack\n  // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n  // when we fail on V9, try to re-parse it as v10...\n\n  if (u8a[VERSION_IDX] === 9) {\n    try {\n      return new MetadataVersioned(registry, u8a);\n    } catch (error) {\n      u8a[VERSION_IDX] = 10;\n      return u8a;\n    }\n  }\n\n  return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport class Metadata extends MetadataVersioned {\n  constructor(registry, value) {\n    // console.time('Metadata')\n    super(registry, isU8a(value) || isString(value) ? decodeU8a(registry, u8aToU8a(value)) : value); // console.timeEnd('Metadata')\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toV14 } from \"./v13/toV14.js\";\nimport { toLatest } from \"./v14/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 14;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nexport class MetadataVersioned extends Struct {\n  #converted = new Map();\n\n  constructor(registry, value) {\n    // console.time('MetadataVersioned')\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value); // console.timeEnd('MetadataVersioned')\n  }\n\n  #assertVersion = version => {\n    if (this.version > version) {\n      throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);\n    }\n\n    return this.version === version;\n  };\n  #getVersion = (version, fromPrev) => {\n    const asCurr = `asV${version}`;\n    const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n    if (version !== 'latest' && this.#assertVersion(version)) {\n      return this.#metadata()[asCurr];\n    }\n\n    if (!this.#converted.has(version)) {\n      this.#converted.set(version, fromPrev(this.registry, this[asPrev], this.version));\n    }\n\n    return this.#converted.get(version);\n  };\n  /**\n   * @description the metadata wrapped\n   */\n\n  #metadata = () => {\n    return this.getT('metadata');\n  };\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createTypeUnsafe('MetadataAll', [toCallsOnly(this.registry, this.asLatest), LATEST_VERSION])\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    this.#assertVersion(9);\n    return this.#metadata().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return this.#getVersion(10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return this.#getVersion(11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return this.#getVersion(12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return this.#getVersion(13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a V14 object\n   */\n\n\n  get asV14() {\n    return this.#getVersion(14, toV14);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    return this.#getVersion('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.getT('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return this.#metadata().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}","import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize, Struct } from '@polkadot/types-codec';\nimport { getTypeDef, TypeDefInfo, withTypeString } from '@polkadot/types-create';\nimport { assertUnreachable, isNumber, isString, logger, objectSpread, stringCamelCase, stringify, stringPascalCase } from '@polkadot/util';\nconst l = logger('PortableRegistry');\n// Just a placeholder for a type.unrwapOr()\nconst TYPE_UNWRAP = {\n  toNumber: () => -1\n}; // Alias the primitive enum with out known values\n\nconst PRIMITIVE_ALIAS = {\n  Char: 'u32',\n  // Rust char is 4-bytes\n  Str: 'Text'\n}; // These are types where we have a specific decoding/encoding override + helpers\n\nconst PATHS_ALIAS = splitNamespace([// full matching on exact names...\n// these are well-known types with additional encoding\n'sp_core::crypto::AccountId32', 'sp_runtime::generic::era::Era', 'sp_runtime::multiaddress::MultiAddress', // ethereum overrides (Frontier, Moonbeam, Polkadot claims)\n'account::AccountId20', 'polkadot_runtime_common::claims::EthereumAddress', // wildcard matching in place...\n// these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy\n'*_democracy::vote::Vote', '*_conviction_voting::vote::Vote', '*_identity::types::Data', // shorten some well-known types\n'primitive_types::*', 'sp_arithmetic::per_things::*', // ink!\n'ink_env::types::*']); // Mappings for types that should be converted to set via BitVec\n\nconst PATHS_SET = splitNamespace(['pallet_identity::types::BitFlags']); // These are the set namespaces for BitVec definitions (the last 2 appear in types as well)\n\nconst BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];\nconst BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];\nconst BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB]; // These we never use these as top-level names, they are wrappers\n\nconst WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque']; // These are reserved and/or conflicts with built-in Codec or JS definitions\n\nconst RESERVED = ['entries', 'hash', 'keys', 'new', 'size']; // Remove these from all paths at index 1\n\nconst PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];\n/** @internal */\n\nfunction sanitizeDocs(docs) {\n  const result = new Array(docs.length);\n\n  for (let i = 0; i < docs.length; i++) {\n    result[i] = docs[i].toString();\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction splitNamespace(values) {\n  const result = new Array(values.length);\n\n  for (let i = 0; i < values.length; i++) {\n    result[i] = values[i].split('::');\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction matchParts(first, second) {\n  return first.length === second.length && first.every((a, index) => {\n    const b = second[index].toString();\n\n    if (a === '*' || a === b) {\n      return true;\n    }\n\n    if (a.includes('*') && a.includes('_') && b.includes('_')) {\n      let suba = a.split('_');\n      let subb = b.split('_'); // match initial *'s to multiples if we have a match for the other\n\n      if (suba[0] === '*') {\n        const indexOf = subb.indexOf(suba[1]);\n\n        if (indexOf !== -1) {\n          suba = suba.slice(1);\n          subb = subb.slice(indexOf);\n        }\n      } // check for * matches at the end, adjust accordingly\n\n\n      if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {\n        return true;\n      }\n\n      return matchParts(suba, subb);\n    }\n\n    return false;\n  });\n} // check if the path matches the PATHS_ALIAS (with wildcards)\n\n/** @internal */\n\n\nfunction getAliasPath(path) {\n  // TODO We need to handle ink! Balance in some way\n  return path.length && PATHS_ALIAS.some(a => matchParts(a, path)) ? path[path.length - 1].toString() : null;\n}\n/** @internal */\n\n\nfunction extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {\n  const count = path.length; // if we have no path or determined as a wrapper, we just skip it\n\n  if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {\n    return null;\n  }\n\n  const camels = new Array(count);\n  const lowers = new Array(count); // initially just create arrays of the camelCase and lowercase path\n  // parts - we will check these to extract the final values. While\n  // we have 2 loops here, we also don't do the same operation twice\n\n  for (let i = 0; i < count; i++) {\n    const c = stringPascalCase(isInternal ? path[i].replace('pallet_', '') : path[i]);\n    const l = c.toLowerCase();\n    camels[i] = c;\n    lowers[i] = l;\n  }\n\n  let name = '';\n\n  for (let i = 0; i < count; i++) {\n    const l = lowers[i]; // Remove ::{generic, misc, pallet, traits, types}::\n\n    if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {\n      // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest\n      // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress\n      if (l !== lowers[i + 1]) {\n        name += camels[i];\n      }\n    }\n  } // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin\n\n\n  if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {\n    const instanceType = portable[params[1].type.unwrap().toNumber()];\n\n    if (instanceType.type.path.length === 2) {\n      name = `${name}${instanceType.type.path[1].toString()}`;\n    }\n  }\n\n  return {\n    lookupIndex,\n    name,\n    params\n  };\n}\n/** @internal */\n\n\nfunction extractName(portable, lookupIndex, {\n  type: {\n    params,\n    path\n  }\n}) {\n  return extractNameFlat(portable, lookupIndex, params, path);\n}\n/** @internal */\n\n\nfunction nextDupeMatches(name, startAt, names) {\n  const result = [names[startAt]];\n\n  for (let i = startAt + 1; i < names.length; i++) {\n    const v = names[i];\n\n    if (v.name === name) {\n      result.push(v);\n    }\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction rewriteDupes(input, rewrite) {\n  const count = input.length;\n\n  for (let i = 0; i < count; i++) {\n    const a = input[i];\n\n    for (let j = i + 1; j < count; j++) {\n      const b = input[j]; // if the indexes are not the same and the names match, we have a dupe\n\n      if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {\n        return false;\n      }\n    }\n  } // add all the adjusted values to the rewite map\n\n\n  for (let i = 0; i < count; i++) {\n    const p = input[i];\n    rewrite[p.lookupIndex] = p.name;\n  }\n\n  return true;\n}\n/** @internal */\n\n\nfunction removeDupeNames(lookup, portable, names) {\n  const rewrite = {};\n  return names.map((original, startAt) => {\n    const {\n      lookupIndex,\n      name,\n      params\n    } = original;\n\n    if (!name) {\n      // the name is empty (this is not expected, but have a failsafe)\n      return null;\n    } else if (rewrite[lookupIndex]) {\n      // we have already rewritten this one, we can skip it\n      return original;\n    } // those where the name is matching starting from this index\n\n\n    const allSame = nextDupeMatches(name, startAt, names); // we only have one, so all ok\n\n    if (allSame.length === 1) {\n      return original;\n    } // are there param differences between matching names\n\n\n    const anyDiff = allSame.some(o => params.length !== o.params.length || params.some((p, index) => !p.name.eq(o.params[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber())); // everything matches, we can combine these\n\n    if (!anyDiff) {\n      return original;\n    } // TODO We probably want to attach all the indexes with differences,\n    // not just the first\n    // find the first parameter that yields differences\n\n\n    const paramIdx = params.findIndex(({\n      type\n    }, index) => allSame.every(({\n      params\n    }, aIndex) => params[index].type.isSome && (aIndex === 0 || !params[index].type.eq(type)))); // No param found that is different\n\n    if (paramIdx === -1) {\n      return original;\n    } // see if using the param type helps\n\n\n    const adjusted = new Array(allSame.length); // loop through all, specifically checking that index where the\n    // first param yields differences\n\n    for (let i = 0; i < allSame.length; i++) {\n      const {\n        lookupIndex,\n        name,\n        params\n      } = allSame[i];\n      const {\n        def,\n        path\n      } = lookup.getSiType(params[paramIdx].type.unwrap()); // if it is not a primitive and it doesn't have a path, we really cannot\n      // do anything at this point\n\n      if (!def.isPrimitive && !path.length) {\n        return null;\n      }\n\n      adjusted[i] = {\n        lookupIndex,\n        name: def.isPrimitive ? `${name}${def.asPrimitive.toString()}` : `${name}${path[path.length - 1].toString()}`\n      };\n    } // check to see if the adjusted names have no issues\n\n\n    if (rewriteDupes(adjusted, rewrite)) {\n      return original;\n    } // TODO This is duplicated from the section just above...\n    // ... we certainly need a better solution here\n    //\n    // Last-ditch effort to use the full type path - ugly\n    // loop through all, specifically checking that index where the\n    // first param yields differences\n\n\n    for (let i = 0; i < allSame.length; i++) {\n      const {\n        lookupIndex,\n        name,\n        params\n      } = allSame[i];\n      const {\n        def,\n        path\n      } = lookup.getSiType(params[paramIdx].type.unwrap());\n      const flat = extractNameFlat(portable, lookupIndex, params, path, true);\n\n      if (def.isPrimitive || !flat) {\n        return null;\n      }\n\n      adjusted[i] = {\n        lookupIndex,\n        name: `${name}${flat.name}`\n      };\n    } // check to see if the adjusted names have no issues\n\n\n    if (rewriteDupes(adjusted, rewrite)) {\n      return original;\n    }\n\n    return null;\n  }).filter(n => !!n).map(({\n    lookupIndex,\n    name,\n    params\n  }) => ({\n    lookupIndex,\n    name: rewrite[lookupIndex] || name,\n    params\n  }));\n}\n/** @internal */\n\n\nfunction registerTypes(lookup, lookups, names, params) {\n  // Register the types we extracted\n  lookup.registry.register(lookups); // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [addrParam,, sigParam] = params.SpRuntimeUncheckedExtrinsic;\n    const siAddress = lookup.getSiType(addrParam.type.unwrap());\n    const siSignature = lookup.getSiType(sigParam.type.unwrap());\n    const nsSignature = siSignature.path.join('::');\n    let nsAccountId = siAddress.path.join('::');\n    const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress'; // With multiaddress, we check the first type param again\n\n    if (isMultiAddress) {\n      // AccountId, AccountIndex\n      const [idParam] = siAddress.params;\n      nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');\n    }\n\n    lookup.registry.register({\n      AccountId: ['sp_core::crypto::AccountId32'].includes(nsAccountId) ? 'AccountId32' : ['account::AccountId20', 'primitive_types::H160'].includes(nsAccountId) ? 'AccountId20' : 'AccountId32',\n      // other, default to AccountId32\n      Address: isMultiAddress ? 'MultiAddress' : 'AccountId',\n      ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'\n    });\n  }\n} // this extracts aliases based on what we know the runtime config looks like in a\n// Substrate chain. Specifically we want to have access to the Call and Event params\n\n/** @internal */\n\n\nfunction extractAliases(params, isContract) {\n  const hasParams = Object.keys(params).some(k => !k.startsWith('Pallet'));\n  const alias = {};\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [, {\n      type\n    }] = params.SpRuntimeUncheckedExtrinsic;\n    alias[type.unwrap().toNumber()] = 'Call';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');\n  }\n\n  if (params.FrameSystemEventRecord) {\n    // Event, Topic\n    const [{\n      type\n    }] = params.FrameSystemEventRecord;\n    alias[type.unwrap().toNumber()] = 'Event';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');\n  }\n\n  return alias;\n}\n/** @internal */\n\n\nfunction extractTypeInfo(lookup, portable) {\n  const nameInfo = [];\n  const types = {};\n  const porCount = portable.length;\n\n  for (let i = 0; i < porCount; i++) {\n    const type = portable[i];\n    const lookupIndex = type.id.toNumber();\n    const extracted = extractName(portable, lookupIndex, portable[i]);\n\n    if (extracted) {\n      nameInfo.push(extracted);\n    }\n\n    types[lookupIndex] = type;\n  }\n\n  const lookups = {};\n  const names = {};\n  const params = {};\n  const dedup = removeDupeNames(lookup, portable, nameInfo);\n  const dedupCount = dedup.length;\n\n  for (let i = 0; i < dedupCount; i++) {\n    const {\n      lookupIndex,\n      name,\n      params: p\n    } = dedup[i];\n    names[lookupIndex] = name;\n    lookups[name] = lookup.registry.createLookupType(lookupIndex);\n    params[name] = p;\n  }\n\n  return {\n    lookups,\n    names,\n    params,\n    types\n  };\n}\n\nvar _alias = /*#__PURE__*/_classPrivateFieldLooseKey(\"alias\");\n\nvar _lookups = /*#__PURE__*/_classPrivateFieldLooseKey(\"lookups\");\n\nvar _names = /*#__PURE__*/_classPrivateFieldLooseKey(\"names\");\n\nvar _params = /*#__PURE__*/_classPrivateFieldLooseKey(\"params\");\n\nvar _typeDefs = /*#__PURE__*/_classPrivateFieldLooseKey(\"typeDefs\");\n\nvar _types = /*#__PURE__*/_classPrivateFieldLooseKey(\"types\");\n\nvar _createSiDef = /*#__PURE__*/_classPrivateFieldLooseKey(\"createSiDef\");\n\nvar _getLookupId = /*#__PURE__*/_classPrivateFieldLooseKey(\"getLookupId\");\n\nvar _extract = /*#__PURE__*/_classPrivateFieldLooseKey(\"extract\");\n\nvar _extractArray = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractArray\");\n\nvar _extractBitSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractBitSequence\");\n\nvar _extractCompact = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompact\");\n\nvar _extractComposite = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractComposite\");\n\nvar _extractCompositeSet = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompositeSet\");\n\nvar _extractFields = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFields\");\n\nvar _extractFieldsAlias = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFieldsAlias\");\n\nvar _extractHistoric = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractHistoric\");\n\nvar _extractPrimitive = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractPrimitive\");\n\nvar _extractAliasPath = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractAliasPath\");\n\nvar _extractSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractSequence\");\n\nvar _extractTuple = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractTuple\");\n\nvar _extractVariant = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariant\");\n\nvar _extractVariantEnum = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariantEnum\");\n\nexport class PortableRegistry extends Struct {\n  constructor(registry, value, isContract) {\n    // console.time('PortableRegistry')\n    super(registry, {\n      types: 'Vec<PortableType>'\n    }, value);\n    Object.defineProperty(this, _extractVariantEnum, {\n      value: _extractVariantEnum2\n    });\n    Object.defineProperty(this, _extractVariant, {\n      value: _extractVariant2\n    });\n    Object.defineProperty(this, _extractTuple, {\n      value: _extractTuple2\n    });\n    Object.defineProperty(this, _extractSequence, {\n      value: _extractSequence2\n    });\n    Object.defineProperty(this, _extractAliasPath, {\n      value: _extractAliasPath2\n    });\n    Object.defineProperty(this, _extractPrimitive, {\n      value: _extractPrimitive2\n    });\n    Object.defineProperty(this, _extractHistoric, {\n      value: _extractHistoric2\n    });\n    Object.defineProperty(this, _extractFieldsAlias, {\n      value: _extractFieldsAlias2\n    });\n    Object.defineProperty(this, _extractFields, {\n      value: _extractFields2\n    });\n    Object.defineProperty(this, _extractCompositeSet, {\n      value: _extractCompositeSet2\n    });\n    Object.defineProperty(this, _extractComposite, {\n      value: _extractComposite2\n    });\n    Object.defineProperty(this, _extractCompact, {\n      value: _extractCompact2\n    });\n    Object.defineProperty(this, _extractBitSequence, {\n      value: _extractBitSequence2\n    });\n    Object.defineProperty(this, _extractArray, {\n      value: _extractArray2\n    });\n    Object.defineProperty(this, _extract, {\n      value: _extract2\n    });\n    Object.defineProperty(this, _getLookupId, {\n      value: _getLookupId2\n    });\n    Object.defineProperty(this, _createSiDef, {\n      value: _createSiDef2\n    });\n    Object.defineProperty(this, _alias, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _lookups, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _names, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _params, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _typeDefs, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _types, {\n      writable: true,\n      value: void 0\n    });\n    const {\n      lookups,\n      names,\n      params: _params2,\n      types\n    } = extractTypeInfo(this, this.types);\n    _classPrivateFieldLooseBase(this, _alias)[_alias] = extractAliases(_params2, isContract);\n    _classPrivateFieldLooseBase(this, _lookups)[_lookups] = lookups;\n    _classPrivateFieldLooseBase(this, _names)[_names] = names;\n    _classPrivateFieldLooseBase(this, _params)[_params] = _params2;\n    _classPrivateFieldLooseBase(this, _types)[_types] = types; // console.timeEnd('PortableRegistry')\n  }\n\n  get names() {\n    return Object.values(_classPrivateFieldLooseBase(this, _names)[_names]).sort();\n  }\n  /**\n   * @description The types of the registry\n   */\n\n\n  get types() {\n    return this.getT('types');\n  }\n\n  register() {\n    registerTypes(this, _classPrivateFieldLooseBase(this, _lookups)[_lookups], _classPrivateFieldLooseBase(this, _names)[_names], _classPrivateFieldLooseBase(this, _params)[_params]);\n  }\n  /**\n   * @description Returns the name for a specific lookup\n   */\n\n\n  getName(lookupId) {\n    return _classPrivateFieldLooseBase(this, _names)[_names][_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n  }\n  /**\n   * @description Finds a specific type in the registry\n   */\n\n\n  getSiType(lookupId) {\n    // NOTE catch-22 - this may already be used as part of the constructor, so\n    // ensure that we have actually initialized it correctly\n    const found = (_classPrivateFieldLooseBase(this, _types)[_types] || this.types)[_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n\n    if (!found) {\n      throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);\n    }\n\n    return found.type;\n  }\n  /**\n   * @description Lookup the type definition for the index\n   */\n\n\n  getTypeDef(lookupId) {\n    const lookupIndex = _classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId);\n\n    if (!_classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex]) {\n      const lookupName = _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex];\n\n      const empty = {\n        info: TypeDefInfo.DoNotConstruct,\n        lookupIndex,\n        lookupName,\n        type: this.registry.createLookupType(lookupIndex)\n      }; // Set named items since we will get into circular lookups along the way\n\n      if (lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      const extracted = _classPrivateFieldLooseBase(this, _extract)[_extract](this.getSiType(lookupId), lookupIndex); // For non-named items, we only set this right at the end\n\n\n      if (!lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      Object.keys(extracted).forEach(k => {\n        if (k !== 'lookupName' || extracted[k]) {\n          // these are safe since we are looking through the keys as set\n          _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex][k] = extracted[k];\n        }\n      }); // don't set lookupName on lower-level, we want to always direct to the type\n\n      if (extracted.info === TypeDefInfo.Plain) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupNameRoot = _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n        delete _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n      }\n    }\n\n    return _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex];\n  }\n\n  sanitizeField(name) {\n    let nameField = null;\n    let nameOrig = null;\n\n    if (name.isSome) {\n      nameField = stringCamelCase(name.unwrap());\n\n      if (nameField.includes('#')) {\n        nameOrig = nameField;\n        nameField = nameOrig.replace(/#/g, '_');\n      } else if (RESERVED.includes(nameField)) {\n        nameOrig = nameField;\n        nameField = `${nameField}_`;\n      }\n    }\n\n    return [nameField, nameOrig];\n  }\n\n}\n\nfunction _createSiDef2(lookupId) {\n  const typeDef = this.getTypeDef(lookupId);\n  const lookupIndex = lookupId.toNumber(); // Setup for a lookup on complex types\n\n  return [TypeDefInfo.DoNotConstruct, TypeDefInfo.Enum, TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName ? {\n    docs: typeDef.docs,\n    info: TypeDefInfo.Si,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    type: this.registry.createLookupType(lookupId)\n  } : typeDef;\n}\n\nfunction _getLookupId2(lookupId) {\n  if (isString(lookupId)) {\n    if (!this.registry.isLookupType(lookupId)) {\n      throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);\n    }\n\n    return parseInt(lookupId.replace('Lookup', ''), 10);\n  } else if (isNumber(lookupId)) {\n    return lookupId;\n  }\n\n  return lookupId.toNumber();\n}\n\nfunction _extract2(type, lookupIndex) {\n  const namespace = type.path.join('::');\n  let typeDef;\n  const aliasType = _classPrivateFieldLooseBase(this, _alias)[_alias][lookupIndex] || getAliasPath(type.path);\n\n  try {\n    if (aliasType) {\n      typeDef = _classPrivateFieldLooseBase(this, _extractAliasPath)[_extractAliasPath](lookupIndex, aliasType);\n    } else {\n      switch (type.def.type) {\n        case 'Array':\n          typeDef = _classPrivateFieldLooseBase(this, _extractArray)[_extractArray](lookupIndex, type.def.asArray);\n          break;\n\n        case 'BitSequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractBitSequence)[_extractBitSequence](lookupIndex, type.def.asBitSequence);\n          break;\n\n        case 'Compact':\n          typeDef = _classPrivateFieldLooseBase(this, _extractCompact)[_extractCompact](lookupIndex, type.def.asCompact);\n          break;\n\n        case 'Composite':\n          typeDef = _classPrivateFieldLooseBase(this, _extractComposite)[_extractComposite](lookupIndex, type, type.def.asComposite);\n          break;\n\n        case 'HistoricMetaCompat':\n          typeDef = _classPrivateFieldLooseBase(this, _extractHistoric)[_extractHistoric](lookupIndex, type.def.asHistoricMetaCompat);\n          break;\n\n        case 'Primitive':\n          typeDef = _classPrivateFieldLooseBase(this, _extractPrimitive)[_extractPrimitive](lookupIndex, type);\n          break;\n\n        case 'Sequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractSequence)[_extractSequence](lookupIndex, type.def.asSequence);\n          break;\n\n        case 'Tuple':\n          typeDef = _classPrivateFieldLooseBase(this, _extractTuple)[_extractTuple](lookupIndex, type.def.asTuple);\n          break;\n\n        case 'Variant':\n          typeDef = _classPrivateFieldLooseBase(this, _extractVariant)[_extractVariant](lookupIndex, type, type.def.asVariant);\n          break;\n\n        default:\n          assertUnreachable(type.def.type);\n      }\n    }\n  } catch (error) {\n    throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${stringify(type)}: ${error.message}`);\n  }\n\n  return objectSpread({\n    docs: sanitizeDocs(type.docs),\n    namespace\n  }, typeDef);\n}\n\nfunction _extractArray2(_, {\n  len,\n  type\n}) {\n  const length = len.toNumber();\n\n  if (length > 2048) {\n    throw new Error('Only support for [Type; <length>], where length <= 2048');\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.VecFixed,\n    length,\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractBitSequence2(_, {\n  bitOrderType,\n  bitStoreType\n}) {\n  // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine\n  // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly\n  const a = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitOrderType);\n\n  const b = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitStoreType);\n\n  const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '') ? [a, b] : [b, a]; // NOTE: Currently the BitVec type is one-way only, i.e. we only use it to decode, not\n  // re-encode stuff. As such we ignore the msb/lsb identifier given by bitOrderType, or rather\n  // we don't pass it though at all (all displays in LSB)\n\n  if (!BITVEC_NS.includes(bitOrder.namespace || '')) {\n    throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);\n  } else if (bitStore.info !== TypeDefInfo.Plain || bitStore.type !== 'u8') {\n    throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);\n  }\n\n  return {\n    info: TypeDefInfo.Plain,\n    type: 'BitVec'\n  };\n}\n\nfunction _extractCompact2(_, {\n  type\n}) {\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Compact,\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractComposite2(lookupIndex, {\n  params,\n  path\n}, {\n  fields\n}) {\n  const pathFirst = path[0].toString();\n  const pathLast = path[path.length - 1].toString();\n\n  if (path.length === 1 && pathFirst === 'BTreeMap') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeMap,\n      sub: params.map(({\n        type\n      }) => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap()))\n    });\n  } else if (path.length === 1 && pathFirst === 'BTreeSet') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeSet,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap())\n    });\n  } else if (['Range', 'RangeInclusive'].includes(pathFirst)) {\n    return withTypeString(this.registry, {\n      info: pathFirst === 'Range' ? TypeDefInfo.Range : TypeDefInfo.RangeInclusive,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathFirst\n    });\n  } else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {\n    return withTypeString(this.registry, {\n      info: pathLast === 'WrapperKeepOpaque' ? TypeDefInfo.WrapperKeepOpaque : TypeDefInfo.WrapperOpaque,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathLast\n    });\n  }\n\n  return PATHS_SET.some(p => matchParts(p, path)) ? _classPrivateFieldLooseBase(this, _extractCompositeSet)[_extractCompositeSet](lookupIndex, params, fields) : _classPrivateFieldLooseBase(this, _extractFields)[_extractFields](lookupIndex, fields);\n}\n\nfunction _extractCompositeSet2(_, params, fields) {\n  if (params.length !== 1 || fields.length !== 1) {\n    throw new Error('Set handling expects param/field as single entries');\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Set,\n    length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),\n    sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({\n      index,\n      name\n    }) => ({\n      // This will be an issue > 2^53 - 1 ... don't have those (yet)\n      index: index.toNumber(),\n      info: TypeDefInfo.Plain,\n      name: name.toString(),\n      type: 'Null'\n    }))\n  });\n}\n\nfunction _extractFields2(lookupIndex, fields) {\n  let isStruct = true;\n  let isTuple = true;\n\n  for (let f = 0; f < fields.length; f++) {\n    const {\n      name\n    } = fields[f];\n    isStruct = isStruct && name.isSome;\n    isTuple = isTuple && name.isNone;\n  }\n\n  if (!isTuple && !isStruct) {\n    throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');\n  }\n\n  if (fields.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (isTuple && fields.length === 1) {\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](fields[0].type);\n\n    return objectSpread({}, typeDef, lookupIndex === -1 ? null : {\n      lookupIndex,\n      lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n      lookupNameRoot: typeDef.lookupName\n    }, fields[0].typeName.isSome ? {\n      typeName: sanitize(fields[0].typeName.unwrap())\n    } : null);\n  }\n\n  const [sub, alias] = _classPrivateFieldLooseBase(this, _extractFieldsAlias)[_extractFieldsAlias](fields);\n\n  return withTypeString(this.registry, objectSpread({\n    info: isTuple // Tuple check first\n    ? TypeDefInfo.Tuple : TypeDefInfo.Struct,\n    sub\n  }, alias.size ? {\n    alias\n  } : null, lookupIndex === -1 ? null : {\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex]\n  }));\n}\n\nfunction _extractFieldsAlias2(fields) {\n  const alias = new Map();\n  const sub = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    const {\n      docs,\n      name,\n      type,\n      typeName\n    } = fields[i];\n\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n    if (name.isNone) {\n      sub[i] = typeDef;\n    } else {\n      const [nameField, nameOrig] = this.sanitizeField(name);\n\n      if (nameField && nameOrig) {\n        alias.set(nameField, nameOrig);\n      }\n\n      sub[i] = objectSpread({\n        docs: sanitizeDocs(docs),\n        name: nameField\n      }, typeDef, typeName.isSome ? {\n        typeName: sanitize(typeName.unwrap())\n      } : null);\n    }\n  }\n\n  return [sub, alias];\n}\n\nfunction _extractHistoric2(_, type) {\n  return objectSpread({\n    displayName: type.toString(),\n    isFromSi: true\n  }, getTypeDef(type));\n}\n\nfunction _extractPrimitive2(_, type) {\n  const typeStr = type.def.asPrimitive.type.toString();\n  return {\n    info: TypeDefInfo.Plain,\n    type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()\n  };\n}\n\nfunction _extractAliasPath2(_, type) {\n  return {\n    info: TypeDefInfo.Plain,\n    type\n  };\n}\n\nfunction _extractSequence2(lookupIndex, {\n  type\n}) {\n  const sub = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n  if (sub.type === 'u8') {\n    return {\n      info: TypeDefInfo.Plain,\n      type: 'Bytes'\n    };\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Vec,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractTuple2(lookupIndex, ids) {\n  if (ids.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (ids.length === 1) {\n    return this.getTypeDef(ids[0]);\n  }\n\n  const sub = ids.map(t => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](t));\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Tuple,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractVariant2(lookupIndex, {\n  params,\n  path\n}, {\n  variants\n}) {\n  const specialVariant = path[0].toString();\n\n  if (specialVariant === 'Option') {\n    const sub = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()); // NOTE This is opt-in (unhandled), not by default\n    // if (sub.type === 'bool') {\n    //   return withTypeString(this.registry, {\n    //     info: TypeDefInfo.Plain,\n    //     type: 'OptionBool'\n    //   });\n    // }\n\n\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Option,\n      sub\n    });\n  } else if (specialVariant === 'Result') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Result,\n      sub: params.map(({\n        type\n      }, index) => objectSpread({\n        name: ['Ok', 'Error'][index]\n      }, _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap())))\n    });\n  } else if (variants.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  }\n\n  return _classPrivateFieldLooseBase(this, _extractVariantEnum)[_extractVariantEnum](lookupIndex, variants);\n}\n\nfunction _extractVariantEnum2(lookupIndex, variants) {\n  const sub = []; // we may get entries out of order, arrange them first before creating with gaps filled\n  // NOTE: Since we mutate, use a copy of the array as an input\n\n  variants.slice().sort((a, b) => a.index.cmp(b.index)).forEach(({\n    fields,\n    index: bnIndex,\n    name\n  }) => {\n    const index = bnIndex.toNumber();\n\n    while (sub.length !== index) {\n      sub.push({\n        index: sub.length,\n        info: TypeDefInfo.Null,\n        name: `__Unused${sub.length}`,\n        type: 'Null'\n      });\n    }\n\n    sub.push(objectSpread(_classPrivateFieldLooseBase(this, _extractFields)[_extractFields](-1, fields), {\n      index,\n      name: name.toString()\n    }));\n  });\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Enum,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from \"../util.js\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function decorateConstants(registry, {\n  pallets\n}, _version) {\n  const result = {};\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      constants,\n      name\n    } = pallets[i];\n\n    if (!constants.isEmpty) {\n      lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, constant => {\n        const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n        codec.meta = constant;\n        return codec;\n      }, objectNameToCamel));\n    }\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isTx(tx, callIndex) {\n  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\n\n\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n  const expectedArgs = callMetadata.fields;\n  const funcName = stringCamelCase(callMetadata.name);\n\n  const extrinsicFn = (...args) => {\n    if (expectedArgs.length !== args.length) {\n      throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);\n    }\n\n    return registry.createTypeUnsafe('Call', [{\n      args,\n      callIndex\n    }, callMetadata]);\n  };\n\n  extrinsicFn.is = tx => isTx(tx, callIndex);\n\n  extrinsicFn.callIndex = callIndex;\n  extrinsicFn.meta = callMetadata;\n  extrinsicFn.method = funcName;\n  extrinsicFn.section = section;\n\n  extrinsicFn.toJSON = () => callMetadata.toJSON();\n\n  return extrinsicFn;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\n\nfunction extractSubSingle(_, {\n  sub\n}) {\n  const {\n    lookupName,\n    type\n  } = sub;\n  return extractTypes([lookupName || type]);\n}\n\nfunction extractSubArray(_, {\n  sub\n}) {\n  return extractTypes(sub.map(({\n    lookupName,\n    type\n  }) => lookupName || type));\n}\n\nfunction unhandled(type, {\n  info\n}) {\n  throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n} // we only handle the types with params here\n\n\nconst mapping = {\n  [TypeDefInfo.BTreeMap]: extractSubArray,\n  [TypeDefInfo.BTreeSet]: extractSubSingle,\n  [TypeDefInfo.Compact]: extractSubSingle,\n  [TypeDefInfo.DoNotConstruct]: unhandled,\n  [TypeDefInfo.Enum]: extractSubArray,\n  [TypeDefInfo.HashMap]: extractSubArray,\n  [TypeDefInfo.Int]: unhandled,\n  [TypeDefInfo.Linkage]: extractSubSingle,\n  [TypeDefInfo.Null]: unhandled,\n  [TypeDefInfo.Option]: extractSubSingle,\n  [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n  [TypeDefInfo.Range]: extractSubSingle,\n  [TypeDefInfo.RangeInclusive]: extractSubSingle,\n  [TypeDefInfo.Result]: extractSubArray,\n  [TypeDefInfo.Set]: extractSubArray,\n  [TypeDefInfo.Si]: unhandled,\n  [TypeDefInfo.Struct]: extractSubArray,\n  [TypeDefInfo.Tuple]: extractSubArray,\n  [TypeDefInfo.UInt]: unhandled,\n  [TypeDefInfo.Vec]: extractSubSingle,\n  [TypeDefInfo.VecFixed]: extractSubSingle,\n  [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n  [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\n\nexport function extractTypes(types) {\n  const count = types.length;\n  const result = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    const type = types[i];\n    const typeDef = getTypeDef(type);\n    result[i] = mapping[typeDef.info](type, typeDef);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function flattenUniq(list, result = []) {\n  for (let i = 0; i < list.length; i++) {\n    const entry = list[i];\n\n    if (Array.isArray(entry)) {\n      flattenUniq(entry, result);\n    } else {\n      result.push(entry);\n    }\n  }\n\n  return [...new Set(result)];\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function getSiName(lookup, type) {\n  const typeDef = lookup.getTypeDef(type);\n  return typeDef.lookupName || typeDef.type;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { flattenUniq } from \"./flattenUniq.js\";\nimport { validateTypes } from \"./validateTypes.js\";\n/** @internal */\n\nfunction extractTypes(lookup, types) {\n  return types.map(({\n    type\n  }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\n\n\nfunction extractFieldTypes(lookup, type) {\n  return lookup.getSiType(type).def.asVariant.variants.map(({\n    fields\n  }) => extractTypes(lookup, fields));\n}\n/** @internal */\n\n\nfunction getPalletNames({\n  lookup,\n  pallets\n}) {\n  return pallets.reduce((all, {\n    calls,\n    constants,\n    events,\n    storage\n  }) => {\n    all.push([extractTypes(lookup, constants)]);\n\n    if (calls.isSome) {\n      all.push(extractFieldTypes(lookup, calls.unwrap().type));\n    }\n\n    if (events.isSome) {\n      all.push(extractFieldTypes(lookup, events.unwrap().type));\n    }\n\n    if (storage.isSome) {\n      all.push(storage.unwrap().items.map(({\n        type\n      }) => {\n        if (type.isPlain) {\n          return [lookup.getTypeDef(type.asPlain).type];\n        }\n\n        const {\n          hashers,\n          key,\n          value\n        } = type.asMap;\n        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type, ...lookup.getSiType(key).def.asTuple.map(t => lookup.getTypeDef(t).type)];\n      }));\n    }\n\n    return all;\n  }, []);\n}\n/** @internal */\n\n\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(docs) {\n  const strings = docs.map(d => d.toString().trim());\n  const firstEmpty = strings.findIndex(d => !d.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, {\n  extrinsic,\n  lookup,\n  pallets\n}) {\n  return registry.createTypeUnsafe('MetadataLatest', [{\n    extrinsic,\n    lookup: {\n      types: lookup.types.map(({\n        id,\n        type\n      }) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type: { ...type,\n          docs: trimDocs(type.docs)\n        }\n      }]))\n    },\n    pallets: pallets.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n      index,\n      name\n    }))\n  }]).toJSON();\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { extractTypes } from \"./extractTypes.js\";\nimport { flattenUniq } from \"./flattenUniq.js\";\nconst l = logger('metadata');\n/** @internal */\n\nexport function validateTypes(registry, throwError, types) {\n  const missing = flattenUniq(extractTypes(types)).filter(type => !registry.hasType(type) && !registry.isLookupType(type)).sort();\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      l.warn(message);\n    }\n  }\n\n  return types;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function toV11(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV11', [{\n    // This is new in V11, pass V0 here - something non-existing, telling the API to use\n    // the fallback for this information (on-chain detection)\n    extrinsic: {\n      signedExtensions: [],\n      version: 0\n    },\n    modules\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV12(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV12', [{\n    extrinsic,\n    modules: modules.map(mod => registry.createTypeUnsafe('ModuleMetadataV12', [{ ...mod,\n      index: 255\n    }]))\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV13(registry, metadata) {\n  return registry.createTypeUnsafe('MetadataV13', [metadata]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { getAliasTypes } from \"../../interfaces/alias.js\";\nimport { knownOrigins } from \"../../interfaces/runtime/definitions.js\";\nconst BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];\n/**\n * Creates a compatible type mapping\n * @internal\n **/\n\nfunction compatType(specs, _type) {\n  const type = _type.toString();\n\n  const index = specs.findIndex(({\n    def\n  }) => def.HistoricMetaCompat === type);\n\n  if (index !== -1) {\n    return index;\n  }\n\n  return specs.push({\n    def: {\n      HistoricMetaCompat: type\n    }\n  }) - 1;\n}\n\nfunction compatTypes(specs, ...types) {\n  for (let i = 0; i < types.length; i++) {\n    compatType(specs, types[i]);\n  }\n}\n\nfunction makeTupleType(specs, entries) {\n  return specs.push({\n    def: {\n      Tuple: entries\n    }\n  }) - 1;\n}\n\nfunction makeVariantType(modName, variantType, specs, variants) {\n  return specs.push({\n    def: {\n      Variant: {\n        variants\n      }\n    },\n    path: [`pallet_${modName.toString()}`, 'pallet', variantType]\n  }) - 1;\n}\n/**\n * @internal\n * generate & register the OriginCaller type\n **/\n\n\nfunction registerOriginCaller(registry, modules, metaVersion) {\n  registry.register({\n    OriginCaller: {\n      _enum: modules.map((mod, index) => [mod.name.toString(), metaVersion >= 12 ? mod.index.toNumber() : index]).sort((a, b) => a[1] - b[1]).reduce((result, [name, index]) => {\n        for (let i = Object.keys(result).length; i < index; i++) {\n          result[`Empty${i}`] = 'Null';\n        }\n\n        result[name] = knownOrigins[name] || 'Null';\n        return result;\n      }, {})\n    }\n  });\n}\n/**\n * Find and apply the correct type override\n * @internal\n **/\n\n\nfunction setTypeOverride(sectionTypes, types) {\n  types.forEach(type => {\n    const override = Object.keys(sectionTypes).find(aliased => type.eq(aliased));\n\n    if (override) {\n      type.setOverride(sectionTypes[override]);\n    } else {\n      // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)\n      const orig = type.toString();\n      const alias = Object.entries(sectionTypes).reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);\n\n      if (orig !== alias) {\n        type.setOverride(alias);\n      }\n    }\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertCalls(specs, registry, modName, calls, sectionTypes) {\n  const variants = calls.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args.map(({\n      type\n    }) => type));\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(({\n        name,\n        type\n      }) => registry.createTypeUnsafe('SiField', [{\n        name,\n        type: compatType(specs, type)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletCallMetadataV14', [{\n    type: makeVariantType(modName, 'Call', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n\n\nfunction convertConstants(specs, registry, constants, sectionTypes) {\n  return constants.map(({\n    docs,\n    name,\n    type,\n    value\n  }) => {\n    setTypeOverride(sectionTypes, [type]);\n    return registry.createTypeUnsafe('PalletConstantMetadataV14', [{\n      docs,\n      name,\n      type: compatType(specs, type),\n      value\n    }]);\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertErrors(specs, registry, modName, errors, _sectionTypes) {\n  const variants = errors.map(({\n    docs,\n    name\n  }, index) => registry.createTypeUnsafe('SiVariant', [{\n    docs,\n    fields: [],\n    index,\n    name\n  }]));\n  return registry.createTypeUnsafe('PalletErrorMetadataV14', [{\n    type: makeVariantType(modName, 'Error', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertEvents(specs, registry, modName, events, sectionTypes) {\n  const variants = events.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args);\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(t => registry.createTypeUnsafe('SiField', [{\n        type: compatType(specs, t)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletEventMetadataV14', [{\n    type: makeVariantType(modName, 'Event', specs, variants)\n  }]);\n}\n\nfunction createMapEntry(specs, registry, sectionTypes, {\n  hashers,\n  isLinked,\n  isOptional,\n  keys,\n  value\n}) {\n  setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);\n  return registry.createTypeUnsafe('StorageEntryTypeV14', [{\n    Map: {\n      hashers,\n      key: hashers.length === 1 ? compatType(specs, keys[0]) : makeTupleType(specs, keys.map(t => compatType(specs, t))),\n      value: isLinked // For previous-generation linked-map support, the actual storage result\n      // is a Tuple with the value and the Linkage (Option appears in teh value-part only)\n      ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`) : compatType(specs, value)\n    }\n  }]);\n}\n/**\n * Apply module-specific storage type overrides (always part of toV14)\n * @internal\n **/\n\n\nfunction convertStorage(specs, registry, {\n  items,\n  prefix\n}, sectionTypes) {\n  return registry.createTypeUnsafe('PalletStorageMetadataV14', [{\n    items: items.map(({\n      docs,\n      fallback,\n      modifier,\n      name,\n      type\n    }) => {\n      let entryType;\n\n      if (type.isPlain) {\n        const plain = type.asPlain;\n        setTypeOverride(sectionTypes, [plain]);\n        entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{\n          Plain: compatType(specs, plain)\n        }]);\n      } else if (type.isMap) {\n        const map = type.asMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [map.hasher],\n          isLinked: map.linked.isTrue,\n          isOptional: modifier.isOptional,\n          keys: [map.key],\n          value: map.value\n        });\n      } else if (type.isDoubleMap) {\n        const dm = type.asDoubleMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [dm.hasher, dm.key2Hasher],\n          isLinked: false,\n          isOptional: modifier.isOptional,\n          keys: [dm.key1, dm.key2],\n          value: dm.value\n        });\n      } else {\n        const nm = type.asNMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: nm.hashers,\n          isLinked: false,\n          isOptional: modifier.isOptional,\n          keys: nm.keyVec,\n          value: nm.value\n        });\n      }\n\n      return registry.createTypeUnsafe('StorageEntryMetadataV14', [{\n        docs,\n        fallback,\n        modifier,\n        name,\n        type: entryType\n      }]);\n    }),\n    prefix\n  }]);\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertExtrinsic(registry, {\n  signedExtensions,\n  version\n}) {\n  return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{\n    signedExtensions: signedExtensions.map(identifier => ({\n      identifier,\n      type: 0 // we don't map the fields at all\n\n    })),\n    type: 0,\n    // Map to extrinsic like in v14?\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction createPallet(specs, registry, mod, {\n  calls,\n  constants,\n  errors,\n  events,\n  storage\n}) {\n  const sectionTypes = getAliasTypes(registry, stringCamelCase(mod.name));\n  return registry.createTypeUnsafe('PalletMetadataV14', [{\n    calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),\n    constants: convertConstants(specs, registry, constants, sectionTypes),\n    errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),\n    events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),\n    index: mod.index,\n    name: mod.name,\n    storage: storage && convertStorage(specs, registry, storage, sectionTypes)\n  }]);\n}\n/**\n * Convert the Metadata to v14\n * @internal\n **/\n\n\nexport function toV14(registry, v13, metaVersion) {\n  const specs = []; // position 0 always has Null, additionally add internal defaults\n\n  compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');\n  registerOriginCaller(registry, v13.modules, metaVersion);\n  const extrinsic = convertExtrinsic(registry, v13.extrinsic);\n  const pallets = v13.modules.map(mod => createPallet(specs, registry, mod, {\n    calls: mod.calls.unwrapOr(null),\n    constants: mod.constants,\n    errors: mod.errors.length ? mod.errors : null,\n    events: mod.events.unwrapOr(null),\n    storage: mod.storage.unwrapOr(null)\n  }));\n  return registry.createTypeUnsafe('MetadataV14', [{\n    extrinsic,\n    lookup: {\n      types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type\n      }]))\n    },\n    pallets\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Convert the Metadata (which is an alias) to latest\n * @internal\n **/\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function toLatest(registry, v14, _metaVersion) {\n  return v14;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// migrate a storage hasher type\n// see https://github.com/paritytech/substrate/pull/4462\n\n/** @internal */\nfunction createStorageHasher(registry, hasher) {\n  // Blake2_128_Concat has been added at index 2, so we increment all the\n  // indexes greater than 2\n  if (hasher.toNumber() >= 2) {\n    return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);\n  }\n\n  return registry.createTypeUnsafe('StorageHasherV10', [hasher]);\n}\n/** @internal */\n\n\nfunction createStorageType(registry, entryType) {\n  if (entryType.isMap) {\n    return [{ ...entryType.asMap,\n      hasher: createStorageHasher(registry, entryType.asMap.hasher)\n    }, 1];\n  }\n\n  if (entryType.isDoubleMap) {\n    return [{ ...entryType.asDoubleMap,\n      hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),\n      key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)\n    }, 2];\n  }\n\n  return [entryType.asPlain, 0];\n}\n/** @internal */\n\n\nfunction convertModule(registry, mod) {\n  const storage = mod.storage.unwrapOr(null);\n  return registry.createTypeUnsafe('ModuleMetadataV10', [{ ...mod,\n    storage: storage ? { ...storage,\n      items: storage.items.map(item => ({ ...item,\n        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))\n      }))\n    } : null\n  }]);\n}\n/** @internal */\n\n\nexport function toV10(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV10', [{\n    modules: modules.map(mod => convertModule(registry, mod))\n  }]);\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { assert, isString, isU8a, u8aToU8a } from '@polkadot/util';\n/** @internal */\n\nfunction decodeDataU8a(registry, value) {\n  const indicator = value[0];\n\n  if (!indicator) {\n    return [undefined, undefined];\n  } else if (indicator >= 1 && indicator <= 33) {\n    const length = indicator - 1;\n    const data = value.subarray(1, length + 1); // in this case, we are passing a Raw back (since we have no length)\n\n    return [registry.createTypeUnsafe('Raw', [data]), 1];\n  } else if (indicator >= 34 && indicator <= 37) {\n    return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2\n  }\n\n  throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);\n}\n/** @internal */\n\n\nfunction decodeData(registry, value) {\n  if (isU8a(value) || isString(value)) {\n    return decodeDataU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [undefined, undefined];\n  } // assume we have an Enum or an  object input, handle this via the normal Enum decoding\n\n\n  return [value, undefined];\n}\n/**\n * @name Data\n * @description\n * A [[Data]] container with node, raw or hashed data\n */\n\n\nexport class Data extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      None: 'Null',\n      // 0\n      Raw: 'Bytes',\n      // 1\n      // eslint-disable-next-line sort-keys\n      BlakeTwo256: 'H256',\n      // 2\n      Sha256: 'H256',\n      // 3\n      // eslint-disable-next-line sort-keys\n      Keccak256: 'H256',\n      // 4\n      ShaThree256: 'H256' // 5\n\n    }, ...decodeData(registry, value));\n    assert(!this.isRaw || this.asRaw.length <= 32, 'Data.Raw values are limited to a maximum length of 32 bytes');\n  }\n\n  get asBlakeTwo256() {\n    return this.value;\n  }\n\n  get asKeccak256() {\n    return this.value;\n  }\n\n  get asRaw() {\n    return this.value;\n  }\n\n  get asSha256() {\n    return this.value;\n  }\n\n  get asShaThree256() {\n    return this.value;\n  }\n\n  get isBlakeTwo256() {\n    return this.index === 2;\n  }\n\n  get isKeccak256() {\n    return this.index === 4;\n  }\n\n  get isNone() {\n    return this.index === 0;\n  }\n\n  get isRaw() {\n    return this.index === 1;\n  }\n\n  get isSha256() {\n    return this.index === 3;\n  }\n\n  get isShaThree256() {\n    return this.index === 5;\n  }\n  /**\n   * @description The encoded length\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   */\n\n\n  toU8a() {\n    if (this.index === 0) {\n      return new Uint8Array(1);\n    } else if (this.index === 1) {\n      // don't add the length, just the data\n      const data = this.value.toU8a(true);\n      const length = Math.min(data.length, 32);\n      const u8a = new Uint8Array(length + 1);\n      u8a.set([length + 1], 0);\n      u8a.set(data.subarray(0, length), 1);\n      return u8a;\n    } // otherwise we simply have a hash\n\n\n    const u8a = new Uint8Array(33);\n    u8a.set([this.index + 32], 0);\n    u8a.set(this.value.toU8a(), 1);\n    return u8a;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sshash } from \"./sshash.js\";\nexport function checkAddressChecksum(decoded) {\n  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix\n\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = sshash(decoded.subarray(0, length));\n  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  return [isValid, length, ss58Length, ss58Decoded];\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6\nimport { assert, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from \"../base58/index.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n  assert(encoded, 'Invalid empty address passed');\n\n  if (isU8a(encoded) || isHex(encoded)) {\n    return u8aToU8a(encoded);\n  }\n\n  try {\n    const decoded = base58Decode(encoded);\n    assert(defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n    assert(ignoreChecksum || isValid, 'Invalid decoded address checksum');\n    assert([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n    return decoded.slice(ss58Length, endPos);\n  } catch (error) {\n    throw new Error(`Decoding ${encoded}: ${error.message}`);\n  }\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { availableNetworks } from \"../networks.js\";\nexport const defaults = {\n  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n  allowedPrefix: availableNetworks.map(({\n    prefix\n  }) => prefix),\n  prefix: 42\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { base58Encode } from \"../base58/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { defaults } from \"./defaults.js\";\nimport { sshash } from \"./sshash.js\";\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n  assert(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');\n  assert(defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n  return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util'; // re-export the type so *.d.ts files don't have ../src imports\n\n/** @internal */\nexport function createDecode({\n  coder,\n  ipfs\n}, validate) {\n  return (value, ipfsCompat) => {\n    validate(value, ipfsCompat);\n    return coder.decode(ipfs && ipfsCompat ? value.substring(1) : value);\n  };\n}\n/** @internal */\n\nexport function createEncode({\n  coder,\n  ipfs\n}) {\n  return (value, ipfsCompat) => {\n    const out = coder.encode(u8aToU8a(value));\n    return ipfs && ipfsCompat ? `${ipfs}${out}` : out;\n  };\n}\n/** @internal */\n\nexport function createIs(validate) {\n  return (value, ipfsCompat) => {\n    try {\n      return validate(value, ipfsCompat);\n    } catch (error) {\n      return false;\n    }\n  };\n}\n/** @internal */\n\nexport function createValidate({\n  chars,\n  ipfs,\n  type\n}) {\n  return (value, ipfsCompat) => {\n    assert(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);\n\n    if (ipfs && ipfsCompat) {\n      assert(value[0] === ipfs, () => `Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n    }\n\n    for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n      assert(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])), () => `Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n    }\n\n    return true;\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  coder: base58,\n  ipfs: 'z',\n  type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\n\nexport const base58Validate = createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\n\nexport const base58Decode = createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\n\nexport const base58Encode = createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\n\nexport const isBase58 = createIs(base58Validate);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from \"../helpers.js\";\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\n\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : blake2bJs(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nexport const blake2AsHex = createAsHex(blake2AsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BN_BE_OPTS = {\n  isLe: false\n};\nexport const BN_LE_OPTS = {\n  isLe: true\n};\nexport const BN_LE_16_OPTS = {\n  bitLength: 16,\n  isLe: true\n};\nexport const BN_BE_32_OPTS = {\n  bitLength: 32,\n  isLe: false\n};\nexport const BN_LE_32_OPTS = {\n  bitLength: 32,\n  isLe: true\n};\nexport const BN_BE_256_OPTS = {\n  bitLength: 256,\n  isLe: false\n};\nexport const BN_LE_256_OPTS = {\n  bitLength: 256,\n  isLe: true\n};\nexport const BN_LE_512_OPTS = {\n  bitLength: 512,\n  isLe: true\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  const u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  const address = u8aToHex(getH160(u8aAddress), -1, false);\n  const hash = u8aToHex(keccakAsU8a(address), -1, false);\n  let result = '';\n\n  for (let i = 0; i < 40; i++) {\n    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n  }\n\n  return `0x${result}`;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from \"./isChecksum.js\";\nexport function isEthereumAddress(address) {\n  if (!address || address.length !== 42 || !isHex(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  }\n\n  return isEthereumChecksum(address);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\n\nfunction isInvalidChar(char, byte) {\n  return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());\n}\n\nexport function isEthereumChecksum(_address) {\n  const address = _address.replace('0x', '');\n\n  const hash = u8aToHex(keccakAsU8a(address.toLowerCase()), -1, false);\n\n  for (let i = 0; i < 40; i++) {\n    if (isInvalidChar(address[i], parseInt(hash[i], 16))) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n/** @internal */\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\n/** @internal */\n\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\n/** @internal */\n\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nexport const keccakAsU8a = createDualHasher({\n  256: keccak256,\n  512: keccak512\n}, {\n  256: keccak256Js,\n  512: keccak512Js\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\nexport const keccak256AsU8a = createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nexport const keccak512AsU8a = createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nexport const keccakAsHex = createAsHex(keccakAsU8a);","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, toBytes, u32 } from './utils.js';\n// prettier-ignore\nexport const SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        assert.number(blockLen);\n        assert.number(outputLen);\n        assert.number(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('Blake2: outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`Salt should be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`Personalization should be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        assert.exists(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                this.compress(buffer32, 0, false);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = data.byteOffset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        this.compress(buffer32, 0, true);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = v));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { BLAKE2, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nfunction G2(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends BLAKE2 {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = IV[0] | 0;\n        this.v0h = IV[1] | 0;\n        this.v1l = IV[2] | 0;\n        this.v1h = IV[3] | 0;\n        this.v2l = IV[4] | 0;\n        this.v2h = IV[5] | 0;\n        this.v3l = IV[6] | 0;\n        this.v3h = IV[7] | 0;\n        this.v4l = IV[8] | 0;\n        this.v4h = IV[9] | 0;\n        this.v5l = IV[10] | 0;\n        this.v5h = IV[11] | 0;\n        this.v6l = IV[12] | 0;\n        this.v6h = IV[13] | 0;\n        this.v7l = IV[14] | 0;\n        this.v7h = IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= salt[0];\n            this.v4h ^= salt[1];\n            this.v5l ^= salt[2];\n            this.v5h ^= salt[3];\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= pers[0];\n            this.v6h ^= pers[1];\n            this.v7l ^= pers[2];\n            this.v7h ^= pers[3];\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n        BUF.set(IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BUF[24] = IV[8] ^ l; // Low word of the offset.\n        BUF[25] = IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BUF[28] = ~BUF[28];\n            BUF[29] = ~BUF[29];\n        }\n        let j = 0;\n        const s = SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BUF[0] ^ BUF[16];\n        this.v0h ^= BUF[1] ^ BUF[17];\n        this.v1l ^= BUF[2] ^ BUF[18];\n        this.v1h ^= BUF[3] ^ BUF[19];\n        this.v2l ^= BUF[4] ^ BUF[20];\n        this.v2h ^= BUF[5] ^ BUF[21];\n        this.v3l ^= BUF[6] ^ BUF[22];\n        this.v3h ^= BUF[7] ^ BUF[23];\n        this.v4l ^= BUF[8] ^ BUF[24];\n        this.v4h ^= BUF[9] ^ BUF[25];\n        this.v5l ^= BUF[10] ^ BUF[26];\n        this.v5h ^= BUF[11] ^ BUF[27];\n        this.v6l ^= BUF[12] ^ BUF[28];\n        this.v6h ^= BUF[13] ^ BUF[29];\n        this.v7l ^= BUF[14] ^ BUF[30];\n        this.v7h ^= BUF[15] ^ BUF[31];\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nexport function secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  assert(publicKey.length === 33, 'Invalid publicKey provided');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = Point.fromHex(publicKey);\n  return u8aConcat(bnToU8a(x, BN_BE_256_OPTS), bnToU8a(y, BN_BE_256_OPTS));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { isBigInt } from \"../is/bigInt.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\nimport { BN } from \"./bn.js\";\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\n\nexport function bnToBn(value) {\n  return value ? BN.isBN(value) ? value : isHex(value) ? hexToBn(value.toString()) : isBigInt(value) ? new BN(value.toString()) : isToBn(value) ? value.toBn() : isToBigInt(value) ? new BN(value.toBigInt().toString()) : new BN(value) : new BN(0);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToHex } from \"../u8a/index.js\";\nimport { bnToU8a } from \"./toU8a.js\";\nconst ZERO_STR = '0x00';\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\n\n/** @deprecated Use bnToHex (value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\nfunction bnToHex(value, arg1 = DEFAULT_OPTS, arg2 = false) {\n  return !value ? ZERO_STR : u8aToHex(bnToU8a(value, objectSpread( // We spread here, the default for hex values is BE (JSONRPC via substrate)\n  {\n    isLe: false,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1)));\n}\n\nexport { bnToHex };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { bnToBn } from \"./toBn.js\";\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: true,\n  isNegative: false\n};\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\n\n/** @deprecated Use bnToU8a(value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\nfunction bnToU8a(value, arg1 = DEFAULT_OPTS, arg2 = true) {\n  const {\n    bitLength = -1,\n    isLe = true,\n    isNegative = false\n  } = isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1;\n  const valueBn = bnToBn(value);\n  const byteLength = bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((bitLength || 0) / 8);\n\n  if (!value) {\n    return bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);\n  }\n\n  const output = new Uint8Array(byteLength);\n  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n  return output;\n}\n\nexport { bnToU8a };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcatStrict } from \"../u8a/index.js\";\nimport { compactToU8a } from \"./toU8a.js\";\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\n\nexport function compactAddLength(input) {\n  return u8aConcatStrict([compactToU8a(input.length), input]);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/index.js\";\nimport { u8aToBn, u8aToU8a } from \"../u8a/index.js\";\n/**\n * @name compactFromU8a\n * @description Retrives the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\n\nexport function compactFromU8a(input) {\n  const u8a = u8aToU8a(input); // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n  // than doing an additional call to u8aToBn (as with variable length)\n\n  switch (u8a[0] & 0b11) {\n    case 0b00:\n      return [1, new BN(u8a[0] >>> 2)];\n\n    case 0b01:\n      return [2, new BN(u8a[0] + (u8a[1] << 8) >>> 2)];\n\n    case 0b10:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return [4, new BN(u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2)];\n    // 0b11\n\n    default:\n      {\n        // add 5 to shifted (4 for base length, 1 for this byte)\n        const offset = (u8a[0] >>> 2) + 5; // we unroll the loop\n\n        switch (offset) {\n          // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n          case 5:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return [5, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000)];\n\n          case 6:\n            return [6, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000)];\n          // 6 bytes data is the maximum, 48 bits (56 would overflow)\n\n          case 7:\n            return [7, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000)];\n          // for anything else, use the non-unrolled version\n\n          default:\n            return [offset, u8aToBn(u8a.subarray(1, offset))];\n        }\n      }\n  }\n}\n/**\n * @name compactFromU8aLim\n * @description A limited version of [[compactFromU8a]], accepting only Uint8Array inputs for values <= 48 bits\n */\n\nexport function compactFromU8aLim(u8a) {\n  // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n  // than doing an additional call to u8aToBn (as with variable length)\n  switch (u8a[0] & 0b11) {\n    case 0b00:\n      return [1, u8a[0] >>> 2];\n\n    case 0b01:\n      return [2, u8a[0] + (u8a[1] << 8) >>> 2];\n\n    case 0b10:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return [4, u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2];\n    // 0b11\n\n    default:\n      {\n        // add 5 to shifted (4 for base length, 1 for this byte)\n        // we unroll the loop\n        switch ((u8a[0] >>> 2) + 5) {\n          // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n          case 5:\n            return [5, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000];\n\n          case 6:\n            return [6, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000];\n          // 6 bytes data is the maximum, 48 bits (56 would overflow)\n\n          case 7:\n            return [7, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000];\n          // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out\n\n          default:\n            throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');\n        }\n      }\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a } from \"./fromU8a.js\";\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\n\nexport function compactStripLength(input) {\n  const [offset, length] = compactFromU8a(input);\n  const total = offset + length.toNumber();\n  return [total, input.subarray(offset, total)];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from \"../bn/index.js\";\nimport { u8aConcatStrict } from \"../u8a/index.js\";\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = {\n  bitLength: 16\n};\nconst BL_32 = {\n  bitLength: 32\n};\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n  }\n\n  const u8a = bnToU8a(bn);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  if (length < 4) {\n    throw new Error('Invalid length, previous checks match anything less than 2^30');\n  }\n\n  return u8aConcatStrict([// subtract 4 as minimum (also catered for in decoding)\n  new Uint8Array([(length - 4 << 2) + 0b11]), u8a.subarray(0, length)]);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { isUndefined } from \"../is/undefined.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\nimport { calcSi, findSi, SI, SI_MID } from \"./si.js\";\nconst DEFAULT_DECIMALS = 0;\nconst DEFAULT_UNIT = SI[SI_MID].text;\nlet defaultDecimals = DEFAULT_DECIMALS;\nlet defaultUnit = DEFAULT_UNIT;\n\nfunction getUnits(si, withSi, withSiFull, withUnit) {\n  const unit = isBoolean(withUnit) ? SI[SI_MID].text : withUnit;\n  return withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${unit}` : '' : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}` : '';\n}\n\nfunction getPrePost(text, decimals, forceUnit) {\n  // NOTE We start at midpoint (8) minus 1 - this means that values display as\n  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we use ceil\n  // so there are at most 3 decimal before the decimal separator\n  const si = calcSi(text, decimals, forceUnit);\n  const mid = text.length - (decimals + si.power);\n  const prefix = text.substring(0, mid);\n  const padding = mid < 0 ? 0 - mid : 0;\n  const postfix = `${`${new Array(padding + 1).join('0')}${text}`.substring(mid < 0 ? 0 : mid)}0000`.substring(0, 4);\n  return [si, prefix || '0', postfix];\n} // Formats a string/number with <prefix>.<postfix><type> notation\n\n\nfunction _formatBalance(input, options = true, optDecimals = defaultDecimals) {\n  let text = bnToBn(input).toString();\n\n  if (text.length === 0 || text === '0') {\n    return '0';\n  } // extract options - the boolean case is for backwards-compat\n\n\n  const {\n    decimals = optDecimals,\n    forceUnit = undefined,\n    withSi = true,\n    withSiFull = false,\n    withUnit = true\n  } = isBoolean(options) ? {\n    withSi: options\n  } : options; // strip the negative sign so we can work with clean groupings, re-add this in the\n  // end when we return the result (from here on we work with positive numbers)\n\n  let sign = '';\n\n  if (text[0].startsWith('-')) {\n    sign = '-';\n    text = text.substring(1);\n  }\n\n  const [si, prefix, postfix] = getPrePost(text, decimals, forceUnit);\n  const units = getUnits(si, withSi, withSiFull, withUnit);\n  return `${sign}${formatDecimal(prefix)}.${postfix}${units}`;\n}\n\nexport const formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.calcSi = (text, decimals = defaultDecimals) => calcSi(text, decimals); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.findSi = findSi; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.getDefaults = () => {\n  return {\n    decimals: defaultDecimals,\n    unit: defaultUnit\n  };\n}; // get allowable options to display in a dropdown\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.getOptions = (decimals = defaultDecimals) => {\n  return SI.filter(({\n    power\n  }) => power < 0 ? decimals + power >= 0 : true);\n}; // Sets the default decimals to use for formatting (ui-wide)\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.setDefaults = ({\n  decimals,\n  unit\n}) => {\n  defaultDecimals = isUndefined(decimals) ? defaultDecimals : Array.isArray(decimals) ? decimals[0] : decimals;\n  defaultUnit = isUndefined(unit) ? defaultUnit : Array.isArray(unit) ? unit[0] : unit;\n  SI[SI_MID].text = defaultUnit;\n};","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction zeroPad(value) {\n  return value.toString().padStart(2, '0');\n}\n/**\n * @name formatDate\n * @description Formats a date in CCYY-MM-DD HH:MM:SS format\n */\n\n\nexport function formatDate(date) {\n  const year = date.getFullYear().toString();\n  const month = zeroPad(date.getMonth() + 1);\n  const day = zeroPad(date.getDate());\n  const hour = zeroPad(date.getHours());\n  const minute = zeroPad(date.getMinutes());\n  const second = zeroPad(date.getSeconds());\n  return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line prefer-regex-literals\nconst NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\n/**\n * @name formatDecimal\n * @description Formats a number into string format with thousand seperators\n */\n\nexport function formatDecimal(value) {\n  // We can do this by adjusting the regx, however for the sake of clarity\n  // we rather strip and re-add the negative sign in the output\n  const isNegative = value[0].startsWith('-');\n  const matched = isNegative ? value.substring(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);\n  return matched ? `${isNegative ? '-' : ''}${matched.join(',')}` : value;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\n/**\n * @name formatNumber\n * @description Formats a number into string format with thousand seperators\n */\n\nexport function formatNumber(value) {\n  return formatDecimal(bnToBn(value).toString());\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport const SI_MID = 8;\n/** @internal */\n\nexport const SI = [{\n  power: -24,\n  text: 'yocto',\n  value: 'y'\n}, {\n  power: -21,\n  text: 'zepto',\n  value: 'z'\n}, {\n  power: -18,\n  text: 'atto',\n  value: 'a'\n}, {\n  power: -15,\n  text: 'femto',\n  value: 'f'\n}, {\n  power: -12,\n  text: 'pico',\n  value: 'p'\n}, {\n  power: -9,\n  text: 'nano',\n  value: 'n'\n}, {\n  power: -6,\n  text: 'micro',\n  value: 'µ'\n}, {\n  power: -3,\n  text: 'milli',\n  value: 'm'\n}, {\n  power: 0,\n  text: 'Unit',\n  value: '-'\n}, // position 8\n{\n  power: 3,\n  text: 'Kilo',\n  value: 'k'\n}, {\n  power: 6,\n  text: 'Mill',\n  value: 'M'\n}, // Mega, M\n{\n  power: 9,\n  text: 'Bill',\n  value: 'B'\n}, // Giga, G\n{\n  power: 12,\n  text: 'Tril',\n  value: 'T'\n}, // Tera, T\n{\n  power: 15,\n  text: 'Peta',\n  value: 'P'\n}, {\n  power: 18,\n  text: 'Exa',\n  value: 'E'\n}, {\n  power: 21,\n  text: 'Zeta',\n  value: 'Z'\n}, {\n  power: 24,\n  text: 'Yotta',\n  value: 'Y'\n}]; // Given a SI type (e.g. k, m, Y) find the SI definition\n\n/** @internal */\n\nexport function findSi(type) {\n  // use a loop here, better RN support (which doesn't have [].find)\n  for (let i = 0; i < SI.length; i++) {\n    if (SI[i].value === type) {\n      return SI[i];\n    }\n  }\n\n  return SI[SI_MID];\n}\n/** @internal */\n\nexport function calcSi(text, decimals, forceUnit) {\n  if (forceUnit) {\n    return findSi(forceUnit);\n  }\n\n  const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);\n  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\n/** true if the environment has proper BigInt support */\n\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\n/** true if the environment has support for Buffer */\n\nexport const hasBuffer = typeof Buffer !== 'undefined';\n/** true if the environment is CJS */\n\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\n\nexport const hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\n\nexport const hasEsm = !hasCjs;\n/** true if the environment has process available (typically Node.js) */\n\nexport const hasProcess = typeof process === 'object';\n/** true if the environment has WebAssembly available */\n\nexport const hasWasm = typeof WebAssembly !== 'undefined';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from \"../is/hex.js\";\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value || value === '0x') {\n    return '';\n  } else if (REGEX_HEX_PREFIXED.test(value)) {\n    return value.substring(2);\n  } else if (REGEX_HEX_NOPREFIX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Expected hex value to convert, found '${value}'`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\n\n/** @deprecated Use hexToBn (value?: string | null, options?: ToBnOptions) */\nfunction hexToBn(value, options = {}) {\n  if (!value || value === '0x') {\n    return new BN(0);\n  } // For hex, default to BE\n\n\n  const {\n    isLe = false,\n    isNegative = false\n  } = isBoolean(options) ? {\n    isLe: options\n  } : options;\n  const stripped = hexStripPrefix(value);\n  const bn = new BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length\n  // multiplied by 4 (2 bytes being 8 bits)\n\n  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}\n\nexport { hexToBn };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexStripPrefix } from \"./stripPrefix.js\";\nconst CHARS = '0123456789abcdef';\nconst UNHEX = new Array(256);\n\nfor (let i = 0; i < CHARS.length; i++) {\n  UNHEX[CHARS[i].charCodeAt(0)] = i;\n\n  if (i > 9) {\n    UNHEX[CHARS[i].toUpperCase().charCodeAt(0)] = i;\n  }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\n\n\nexport function hexToU8a(value, bitLength = -1) {\n  if (!value) {\n    return new Uint8Array();\n  }\n\n  const str = hexStripPrefix(value);\n  const strLength = str.length / 2;\n  const endLength = Math.ceil(bitLength === -1 ? strLength : bitLength / 8);\n  const result = new Uint8Array(endLength);\n  const offset = endLength > strLength ? endLength - strLength : 0;\n\n  for (let i = offset, s = 0; i < endLength; i++, s += 2) {\n    // The big factor here is actually the string lookups. If we do\n    // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n    // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n    // also the faster operation by at least 2x with the character map above\n    result[i] = (UNHEX[str.charCodeAt(s)] << 4) + UNHEX[str.charCodeAt(s + 1)] | 0;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isHex } from \"./hex.js\";\nimport { isString } from \"./string.js\";\n/** @internal */\n\nfunction isAsciiStr(str) {\n  const count = str.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = str.charCodeAt(i); // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/** @internal */\n\n\nfunction isAsciiU8a(u8a) {\n  const count = u8a.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = u8a[i]; // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\n\nexport function isAscii(value) {\n  return isString(value) && !isHex(value) ? isAsciiStr(value) : value ? isAsciiU8a(u8aToU8a(value)) : false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n  return typeof value === 'bigint';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\n\nexport function isBn(value) {\n  return BN.isBN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBuffer } from \"../has.js\";\nimport { isFunction } from \"./function.js\";\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\n\nexport function isBuffer(value) {\n  // we do check a function first, since it is slightly faster than isBuffer itself\n  return hasBuffer && isFunction(value && value.readDoubleLE) && Buffer.isBuffer(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOnObject } from \"./helpers.js\";\nconst checkCodec = isOnObject('toHex', 'toU8a');\nconst checkRegistry = isOnObject('get');\nexport function isCodec(value) {\n  return checkCodec(value) && checkRegistry(value.registry);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./function.js\";\nimport { isObject } from \"./object.js\";\nexport function isOn(...fns) {\n  return value => (isObject(value) || isFunction(value)) && fns.every(f => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n  return value => isObject(value) && fns.every(f => isFunction(value[f]));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n\nexport function isHex(value, bitLength = -1, ignoreLength) {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n  return value === null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n  return !!value && typeof value === 'object';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBigInt = isOn('toBigInt');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBn = isOn('toBn');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n  // here we defer the instanceof check which is actually slightly\n  // slower than just checking the constrctor (direct instances)\n  return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from https://github.com/JulienPalard/is_utf8/blob/master/is_utf8.c\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isString } from \"./string.js\";\n/**\n * @name isUtf8\n * @summary Tests if the input is valid Utf8\n * @description\n * Checks to see if the input string or Uint8Array is valid Utf8\n */\n\nexport function isUtf8(value) {\n  if (!value) {\n    return isString(value);\n  }\n\n  const u8a = u8aToU8a(value);\n  const len = u8a.length;\n  let i = 0;\n\n  while (i < len) {\n    if (u8a[i] <= 0x7F)\n      /* 00..7F */\n      {\n        i += 1;\n      } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF)\n      /* C2..DF 80..BF */\n      {\n        if (i + 1 < len)\n          /* Expect a 2nd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between C2 and DF, expecting a 2nd byte.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 2;\n      } else if (u8a[i] === 0xE0)\n      /* E0 A0..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 2nd byte between A0 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 3nd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of E0, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC)\n      /* E1..EC 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between E1 and EC, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xED)\n      /* ED 80..9F 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {\n              // *message = \"After a first byte of ED, expecting 2nd byte between 80 and 9F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of ED, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of ED, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF)\n      /* EE..EF 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between EE and EF, two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xF0)\n      /* F0 90..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 2nd byte between 90 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F0, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3)\n      /* F1..F3 80..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F1, F2, or F3, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] === 0xF4)\n      /* F4 80..8F 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {\n              // *message = \"After a first byte of F4, expecting 2nd byte between 80 and 8F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F4, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else {\n      // *message = \"Expecting bytes in the following ranges: 00..7F C2..F4.\";\n      // *faulty_bytes = 1;\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name lazyMethod\n * @description\n * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.\n */\nexport function lazyMethod(result, item, creator, getName) {\n  const name = getName ? getName(item) : item.toString();\n  let value;\n  Object.defineProperty(result, name, {\n    // This allows for re-configuration with the embedded defineProperty below\n    // and ensures that on tested browsers and Node, it _will_ be redefined\n    // and thus short-circuited for future access\n    configurable: true,\n    enumerable: true,\n    // Use a function here, we don't want to capture the outer this, i.e.\n    // don't use arrow functions in this context since we have a this inside\n    get: function () {\n      // This check should _always_ be false and unneeded, since we override\n      // with a value below ... however we ensure we are quire vigilant against\n      // all environment failures, so we are rather be safe than sorry\n      if (isUndefined(value)) {\n        value = creator(item);\n\n        try {\n          // re-define the property as a value, next time around this\n          // getter will only return the computed value\n          Object.defineProperty(this, name, {\n            value\n          });\n        } catch {// ignore any errors, since this _should_ not happen due to\n          // the \"configurable\" property above. But if it ever does\n          // from here-on we will be the cached value the next time\n          // around (with a very slight dip in performance)\n        }\n      }\n\n      return value;\n    }\n  });\n}\n/**\n * @name lazyMethods\n * @description\n * Creates lazy, on-demand getters for the specific values.\n */\n\nexport function lazyMethods(result, items, creator, getName) {\n  for (let i = 0; i < items.length; i++) {\n    lazyMethod(result, items[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { formatDate } from \"./format/formatDate.js\";\nimport { isBn } from \"./is/bn.js\";\nimport { isBuffer } from \"./is/buffer.js\";\nimport { isFunction } from \"./is/function.js\";\nimport { isObject } from \"./is/object.js\";\nimport { isU8a } from \"./is/u8a.js\";\nimport { u8aToHex } from \"./u8a/toHex.js\";\nimport { u8aToU8a } from \"./u8a/toU8a.js\";\nimport { hasProcess } from \"./has.js\";\nconst logTo = {\n  debug: 'log',\n  error: 'error',\n  log: 'log',\n  warn: 'warn'\n};\n\nfunction formatOther(value) {\n  if (value && isObject(value) && value.constructor === Object) {\n    const result = {};\n\n    for (const k of Object.keys(value)) {\n      result[k] = loggerFormat(value[k]);\n    }\n\n    return result;\n  }\n\n  return value;\n}\n\nexport function loggerFormat(value) {\n  if (Array.isArray(value)) {\n    return value.map(loggerFormat);\n  } else if (isBn(value)) {\n    return value.toString();\n  } else if (isU8a(value) || isBuffer(value)) {\n    return u8aToHex(u8aToU8a(value));\n  }\n\n  return formatOther(value);\n}\n\nfunction formatWithLength(maxLength) {\n  return v => {\n    if (maxLength <= 0) {\n      return v;\n    }\n\n    const r = `${v}`;\n    return r.length < maxLength ? v : `${r.substring(0, maxLength)} ...`;\n  };\n}\n\nfunction apply(log, type, values, maxSize = -1) {\n  if (values.length === 1 && isFunction(values[0])) {\n    const fnResult = values[0]();\n    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);\n  }\n\n  console[logTo[log]](formatDate(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));\n}\n\nfunction noop() {// noop\n}\n\nfunction isDebugOn(e, type) {\n  return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));\n}\n\nfunction isDebugOff(e, type) {\n  return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));\n}\n\nfunction getDebugFlag(env, type) {\n  let flag = false;\n\n  for (const e of env) {\n    if (isDebugOn(e, type)) {\n      flag = true;\n    } else if (isDebugOff(e, type)) {\n      flag = false;\n    }\n  }\n\n  return flag;\n}\n\nfunction parseEnv(type) {\n  const env = (hasProcess ? process : {}).env || {};\n  const maxSize = parseInt(env.DEBUG_MAX || '-1', 10);\n  return [getDebugFlag((env.DEBUG || '').toLowerCase().split(','), type), isNaN(maxSize) ? -1 : maxSize];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot';\n *\n * const l = logger('test');\n * ```\n */\n\n\nexport function logger(_type) {\n  const type = `${_type.toUpperCase()}:`.padStart(16);\n  const [isDebug, maxSize] = parseEnv(_type.toLowerCase());\n  return {\n    debug: isDebug ? (...values) => apply('debug', type, values, maxSize) : noop,\n    error: (...values) => apply('error', type, values),\n    log: (...values) => apply('log', type, values),\n    noop,\n    warn: (...values) => apply('warn', type, values)\n  };\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectProperty\n * @summary Assign a get property on the input object\n */\nexport function objectProperty(that, key, getter) {\n  // There are 3 approaches here -\n  //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e\n  //    will retuirn false if the property is set in the parent class\n  //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.\n  //    Additionally, on pre-defined getters it may make a call\n  //  - key in that - Does not need to be combined with either of the above and checks the full chain\n  if (!(key in that)) {\n    Object.defineProperty(that, key, {\n      enumerable: true,\n      // Unlike in lazy, we always call into the upper function, i.e. this method\n      // does not cache old values (it is expected to be used for dynamic values)\n      get: () => getter(key)\n    });\n  }\n}\n/**\n * @name objectProperties\n * @summary Assign get properties on the input object\n */\n\nexport function objectProperties(that, keys, getter) {\n  for (let i = 0; i < keys.length; i++) {\n    objectProperty(that, keys[i], k => getter(k, i));\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest, ...sources) {\n  for (let i = 0; i < sources.length; i++) {\n    const src = sources[i];\n\n    if (src) {\n      Object.assign(dest, src);\n    }\n  }\n\n  return dest;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const CC_TO_UP = new Array(256);\nexport const CC_TO_LO = new Array(256);\n\nfor (let i = 0; i < CC_TO_UP.length; i++) {\n  CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();\n  CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();\n}\n/** @internal */\n\n\nfunction formatAllCaps(w) {\n  return w.slice(0, w.length - 1).toLowerCase() + CC_TO_UP[w.charCodeAt(w.length - 1)];\n}\n/**\n * @internal\n *\n * Inspired by https://stackoverflow.com/a/2970667\n *\n * This is not as optimal as the original SO answer (we split into per-word),\n * however it does pass the tests (which the SO version doesn't) and is still\n * a major improvement over the original camelcase npm package -\n *\n *   camelcase: 20.88 μs/op\n *        this:  1.00 μs/op\n *\n * Caveat of this: only Ascii, but acceptable for the intended usecase\n */\n\n\nfunction converter(format) {\n  return value => {\n    const parts = value // replace all seperators (including consequtive) with spaces\n    .replace(/[-_., ]+/g, ' ') // we don't want leading or trailing spaces\n    .trim() // split into words\n    .split(' ');\n    const count = parts.length;\n    let result = '';\n\n    for (let i = 0; i < count; i++) {\n      const w = parts[i]; // apply the formatting\n\n      result += format(/^[\\dA-Z]+$/.test(w) // all full uppercase + letters are changed to lowercase\n      ? w.toLowerCase() // all consecutive capitals + letters are changed to lowercase\n      // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder\n      : w.replace(/^[\\dA-Z]{2,}[^a-z]/, formatAllCaps), i);\n    }\n\n    return result;\n  };\n}\n/**\n * @name stringCamelCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase\n */\n\n\nexport const stringCamelCase = converter((w, i) => // lowercase for first letter/first word, else uppercase first, rest unchanged\n(i ? CC_TO_UP[w.charCodeAt(0)] : CC_TO_LO[w.charCodeAt(0)]) + w.slice(1));\n/**\n * @name stringPascalCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase\n */\n\nexport const stringPascalCase = converter(w => // uppercase the first character, leave the rest unchanged\nCC_TO_UP[w.charCodeAt(0)] + w.slice(1));","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\n\nexport function stringToU8a(value) {\n  return value ? encoder.encode(value.toString()) : new Uint8Array();\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBigInt } from \"./is/bigInt.js\";\n/** @internal */\n\nfunction replacer(_, v) {\n  return isBigInt(v) ? v.toString() : v;\n}\n/**\n * @name stringify\n * @summary Performs a JSON.stringify, with BigInt handling\n * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.\n */\n\n\nexport function stringify(value, space) {\n  return JSON.stringify(value, replacer, space);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\n\nexport function u8aConcat(...list) {\n  const u8as = new Array(list.length);\n  let length = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    u8as[i] = u8aToU8a(list[i]);\n    length += u8as[i].length;\n  }\n\n  return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\n\nexport function u8aConcatStrict(u8as, length = 0) {\n  let offset = 0;\n\n  if (!length) {\n    for (let i = 0; i < u8as.length; i++) {\n      length += u8as[i].length;\n    }\n  }\n\n  const result = new Uint8Array(length);\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4;\n    const length = u8aa.length - mod;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian (default)\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n/** @deprecated Use u8aToBn (value?: string | null, options?: ToBnOptions) */\nfunction u8aToBn(value, options = {}) {\n  // NOTE: This is the same process as followed in the hexToBn conversion\n  // For Uint8Array, default to LE\n  const {\n    isLe = true,\n    isNegative = false\n  } = isBoolean(options) ? {\n    isLe: options\n  } : options;\n  const count = value.length; // shortcut for <= u48 values - in this case the manual conversion\n  // here seems to be more efficient than passing the full array\n\n  if (count <= 6) {\n    if (isNegative) {\n      let result = 0;\n\n      if (isLe) {\n        // Most common case i{8, 16, 32} default LE SCALE-encoded\n        // For <= 32, we also optimize the xor to a single op\n        // (see the comments around unrolling in the next section)\n        switch (count) {\n          case 0:\n            return new BN(0);\n\n          case 1:\n            result = value[0] ^ 0x000000ff;\n            break;\n\n          case 2:\n            result = value[0] + (value[1] << 8) ^ 0x0000ffff;\n            break;\n\n          case 3:\n            result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;\n            break;\n\n          case 4:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;\n            break;\n\n          case 5:\n            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;\n            break;\n\n          default:\n            // 6\n            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;\n            break;\n        }\n      } else {\n        for (let i = 0; i < count; i++) {\n          result = result * 0x100 + (value[i] ^ 0xff);\n        }\n      }\n\n      return count ? new BN(result * -1 - 1) : new BN(0);\n    } else if (isLe) {\n      // Most common case - u{8, 16, 32} default LE SCALE-encoded\n      //\n      // There are some slight benefits in unrolling this specific loop,\n      // however it comes with diminishing returns since here the actual\n      // `new BN` does seem to take up the bulk of the time\n      switch (count) {\n        case 0:\n          return new BN(0);\n\n        case 1:\n          return new BN(value[0]);\n\n        case 2:\n          return new BN(value[0] + (value[1] << 8));\n\n        case 3:\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16));\n\n        case 4:\n          // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n          // 32-bit, in the case where the top-most bit is set this yields a negative value\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000);\n\n        case 5:\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000);\n\n        default:\n          // 6\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000);\n      }\n    } else {\n      let result = 0;\n\n      for (let i = 0; i < count; i++) {\n        result = result * 0x100 + value[i];\n      }\n\n      return new BN(result);\n    }\n  }\n\n  return isNegative ? new BN(value, isLe ? 'le' : 'be').fromTwos(value.length * 8) : new BN(value, isLe ? 'le' : 'be');\n}\n\nexport { u8aToBn };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst U8 = new Array(256);\nconst U16 = new Array(256 * 256);\n\nfor (let n = 0; n < 256; n++) {\n  U8[n] = n.toString(16).padStart(2, '0');\n}\n\nfor (let i = 0; i < 256; i++) {\n  const s = i << 8;\n\n  for (let j = 0; j < 256; j++) {\n    U16[s | j] = U8[i] + U8[j];\n  }\n}\n/** @internal */\n\n\nfunction hex(value) {\n  const mod = value.length % 2;\n  const length = value.length - mod;\n  const dv = new DataView(value.buffer, value.byteOffset);\n  let result = '';\n\n  for (let i = 0; i < length; i += 2) {\n    // we only use getUint16 here instead of getUint32 - at least in our\n    // tests this is faster to execute (both long & short strings tested)\n    result += U16[dv.getUint16(i)];\n  }\n\n  if (mod) {\n    result += U8[dv.getUint8(length)];\n  }\n\n  return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  const length = Math.ceil(bitLength / 8);\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : bitLength > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aToNumber\n * @summary Creates a number from a Uint8Array object.\n */\nexport function u8aToNumber(value, {\n  isNegative = false\n} = {}) {\n  const count = value.length;\n\n  if (isNegative) {\n    let result = 0;\n\n    switch (count) {\n      case 0:\n        return 0;\n\n      case 1:\n        result = value[0] ^ 0x000000ff;\n        break;\n\n      case 2:\n        result = value[0] + (value[1] << 8) ^ 0x0000ffff;\n        break;\n\n      case 3:\n        result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;\n        break;\n\n      case 4:\n        // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n        // 32-bit, in the case where the top-most bit is set this yields a negative value\n        result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;\n        break;\n\n      case 5:\n        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;\n        break;\n\n      case 6:\n        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;\n        break;\n\n      default:\n        throw new Error('Value more than 48-bits cannot be reliably converted');\n    }\n\n    return result * -1 - 1;\n  }\n\n  switch (count) {\n    case 0:\n      return 0;\n\n    case 1:\n      return value[0];\n\n    case 2:\n      return value[0] + (value[1] << 8);\n\n    case 3:\n      return value[0] + (value[1] << 8) + (value[2] << 16);\n\n    case 4:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000;\n\n    case 5:\n      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000;\n\n    case 6:\n      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000;\n\n    default:\n      throw new Error('Value more than 48-bits cannot be reliably converted');\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\n\nexport function u8aToString(value) {\n  return value ? decoder.decode(value) : '';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isU8a } from \"../is/u8a.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\nexport function u8aToU8a(value) {\n  return isU8a(value) ? value : isHex(value) ? hexToU8a(value) : isBuffer(value) || Array.isArray(value) ? new Uint8Array(value) : stringToU8a(value);\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// A number of functions are \"unsafe\" and purposefully so - it is\n// assumed that where the bridge is used, it is correctly wrapped\n// in a safeguard (see withWasm in the wasm-crypto package) which\n// then ensures that the internal wasm instance here is available\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { stringToU8a, u8aToString } from '@polkadot/util';\nimport { Wbg } from \"./wbg.js\";\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function white is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\n\nexport class Bridge {\n  #cachegetInt32;\n  #cachegetUint8;\n  #createWasm;\n  #heap;\n  #heapNext;\n  #wasm;\n  #wasmError;\n  #wasmPromise;\n  #wbg;\n  #type;\n\n  constructor(createWasm) {\n    this.#createWasm = createWasm;\n    this.#cachegetInt32 = null;\n    this.#cachegetUint8 = null;\n    this.#heap = new Array(32).fill(undefined).concat(undefined, null, true, false);\n    this.#heapNext = this.#heap.length;\n    this.#type = 'none';\n    this.#wasm = null;\n    this.#wasmError = null;\n    this.#wasmPromise = null;\n    this.#wbg = { ...new Wbg(this)\n    };\n  }\n  /** @description Returns the init error */\n\n\n  get error() {\n    return this.#wasmError;\n  }\n  /** @description Returns the init type */\n\n\n  get type() {\n    return this.#type;\n  }\n  /** @description Returns the created wasm interface */\n\n\n  get wasm() {\n    return this.#wasm;\n  }\n  /** @description Performs the wasm initialization */\n\n\n  async init(createWasm) {\n    if (!this.#wasmPromise || createWasm) {\n      this.#wasmPromise = (createWasm || this.#createWasm)(this.#wbg);\n    }\n\n    const {\n      error,\n      type,\n      wasm\n    } = await this.#wasmPromise;\n    this.#type = type;\n    this.#wasm = wasm;\n    this.#wasmError = error;\n    return this.#wasm;\n  }\n  /**\n   * @internal\n   * @description Gets an object from the heap\n   */\n\n\n  getObject(idx) {\n    return this.#heap[idx];\n  }\n  /**\n   * @internal\n   * @description Removes an object from the heap\n   */\n\n\n  dropObject(idx) {\n    if (idx < 36) {\n      return;\n    }\n\n    this.#heap[idx] = this.#heapNext;\n    this.#heapNext = idx;\n  }\n  /**\n   * @internal\n   * @description Retrieves and removes an object to the heap\n   */\n\n\n  takeObject(idx) {\n    const ret = this.getObject(idx);\n    this.dropObject(idx);\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Adds an object to the heap\n   */\n\n\n  addObject(obj) {\n    if (this.#heapNext === this.#heap.length) {\n      this.#heap.push(this.#heap.length + 1);\n    }\n\n    const idx = this.#heapNext;\n    this.#heapNext = this.#heap[idx];\n    this.#heap[idx] = obj;\n    return idx;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Int32 in the WASM interface\n   */\n\n\n  getInt32() {\n    if (this.#cachegetInt32 === null || this.#cachegetInt32.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetInt32 = new Int32Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetInt32;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Uint8Array in the WASM interface\n   */\n\n\n  getUint8() {\n    if (this.#cachegetUint8 === null || this.#cachegetUint8.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetUint8 = new Uint8Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetUint8;\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array in the WASM interface\n   */\n\n\n  getU8a(ptr, len) {\n    return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n  }\n  /**\n   * @internal\n   * @description Retrieves a string in the WASM interface\n   */\n\n\n  getString(ptr, len) {\n    return u8aToString(this.getU8a(ptr, len));\n  }\n  /**\n   * @internal\n   * @description Allocates an Uint8Array in the WASM interface\n   */\n\n\n  allocU8a(arg) {\n    const ptr = this.#wasm.__wbindgen_malloc(arg.length * 1);\n\n    this.getUint8().set(arg, ptr / 1);\n    return [ptr, arg.length];\n  }\n  /**\n   * @internal\n   * @description Allocates a string in the WASM interface\n   */\n\n\n  allocString(arg) {\n    return this.allocU8a(stringToU8a(arg));\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array from the WASM interface\n   */\n\n\n  resultU8a() {\n    const r0 = this.getInt32()[8 / 4 + 0];\n    const r1 = this.getInt32()[8 / 4 + 1];\n    const ret = this.getU8a(r0, r1).slice();\n\n    this.#wasm.__wbindgen_free(r0, r1 * 1);\n\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Retrieve a string from the WASM interface\n   */\n\n\n  resultString() {\n    return u8aToString(this.resultU8a());\n  }\n\n}","// Copyright 2019-2022 @polkadot/wasm-bundle authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name createWasmFn\n * @description\n * Create a WASM (or ASM.js) creator interface based on the supplied information.\n *\n * It will attempt to create a WASM interface first and if this fails or is not available in\n * the environment, will fallback to attempting to create an ASM.js interface.\n */\nexport function createWasmFn(root, wasmBytes, asmFn) {\n  return async wbg => {\n    const result = {\n      error: null,\n      type: 'none',\n      wasm: null\n    };\n\n    try {\n      if (!wasmBytes || !wasmBytes.length) {\n        throw new Error('No WebAssembly provided for initialization');\n      } else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {\n        throw new Error('WebAssembly is not available in your environment');\n      }\n\n      const source = await WebAssembly.instantiate(wasmBytes, {\n        wbg\n      });\n      result.wasm = source.instance.exports;\n      result.type = 'wasm';\n    } catch (error) {\n      // if we have a valid supplied asm.js, return that\n      if (typeof asmFn === 'function') {\n        result.wasm = asmFn(wbg);\n        result.type = 'asm';\n      } else {\n        result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;\n        console.error(result.error);\n      }\n    }\n\n    return result;\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nconst DEFAULT_CRYPTO = {\n  getRandomValues\n};\nconst DEFAULT_SELF = {\n  crypto: DEFAULT_CRYPTO\n};\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\n\nexport class Wbg {\n  #bridge;\n\n  constructor(bridge) {\n    this.#bridge = bridge;\n  }\n  /** @internal */\n\n\n  abort = () => {\n    throw new Error('abort');\n  };\n  /** @internal */\n\n  __wbindgen_is_undefined = idx => {\n    return this.#bridge.getObject(idx) === undefined;\n  };\n  /** @internal */\n\n  __wbindgen_throw = (ptr, len) => {\n    throw new Error(this.#bridge.getString(ptr, len));\n  };\n  /** @internal */\n\n  __wbg_self_1b7a39e3a92c949c = () => {\n    return this.#bridge.addObject(DEFAULT_SELF);\n  };\n  /** @internal */\n\n  __wbg_require_604837428532a733 = (ptr, len) => {\n    throw new Error(`Unable to require ${this.#bridge.getString(ptr, len)}`);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_crypto_968f1772287e2df0 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_a3d34b4fee3c2869 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n    DEFAULT_CRYPTO.getRandomValues(this.#bridge.getU8a(ptr, len));\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n    throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));\n  };\n  /** @internal */\n\n  __wbindgen_object_drop_ref = idx => {\n    this.#bridge.takeObject(idx);\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-crypto-init authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createWasmFn } from '@polkadot/wasm-bridge';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name createWasm\n * @description\n * Creates an interface using only WASM\n */\n\nexport const createWasm = createWasmFn('crypto', wasmBytes, null);","// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decode, unzlibSync } from '@polkadot/wasm-util';\nimport { bytes, lenIn, lenOut } from \"./cjs/bytes.js\";\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed form this\n * specific format and returned.\n */\n\nexport const wasmBytes = unzlibSync(base64Decode(bytes, new Uint8Array(lenIn)), new Uint8Array(lenOut));","// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated as part of the build, do not edit\n\nconst lenIn = 171116;\nconst lenOut = 339508;\nconst bytes = '';\n\nmodule.exports = { bytes, lenIn, lenOut };\n","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst chr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst map = {};\n\nfor (let i = 0; i < chr.length; i++) {\n  map[chr[i]] = i;\n}\n/**\n * @name base64Decode\n * @description\n * A base64Decoding function that operates in all environments. Unlike decoding\n * from Buffer (Node.js only) or atob (browser-only) this implementation is\n * slightly slower, but it is platform independent.\n *\n * For our usage, since we have access to the static final size (where used), we\n * decode to a specified output buffer.\n */\n\n\nexport function base64Decode(data, out) {\n  let byte = 0;\n  let bits = 0;\n  let pos = -1;\n\n  for (let i = 0; i < data.length && data[i] !== '='; i++) {\n    // each character represents 6 bits\n    byte = byte << 6 | map[data[i]]; // each byte needs to contain 8 bits\n\n    if ((bits += 6) >= 8) {\n      out[++pos] = byte >>> (bits -= 8) & 0xff;\n    }\n  }\n\n  return out;\n}","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// MIT License\n//\n// Copyright (c) 2020 Arjun Barrett\n//\n// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts\n// This only contains the unzlibSync function, no compression, no async, no workers\n//\n// These 2 issues are addressed as a short-term, stop-gap solution\n//   - https://github.com/polkadot-js/api/issues/2963\n//   - https://github.com/101arrowz/fflate/issues/17\n//\n// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with\n// only the single required function provided (compression is still being done in the build with fflate)\n\n/* eslint-disable */\n// inflate state\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array,\n      u16 = Uint16Array,\n      u32 = Uint32Array; // code length index map\n\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits\n\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n// see fleb note\n\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // get base, reverse index map from extra bits\n\nconst freb = (eb, start) => {\n  const b = new u16(31);\n\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  const r = new u32(b[30]);\n\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return [b, r];\n};\n\nconst [fl, revfl] = freb(fleb, 2); // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0); // map of value to reverse (assuming 16 bits)\n\nconst rev = new u16(32768);\n\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nconst hMap = (cd, mb, r) => {\n  const s = cd.length; // index\n\n  let i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  const l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) ++l[cd[i] - 1]; // u16 \"map\": index -> minimum code for bit length = index\n\n\n  const le = new u16(mb);\n\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  let co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    const rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = i << 4 | cd[i]; // free bits\n\n        const r = mb - cd[i]; // start value\n\n        let v = le[cd[i] - 1]++ << r; // m is end value\n\n        for (const m = v | (1 << r) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n  }\n\n  return co;\n}; // fixed length tree\n\n\nconst flt = new u8(288);\n\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (let i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nconst fdt = new u8(32);\n\nfor (let i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nconst flrm = hMap(flt, 9, 1); // fixed distance map\n\nconst fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m\n\nconst bits = (d, p, m) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nconst bits16 = (d, p) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);\n}; // get end of byte\n\n\nconst shft = p => (p >>> 3) + (p & 7 && 1); // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nconst slc = (v, s, e) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n}; // find max of array\n\n\nconst max = a => {\n  let m = a[0];\n\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // expands raw DEFLATE data\n\n\nconst inflt = (dat, buf, st) => {\n  const noSt = !st || st.i;\n  if (!st) st = {}; // source length\n\n  const sl = dat.length; // have to estimate size\n\n  const noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average\n\n  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  const cbuf = l => {\n    let bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl << 1, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  let final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n;\n  if (final && !lm) return buf; // total bits\n\n  const tbts = sl << 3;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4,\n              l = dat[s - 4] | dat[s - 3] << 8,\n              t = s + l;\n\n        if (t > sl) {\n          if (noSt) throw 'unexpected EOF';\n          break;\n        } // ensure size\n\n\n        if (noBuf) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t << 3;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257,\n              hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        const ldt = new u8(tl); // code length tree\n\n        const clt = new u8(19);\n\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        const clb = max(clt),\n              clbmsk = (1 << clb) - 1;\n        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map\n\n        const clm = hMap(clt, clb, 1);\n\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          const s = r >>> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        const lt = ldt.subarray(0, hLit),\n              dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else throw 'invalid block type';\n\n      if (pos > tbts) throw 'unexpected EOF';\n    } // Make sure the buffer can hold this + the largest possible addition\n    // maximum chunk size (practically, theoretically infinite) is 2^17;\n\n\n    if (noBuf) cbuf(bt + 131072);\n    const lms = (1 << lbt) - 1,\n          dms = (1 << dbt) - 1;\n    const mxa = lbt + dbt + 18;\n\n    while (noSt || pos + mxa < tbts) {\n      // bits read, code\n      const c = lm[bits16(dat, pos) & lms],\n            sym = c >>> 4;\n      pos += c & 15;\n      if (pos > tbts) throw 'unexpected EOF';\n      if (!c) throw 'invalid length/literal';\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lm = undefined;\n        break;\n      } else {\n        let add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          const i = sym - 257,\n                b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        const d = dm[bits16(dat, pos) & dms],\n              dsym = d >>> 4;\n        if (!d) throw 'invalid distance';\n        pos += d & 15;\n        let dt = fd[dsym];\n\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) throw 'unexpected EOF';\n        if (noBuf) cbuf(bt + 131072);\n        const end = bt + add;\n\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n\n        bt = end;\n      }\n    }\n\n    st.l = lm, st.p = pos, st.b = bt;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n}; // zlib valid\n\n\nconst zlv = d => {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';\n  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\n\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n}","// Copyright 2017-2022 @polkadot/x-bigint authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport const BigInt = typeof xglobal.BigInt === 'function' && typeof xglobal.BigInt.asIntN === 'function' ? xglobal.BigInt : () => Number.NaN;","// Copyright 2017-2022 @polkadot/x-global authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { packageInfo } from \"./packageInfo.js\";\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nexport const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nexport function extractGlobal(name, fallback) {\n  // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n  // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n  //\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nexport function exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}","// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport function getRandomValues(arr) {\n  // We use x-global here - this prevents packagers such as rollup\n  // confusing this with the \"normal\" Node.js import and stubbing it\n  // (and also aligns with eg. x-fetch, where x-global is used)\n  return xglobal.crypto.getRandomValues(arr);\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextDecoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextDecoder = extractGlobal('TextDecoder', Fallback);","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    let result = '';\n\n    for (let i = 0; i < value.length; i++) {\n      result += String.fromCharCode(value[i]);\n    }\n\n    return result;\n  }\n\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextEncoder = extractGlobal('TextEncoder', Fallback);","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextEncoder {\n  encode(value) {\n    const u8a = new Uint8Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      u8a[i] = value.charCodeAt(i);\n    }\n\n    return u8a;\n  }\n\n}","// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\",\n\t\t\t\"KTON\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://darwinia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-pos-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t11\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Spiritnet\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"poli\",\n\t\t\"displayName\": \"Polimec Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polimec.io/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 54,\n\t\t\"network\": \"cere\",\n\t\t\"displayName\": \"Cere Network\",\n\t\t\"symbols\": [\n\t\t\t\"CERE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cere.network\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 56,\n\t\t\"network\": \"pendulum\",\n\t\t\"displayName\": \"Pendulum chain\",\n\t\t\"symbols\": [\n\t\t\t\"PEN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 57,\n\t\t\"network\": \"amplitude\",\n\t\t\"displayName\": \"Amplitude chain\",\n\t\t\"symbols\": [\n\t\t\t\"AMPE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"HydraDX\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydradx.io\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"AvN Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 89,\n\t\t\"network\": \"polkadexparachain\",\n\t\t\"displayName\": \"Polkadex Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 93,\n\t\t\"network\": \"fragnova\",\n\t\t\"displayName\": \"Fragnova Network\",\n\t\t\"symbols\": [\n\t\t\t\"NOVA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://fragnova.com\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"OTP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.origintrail.io/\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 117,\n\t\t\"network\": \"tinker\",\n\t\t\"displayName\": \"Tinker\",\n\t\t\"symbols\": [\n\t\t\t\"TNKR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://invarch.network\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1221,\n\t\t\"network\": \"peaq\",\n\t\t\"displayName\": \"Peaq Network\",\n\t\t\"symbols\": [\n\t\t\t\"PEAQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1222,\n\t\t\"network\": \"apex\",\n\t\t\"displayName\": \"Apex Network\",\n\t\t\"symbols\": [\n\t\t\t\"APEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1328,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"bajun\",\n\t\t\"displayName\": \"Bajun Network\",\n\t\t\"symbols\": [\n\t\t\t\"BAJU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"subspace\",\n\t\t\"displayName\": \"Subspace\",\n\t\t\"symbols\": [\n\t\t\t\"SSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 7007,\n\t\t\"network\": \"tidefi\",\n\t\t\"displayName\": \"Tidefi\",\n\t\t\"symbols\": [\n\t\t\t\"TIFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://tidefi.com\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 9807,\n\t\t\"network\": \"dentnet\",\n\t\t\"displayName\": \"DENTNet\",\n\t\t\"symbols\": [\n\t\t\t\"DENTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.dentnet.io\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t},\n\t{\n\t\t\"prefix\": 15253,\n\t\t\"network\": \"ice-network\",\n\t\t\"displayName\": \"ICE Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICX\",\n\t\t\t\"ICY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18,\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 12191,\n\t\t\"network\": \"nftmart\",\n\t\t\"displayName\": \"NFTMart\",\n\t\t\"symbols\": [\n\t\t\t\"NMT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nftmart.io\"\n\t}\n];\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["_0n","BigInt","_1n","_2n","_3n","_8n","POW_2_256","CURVE","a","b","P","n","h","Gx","Gy","beta","weistrass","x","x2","mod","x3","USE_ENDOMORPHISM","JacobianPoint","constructor","y","z","this","static","p","Point","TypeError","points","toInv","nums","scratch","Array","length","inverted","invert","reduce","acc","num","i","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","equals","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","A","B","C","D","E","F","X3","Y3","Z3","add","H","r","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","normalizeScalar","BASE","P0","d","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","base","window","push","wNAF","affinePoint","_WINDOW_SIZE","Error","precomputes","pointPrecomputes","get","normalizeZ","set","f","windowSize","mask","maxNumber","shiftBy","offset","wbits","Number","pr","cached","Math","abs","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","bytes","isShort","bytesToNumber","subarray","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","hex","ensureBytes","len","header","fromCompressedHex","fromUncompressedHex","privateKey","key","isSafeInteger","hexToNumber","isUint8a","isWithinCurveOrder","normalizePrivateKey","msgHash","signature","recovery","hash","delta","truncateHash","s","Signature","fromDER","error","fromCompact","normalizeSignature","prefix","R","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","hexToBytes","toHex","toHexX","slice","toRawX","msg","left","aP","bQ","sum","undefined","sliceDER","parseInt","parseDERInt","data","bytesToHex","res","arr","name","str","sBytes","rBytesLeft","parseDERSignature","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","Uint8Array","hexes","from","v","toString","padStart","uint8a","array","j","hexByte","byte","isNaN","result","power","number","modulo","u","q","m","divNearest","POW_2_128","k","a1","b1","a2","c1","c2","self","crypto","knownGenesis","acala","astar","basilisk","bifrost","centrifuge","composable","edgeware","equilibrium","genshiro","hydradx","karura","kulupu","kusama","parallel","picasso","polkadex","polkadot","polymesh","rococo","sora","stafi","statemine","statemint","subsocial","westend","xxnetwork","knownIcon","westmint","knownLedger","knownTestnet","jupiter","subspace_testnet","AbstractArray","registry","super","encodedLength","total","toU8a","isEmpty","eq","inspect","inner","inspectInner","outer","toArray","toHuman","isExtended","toJSON","join","isBare","encoded","toU8aInner","concat","filter","callbackfn","thisArg","includes","check","some","value","start","end","AbstractBase","initialU8aLength","isLe","toRawType","unwrap","MUL_P","FORMATTERS","AbstractInt","bitLength","isSigned","isNegative","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","decodeAbstractInt","isUnsigned","isNeg","maxBits","isZero","isMax","toBigInt","toBn","isExpanded","rawType","decimals","chainDecimals","withSi","withUnit","chainTokens","divisor","find","type","mul","div","toNumber","toFixed","toPercentage","onlyHex","createClassUnsafe","noopSetDefinition","Compact","Type","definition","setDefinition","raw","decodedLength","bn","decodeCompact","getClassName","DoNotConstruct","typeName","getEntryType","def","checkIdx","values","Object","index","keys","createFromU8a","createFromValue","decodeFromJSON","toLowerCase","keyLower","indexOf","message","Enum","Types","isBasic","isIndexed","_def","isArray","defValues","every","isRustEnum","entries","extractDef","decoded","u8a","decodeEnum","asKeys","isKeys","_","isNone","isNull","defIndexes","defKeys","entry","_toRawStruct","out","_enum","Int","Null","None","Option","decodeOption","isSome","wrapped","unwrapOr","defaultValue","unwrapOrDefault","Result","Ok","Err","asErr","isErr","asError","asOk","isOk","isError","Tuple","Classes","t","decodeTuple","T","UInt","l","decodeVec","startAt","count","Vec","decodeFrom","decodeVecLength","_other","VecFixed","BTreeMap","keyType","valType","BTreeSet","Set","rawValue","ValClass","output","decodeSetFromU8a","forEach","val","decodeSetFromSet","decodeSet","size","strings","json","BitVec","isMsb","ceil","decodeBitVecU8a","decodeBitVec","split","reverse","bitVec","Bytes","decodeBytesU8a","clength","HashMap","decodeMapFromMap","KeyClass","Map","isComplex","prototype","JSON","parse","CodecMap","types","decodeMapFromU8a","decodeMap","OptionBool","decodeU8a","isFalse","valueOf","isTrue","Range","rangeName","RangeInclusive","setOverride","U8aFixed","byteLength","decodeU8aFixed","WrapperKeepOpaque","opaqueName","instance","decodeRaw","isDecoded","WrapperOpaque","bool","Boolean","Json","decodeJson","getT","Raw","isAscii","isUtf8","begin","text","toUtf8","encodeSet","setValues","ior","decodeSetNumber","_value","and","computed","decodeSetArray","CodecSet","valueEncoded","sort","_set","Struct","jsonMap","typeMap","jsonObj","typeofArray","typeofMap","jsonKey","assign","e","decodeStructFromObject","getAtIndex","Text","String","decodeText","override","i128","__IntType","i16","i256","i32","i64","i8","u128","__UIntType","u16","u256","u32","u64","u8","usize","compareArray","compareMapArray","notEntry","hasMismatch","compareMap","compareSetArray","has","compareSet","formatFailure","decodeU8aStruct","decodeU8aVec","mapToTypeMap","input","BOUNDED","ALLOWED_BOXES","BOX_PRECEDING","mappings","alias","findClosing","substring","removeExtensions","from1","from2","from3","from4","from5","from6","lastIndex","replace","removeTraits","replacer","replaceTagWith","removePairOf","removeWrap","box","flattenSingleTuple","trim","depth","src","dest","withChecks","RegExp","to","matcher","isSized","tag","parts","pop","sanitizeMap","sanitize","startValue","memoized","isArrayLike","arg","isCodec","isEnum","isNumberLike","sortAsc","cmp","sortRes","minLen","min","sortArray","sortSet","sortMap","keyA","keyB","typeToConstructor","typesToMap","hasEq","o","getTypeDefType","lookupName","getSubDefArray","sub","getSubType","getSubDef","getTypeClassMap","subs","getTypeClassArray","createInt","Clazz","displayName","with","createHashMap","valueType","createWithSub","infoMapping","previous","next","getOrUnknown","getTypeClass","lookup","getTypeDef","constructTypeClass","typeDef","info","__fallbackType","fallbackType","getUnsafe","isLookupType","checkInstance","created","initType","params","blockHash","isOptional","isPedantic","checkPedantic","createdAtHash","createTypeUnsafe","options","firstError","TypeDefInfo","stringIdentity","INFO_WRAP","encodeWithParams","transform","paramsNotation","encodeTypeDef","encodeSubTypes","asEnum","extra","names","encoders","lookupIndex","createLookupType","all","_bitLength","_alias","encodeType","withLookup","withTypeString","KNOWN_INTERNALS","getTypeString","typeOrObj","stringify","_decodeTuple","subType","_decodeAnyInt","clazz","strLength","hasWrapper","nestedExtraction","max","vecType","parsed","details","_decodeEnum","_fallback","startsWith","_decodeSet","NAME_LENGTH","wrappedExtraction","extractSubType","_type","nested","typeSplit","c","XCM_MAPPINGS","mapXcmTypes","version","lazyVariants","getName","creator","variants","getSiType","asVariant","DEFAULT_FIRST_CALL_IDX","sortDecimalStrings","valueToString","getFieldArgs","fields","args","clearRecord","record","getVariantStringIdx","TypeRegistry","Metadata","PortableRegistry","allKnown","register","createType","_this$chainProperties","tokenDecimals","allDecimals","chainSS58","_this$chainProperties2","ss58Format","_this$chainProperties3","tokenSymbol","allTokens","unit","firstCallIndex","test","lookupId","knownTypes","metadata","unknownTypes","signedExtensions","clearCache","createClass","findMetaCall","callIndex","section","method","findMetaError","errorIndex","findMetaEvent","eventIndex","withUnknown","knownTypeDef","BaseType","warn","getChainProperties","getDefinition","getModuleInstances","specName","moduleName","_this$knownTypes","_this$knownTypes$type","_this$knownTypes$type2","_this$knownTypes$type3","_this$knownTypes$type4","typesBundle","spec","instances","getOrThrow","getSignedExtensionExtra","getSignedExtensionTypes","hasClass","hasDef","hasType","arg1","arg2","_registerObject","obj","setChainProperties","properties","setHasher","hasher","setKnownTypes","setLookup","setMetadata","userExtensions","asLatest","pallets","filtered","calls","sectionIndex","variant","injectExtrinsics","errors","sectionName","docs","injectErrors","events","meta","injectEvents","defSection","defMethod","setSignedExtensions","extrinsic","gt","identifier","original","constants","system","sS58Prefix","ss58Prefix","extractProperties","unknown","decodeAccountId","GenericEthereumAccountId","ACCOUNT_ID_PREFIX","GenericEthereumLookupSource","decodeString","decodeAddressOrIndex","rawLength","_rawLength","VERSIONS","newFromValue","GenericExtrinsic","ExtrinsicBase","signKeys","getter","argsDef","era","nonce","signer","tip","is","decodeExtrinsic","addSignature","payload","sign","account","signFake","decodeExtrinsicEra","GenericExtrinsicEra","mortal","immortal","MortalEra","ImmortalEra","period","phase","decodeMortalU8a","current","calPeriod","pow","log2","quantizeFactor","quantizedPhase","decodeMortalObject","decodeMortalEra","binary","getTrailingZeros","birth","death","isImmortalEra","asImmortalEra","asMortalEra","isMortalEra","GenericExtrinsicPayload","decodeExtrinsicPayload","genesisHash","specVersion","transactionVersion","signerPair","GenericExtrinsicPayloadUnknown","GenericExtrinsicUnknown","address","blockNumber","runtimeVersion","GenericSignerPayload","extensionTypes","toPayload","toRaw","BIT_SIGNED","BIT_UNSIGNED","EMPTY_U8A","DEFAULT_VERSION","IMMORTAL_ERA","UNMASK_VERSION","emptyCheck","allExtensions","fallbackExtensions","findUnknownExtensions","extensions","expandExtensionTypes","LimitParathreadCommits","OnlyStakingAndClaims","PrevalidateAttests","RestrictFunctionality","TransactionCallFilter","ValidateDoubleVoteReports","shell","DisallowSigned","ChargeAssetTxPayment","assetId","CheckMortality","substrate","ChargeTransactionPayment","CheckBlockGasLimit","CheckEra","CheckGenesis","CheckNonZeroSender","CheckNonce","CheckSpecVersion","CheckTxVersion","CheckVersion","CheckWeight","LockStakingStatus","ValidateEquivocationReport","GenericExtrinsicV4","GenericExtrinsicPayloadV4","withType","FAKE_SIGNATURE","fill","toAddress","GenericExtrinsicSignatureV4","signTypes","decodeExtrinsicSignature","multiSignature","_injectSignature","createPayload","addressRaw","GenericAccountId","MAX_1BYTE","MAX_2BYTE","shln","MAX_4BYTE","decodeAccountIndex","GenericAccountIndex","lte","lt","first","calcLength","GenericBlock","extrinsics","contentHash","getArgsDef","GenericCallIndex","GenericCall","_meta","decodeCallViaU8a","decodeCallViaObject","decodeCall","argsEntries","_call","_call2","call","createValue","asArray","GenericChainProperties","decodeValue","decode","CID_AURA","CID_BABE","CID_GRPA","CID_POW","GenericConsensusEngineId","isAura","isBabe","isGrandpa","isPow","extractAuthor","sessionValidators","slotNumber","getAuraAuthor","getBabeAuthor","getBytesAsAuthor","GenericEventData","sanitizeField","GenericEvent","DataType","decodeEvent","GenericLookupSource","Id","Address20","Index","GenericMultiAddress","Address32","decodeMultiAny","decodeVoteBool","AYE_BITS","GenericVote","decodeVoteU8a","aye","conviction","decodeVoteType","decodeVote","isAye","isNay","vote","typesAlias","assets","Approval","ApprovalKey","Balance","DestroyWitness","babe","EquivocationProof","balances","Status","beefy","AuthorityId","contracts","StorageKey","electionProviderMultiPhase","Phase","ethereum","Block","Header","Receipt","Transaction","TransactionStatus","evm","Account","Log","Vicinity","grandpa","Equivocation","identity","Judgement","inclusion","ValidatorIndex","paraDisputes","paraInclusion","paraScheduler","paraShared","parachains","parasDisputes","parasInclusion","parasScheduler","parasShared","proposeParachain","Proposal","proxy","Announcement","scheduler","shared","society","Vote","staking","treasury","xcm","AssetId","xcmPallet","getAliasTypes","_knownTypes$typesAlia","rpc","AssetApprovalKey","owner","delegate","AssetApproval","amount","deposit","AssetBalance","balance","isFrozen","isSufficient","AssetDestroyWitness","accounts","sufficients","approvals","AssetDetails","issuer","admin","freezer","supply","minBalance","AssetMetadata","symbol","TAssetBalance","TAssetDepositBalance","BlockAttestations","receipt","valid","invalid","IncludedBlocks","actualNumber","session","randomSeed","activeParachains","paraBlocks","MoreAttestations","RawAuraPreDigest","hasKey","description","hasSessionKeys","removeExtrinsic","insertKey","rotateKeys","pendingExtrinsics","submitExtrinsic","submitAndWatchExtrinsic","pubsub","ExtrinsicOrHash","Hash","Extrinsic","ExtrinsicStatus","Future","Ready","Broadcast","InBlock","Retracted","FinalityTimeout","Finalized","Usurped","Dropped","Invalid","UncleEntryItem","InclusionHeight","Uncle","epochAuthorship","AllowedSlots","BabeAuthorityWeight","BabeEpochConfiguration","allowedSlots","BabeBlockWeight","BabeEquivocationProof","offender","firstHeader","secondHeader","BabeWeight","MaybeRandomness","MaybeVrf","EpochAuthorship","primary","secondary","secondary_vrf","NextConfigDescriptor","V0","V1","NextConfigDescriptorV1","Randomness","RawBabePreDigest","Phantom","Primary","SecondaryPlain","SecondaryVRF","RawBabePreDigestPrimary","authorityIndex","vrfOutput","vrfProof","RawBabePreDigestSecondaryPlain","RawBabePreDigestSecondaryVRF","RawBabePreDigestTo159","Secondary","RawBabePreDigestPrimaryTo159","weight","RawBabePreDigestSecondaryTo159","RawBabePreDigestCompat","Zero","One","Two","Three","SlotNumber","VrfData","VrfOutput","VrfProof","AccountData","free","reserved","miscFrozen","feeFrozen","BalanceLockTo212","id","until","reasons","BalanceLock","BalanceStatus","Reasons","ReserveData","ReserveIdentifier","VestingSchedule","perBlock","startingBlock","WithdrawReasons","TransactionPayment","Transfer","Reserve","Fee","Tip","subscribeJustifications","getFinalizedHead","BeefyCommitment","validatorSetId","BeefyId","BeefySignedCommitment","commitment","signatures","BeefyNextAuthoritySet","root","BeefyPayload","MmrRootHash","ValidatorSetId","BridgedBlockHash","BridgedBlockNumber","BridgedHeader","BridgeMessageId","CallOrigin","SourceRoot","TargetAccount","SourceAccount","ChainId","DeliveredMessages","dispatchResults","DispatchFeePayment","InboundLaneData","relayers","lastConfirmedNonce","InboundRelayer","InitializationData","authorityList","setId","isHalted","LaneId","MessageData","fee","MessagesDeliveryProofOf","bridgedHeaderHash","storageProof","lane","MessageKey","laneId","MessageNonce","MessagesProofOf","noncesStart","noncesEnd","OperatingMode","OutboundLaneData","oldestUnprunedNonce","latestReceivedNonce","latestGeneratedNonce","OutboundMessageFee","OutboundPayload","origin","dispatchFeePayment","Parameter","RelayerId","UnrewardedRelayer","relayer","messages","UnrewardedRelayersState","unrewardedRelayer_Entries","messagesInOldestEntry","totalMessages","getHeader","isHistoric","getBlock","getBlockHash","subscribeNewHeads","subscribeFinalizedHeads","subscribeAllHeads","BlockHash","getKeys","getKeysPaged","getStorage","getStorageEntries","getStorageHash","getStorageSize","PrefixedStorageKey","StatementKind","CollectiveOrigin","Members","Member","MemberCount","ProposalIndex","VotesTo230","threshold","ayes","nays","Votes","RawVRFOutput","AliveContractInfo","trieId","storageSize","pairCount","codeHash","rentAllowance","rentPaid","deductBlock","lastWrite","_reserved","CodeHash","CodeSource","Upload","Existing","CodeUploadRequest","code","storageDepositLimit","CodeUploadResult","CodeUploadResultValue","ContractCallRequest","gasLimit","inputData","ContractExecResultSuccessTo255","status","ContractExecResultTo255","Success","ContractExecResultSuccessTo260","flags","gasConsumed","ContractExecResultTo260","ContractExecResultOk","ContractExecResultResult","ContractExecResultTo267","debugMessage","ContractExecResult","gasRequired","storageDeposit","ContractInfo","Alive","Tombstone","ContractCallFlags","ForwardInput","CloneInput","TailCall","AllowReentry","ContractReturnFlags","Revert","ContractStorageKey","DeletedContract","ExecReturnValue","Gas","HostFnWeightsTo264","caller","gasLeft","valueTransferred","minimumBalance","tombstoneDeposit","now","weightToFee","gas","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","transfer","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiate","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","HostFnWeights","terminatePerCodeByte","restoreToPerCallerCodeByte","restoreToPerTombstoneCodeByte","callPerCodeByte","instantiatePerCodeByte","instantiatePerSaltByte","rentParams","InstantiateRequestV1","salt","InstantiateRequestV2","InstantiateRequest","ContractInstantiateResultTo267","ContractInstantiateResultTo299","ContractInstantiateResult","InstantiateReturnValueTo267","accountId","rentProjection","InstantiateReturnValueOk","InstantiateReturnValue","InstructionWeights","i64const","i64load","i64store","select","rIf","br","brIf","brIable","brIablePerEntry","callIndirect","callIndirectPerParam","localGet","localSet","local_tee","globalGet","globalSet","memoryCurrent","memoryGrow","i64clz","i64ctz","i64popcnt","i64eqz","i64extendsi32","i64extendui32","i32wrapi64","i64eq","i64ne","i64lts","i64ltu","i64gts","i64gtu","i64les","i64leu","i64ges","i64geu","i64add","i64sub","i64mul","i64divs","i64divu","i64rems","i64remu","i64and","i64or","i64xor","i64shl","i64shrs","i64shru","i64rotl","i64rotr","LimitsTo264","eventTopics","stackHeight","globals","parameters","memoryPages","tableSize","brTableSize","subjectLen","codeSize","Limits","PrefabWasmModule","scheduleVersion","initial","maximum","refcount","originalCodeLen","RentProjection","EvictionAt","NoEviction","ScheduleTo212","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","ScheduleTo264","limits","instructionWeights","hostFnWeights","Schedule","SeedOf","StorageDeposit","Refund","Charge","TombstoneContractInfo","TrieId","isHstoric","uploadCode","endpoint","ContractMetadataV0","ContractProjectInfo","source","contract","ContractCryptoHasher","ContractDiscriminant","ContractLayoutArray","cellsPerElem","layout","ContractLayoutCell","ty","ContractLayoutEnum","dispatchKey","ContractLayoutHash","strategy","ContractLayoutHashingStrategy","postfix","ContractLayoutKey","ContractLayoutStruct","ContractLayoutStructField","ContractStorageLayout","Cell","ContractConstructorSpecV0","selector","ContractConstructorSpecV1","ContractConstructorSpecV2","label","ContractConstructorSpecV3","payable","ContractContractSpecV0","constructors","ContractContractSpecV1","ContractContractSpecV2","ContractContractSpecV3","ContractDisplayName","ContractEventParamSpecV0","indexed","ContractEventParamSpecV2","ContractEventSpecV0","ContractEventSpecV1","ContractEventSpecV2","ContractMessageParamSpecV0","ContractMessageParamSpecV2","ContractMessageSpecV0","mutates","returnType","ContractMessageSpecV1","ContractMessageSpecV2","ContractSelector","ContractTypeSpec","ContractConstructorSpecLatest","ContractEventSpecLatest","ContractEventParamSpecLatest","ContractMessageParamSpecLatest","ContractMessageSpecLatest","ContractMetadataLatest","ContractMetadataV1","ContractMetadataV2","ContractMetadataV3","ContractMetadata","V2","V3","ContractProjectV0","metadataVersion","ContractProject","ContractProjectContract","authors","repository","homepage","license","ContractProjectSource","wasmHash","language","compiler","wasm","FundIndex","LastContribution","Never","PreEnding","Ending","FundInfo","depositor","verifier","raised","cap","lastContribution","firstPeriod","lastPeriod","trieIndex","TrieIndex","ConfigData","maxIndividual","MessageId","OverweightIndex","PageCounter","PageIndexData","beginUsed","endUsed","overweightCount","AccountVote","Standard","Split","AccountVoteSplit","nay","AccountVoteStandard","Conviction","Delegations","votes","capital","PreimageStatus","Missing","Available","PreimageStatusAvailable","provider","since","expiry","PriorLock","PropIndex","ProxyState","Open","Active","ReferendumIndex","ReferendumInfoTo239","proposalHash","delay","ReferendumInfo","Ongoing","Finished","ReferendumInfoFinished","approved","ReferendumStatus","tally","Tally","turnout","Voting","Direct","Delegating","VotingDirect","delegations","prior","VotingDirectVote","VotingDelegating","target","getBlockStats","BlockStats","witnessLen","witnessCompactLen","blockLen","blockNumExtrinsics","ApprovalFlag","DefunctVoter","who","voteCount","candidateCount","Renouncing","RunnerUp","Candidate","SetIndex","VoteIndex","VoterInfo","lastActive","lastWin","pot","stake","VoteThreshold","createBlock","finalizeBlock","CreatedBlock","aux","ImportedAux","headerOnly","clearJustificationRequests","needsJustification","badJustification","needsFinalityProof","isNewBest","BlockV0","transactions","ommers","LegacyTransaction","gasPrice","action","TransactionV0","BlockV1","EIP2930Transaction","chainId","accessList","oddYParity","TransactionV1","Legacy","EIP2930","BlockV2","EIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","TransactionV2","EIP1559","EthereumAccountId","EthereumAddress","EthereumLookupSource","EthereumSignature","EthAccessListItem","slots","EthAccessList","EthAccount","storageHash","accountProof","EthAddress","EthBlock","EthHeader","parentHash","ommersHash","beneficiary","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","gasUsed","timestamp","extraData","mixMash","EthRichBlock","blockSize","sha3Uncles","author","miner","totalDifficulty","sealFields","uncles","EthBloom","EthCallRequest","EthFilter","fromBlock","toBlock","topics","EthFilterAddress","Single","Multiple","EthFilterChanges","Logs","Hashes","Empty","EthFilterTopic","EthFilterTopicEntry","EthFilterTopicInner","EthRichHeader","EthLog","transactionHash","transactionIndex","logIndex","transactionLogIndex","removed","EthReceipt","cumulativeGasUsed","contractAddress","logs","statusCode","EthStorageProof","proof","EthSubKind","EthSubParams","EthSubResult","TransactionHash","SyncState","EthSyncInfo","currentBlock","highestBlock","warpChunksAmount","warpChunksProcessed","EthSyncStatus","Info","EthTransaction","EthTransactionSignature","EthTransactionAction","Call","Create","EthTransactionCondition","block","time","EthTransactionRequest","EthTransactionStatus","EthWork","powHash","seedHash","listening","aliasSection","peerCount","clientVersion","sha3","coinbase","estimateGas","getBalance","getBlockByHash","getBlockByNumber","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getCode","getFilterChanges","getFilterLogs","getLogs","getProof","getStorageAt","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionByHash","getTransactionCount","getTransactionReceipt","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getUncleCountByBlockHash","getUncleCountByBlockNumber","getWork","hashrate","mining","newBlockFilter","newFilter","newPendingTransactionFilter","protocolVersion","sendRawTransaction","sendTransaction","submitHashrate","submitWork","subscribe","syncing","uninstallFilter","EvmAccount","EvmLog","EvmVicinity","ExitError","StackUnderflow","StackOverflow","InvalidJump","InvalidRange","DesignatedInvalid","CallTooDeep","CreateCollision","CreateContractLimit","OutOfOffset","OutOfGas","OutOfFund","PCUnderflow","CreateEmpty","Other","ExitFatal","NotSupported","UnhandledInterrupt","CallErrorAsFatal","ExitReason","Succeed","Fatal","ExitRevert","ExitSucceed","ExtrinsicEra","ExtrinsicPayload","ExtrinsicSignature","ExtrinsicV4","ExtrinsicPayloadV4","ExtrinsicSignatureV4","ExtrinsicUnknown","ExtrinsicPayloadUnknown","Era","AnySignature","MultiSignature","Ed25519","Sr25519","Ecdsa","SignerPayload","EcdsaSignature","Ed25519Signature","Sr25519Signature","AssetOptions","initalIssuance","permissions","Owner","Address","PermissionsV1","update","mint","burn","PermissionVersions","PermissionLatest","ActiveGilt","proportion","ActiveGiltsTotal","frozen","ActiveIndex","GiltBid","proveFinality","roundState","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","Prevote","Precommit","GrandpaEquivocationProof","equivocation","GrandpaEquivocationValue","roundNumber","second","GrandpaPrevote","targetHash","targetNumber","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","GrandpaJustification","round","commit","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","nextAuthorities","canonHeight","canonHash","delayKind","PendingPause","scheduledAt","PendingResume","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","Live","Paused","IdentityFields","Display","Legal","Web","Riot","Email","PgpFingerprint","Image","Twitter","IdentityInfoAdditional","IdentityInfoTo198","additional","display","legal","web","riot","email","pgpFingerprint","image","IdentityInfo","twitter","IdentityJudgement","Unknown","FeePaid","Reasonable","KnownGood","OutOfDate","LowQuality","Erroneous","RegistrationJudgement","RegistrationTo198","judgements","Registration","RegistrarIndex","RegistrarInfo","AuthIndex","AuthoritySignature","Heartbeat","networkState","sessionIndex","validatorsLen","HeartbeatTo244","OpaqueMultiaddr","OpaquePeerId","OpaqueNetworkState","peerId","externalAddresses","CallIndex","LotteryConfig","price","repeat","v9","ErrorMetadataLatest","EventMetadataLatest","ExtrinsicMetadataLatest","FunctionArgumentMetadataLatest","FunctionMetadataLatest","MetadataLatest","PalletCallMetadataLatest","PalletConstantMetadataLatest","PalletErrorMetadataLatest","PalletEventMetadataLatest","PalletMetadataLatest","PalletStorageMetadataLatest","PortableType","SignedExtensionMetadataLatest","StorageEntryMetadataLatest","StorageEntryModifierLatest","StorageEntryTypeLatest","StorageHasher","MetadataAll","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","AllHashers","Blake2_128","Blake2_256","Blake2_128Concat","Twox128","Twox256","Twox64Concat","Identity","v10","ErrorMetadataV10","EventMetadataV10","FunctionArgumentMetadataV10","FunctionMetadataV10","MetadataV10","modules","ModuleConstantMetadataV10","ModuleMetadataV10","storage","StorageEntryModifierV10","StorageEntryMetadataV10","modifier","fallback","StorageEntryTypeV10","Plain","linked","DoubleMap","key1","key2","key2Hasher","StorageMetadataV10","items","StorageHasherV10","v11","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","FunctionArgumentMetadataV11","FunctionMetadataV11","MetadataV11","ModuleConstantMetadataV11","ModuleMetadataV11","StorageEntryModifierV11","StorageEntryMetadataV11","StorageEntryTypeV11","StorageMetadataV11","StorageHasherV11","v12","ErrorMetadataV12","EventMetadataV12","ExtrinsicMetadataV12","FunctionArgumentMetadataV12","FunctionMetadataV12","MetadataV12","ModuleConstantMetadataV12","ModuleMetadataV12","StorageEntryModifierV12","StorageEntryMetadataV12","StorageEntryTypeV12","StorageMetadataV12","StorageHasherV12","v13","ErrorMetadataV13","EventMetadataV13","ExtrinsicMetadataV13","FunctionArgumentMetadataV13","FunctionMetadataV13","MetadataV13","ModuleConstantMetadataV13","ModuleMetadataV13","StorageEntryModifierV13","StorageEntryMetadataV13","StorageEntryTypeV13","NMap","keyVec","hashers","StorageMetadataV13","StorageHasherV13","v14","PortableTypeV14","ErrorMetadataV14","EventMetadataV14","FunctionArgumentMetadataV14","FunctionMetadataV14","ExtrinsicMetadataV14","MetadataV14","PalletCallMetadataV14","PalletConstantMetadataV14","PalletErrorMetadataV14","PalletEventMetadataV14","PalletMetadataV14","PalletStorageMetadataV14","SignedExtensionMetadataV14","additionalSigned","StorageEntryMetadataV14","StorageEntryModifierV14","StorageEntryTypeV14","StorageHasherV14","ErrorMetadataV9","EventMetadataV9","FunctionArgumentMetadataV9","FunctionMetadataV9","MetadataV9","ModuleConstantMetadataV9","ModuleMetadataV9","StorageEntryMetadataV9","StorageEntryModifierV9","StorageEntryTypeV9","StorageHasherV9","StorageMetadataV9","generateBatchProof","generateProof","MmrLeafBatchProof","leaves","MmrLeafProof","leaf","localStorageSet","localStorageGet","StorageKind","PERSISTENT","LOCAL","DeferredOffenceOf","Kind","OffenceDetails","reporters","Offender","OpaqueTimeSlot","ReportIdOf","Reporter","ServiceQuality","DisputeLocation","DisputeResult","DisputeState","validatorsFor","validatorsAgainst","concludedAt","DisputeStatement","Valid","DisputeStatementSet","candidateHash","statements","ExplicitDisputeStatement","InvalidDisputeStatementKind","MultiDisputeStatementSet","ValidDisputeStatementKind","Explicit","BackingSeconded","BackingValid","ApprovalChecking","ParachainProposal","proposer","genesisHead","validators","RegisteredParachainInfo","AbridgedCandidateReceipt","parachainIndex","relayParent","headData","collator","povBlockHash","commitments","AbridgedHostConfiguration","maxCodeSize","maxHeadDataSize","maxUpwardQueueCount","maxUpwardQueueSize","maxUpwardMessageSize","maxUpwardMessageNumPerCandidate","hrmpMaxMessageNumPerCandidate","validationUpgradeFrequency","validationUpgradeDelay","AbridgedHrmpChannel","maxCapacity","maxTotalSize","maxMessageSize","msgCount","totalSize","mqcHead","AssignmentId","AssignmentKind","Parachain","Parathread","AttestedCandidate","candidate","validityVotes","validatorIndices","AuthorityDiscoveryId","AvailabilityBitfield","AvailabilityBitfieldRecord","bitfield","submittedTt","BackedCandidate","BufferedSessionChange","applyAt","queued","CandidateCommitments","upwardMessages","horizontalMessages","newValidationCode","processedDownwardMessages","hrmpWatermark","CandidateDescriptor","paraId","collatorId","persistedValidationDataHash","povHash","erasureRoot","paraHead","validationCodeHash","CandidateHash","CandidateInfo","CandidatePendingAvailability","core","descriptor","availabilityVotes","backers","relayParentNumber","backedInNumber","backingGroup","CandidateReceipt","commitmentsHash","GlobalValidationData","CollatorId","CollatorSignature","CommittedCandidateReceipt","CoreAssignment","kind","groupIdx","CoreIndex","CoreOccupied","DoubleVoteReport","signingContext","DownwardMessage","GroupIndex","GlobalValidationSchedule","HeadData","HostConfiguration","maxPovSize","maxDownwardMessageSize","preferredDispatchableUpwardMessagesStepWeight","hrmpMaxParachainOutboundChannels","hrmpMaxParathreadOutboundChannels","hrmpOpenRequestTtl","hrmpSenderDeposit","hrmpRecipientDeposit","hrmpChannelMaxCapacity","hrmpChannelMaxTotalSize","hrmpMaxParachainInboundChannels","hrmpMaxParathreadInboundChannels","hrmpChannelMaxMessageSize","codeRetentionPeriod","parathreadCores","parathreadRetries","groupRotationFrequency","chainAvailabilityPeriod","threadAvailabilityPeriod","schedulingLookahead","maxValidatorsPerCore","maxValidators","disputePeriod","disputePostConclusionAcceptancePeriod","disputeMaxSpamSlots","disputeConclusionByTimeOutPeriod","noShowSlots","nDelayTranches","zerothDelayTrancheWidth","neededApprovals","relayVrfModuloSamples","InboundDownwardMessage","pubSentAt","pubMsg","InboundHrmpMessage","sentAt","InboundHrmpMessages","LocalValidationData","parentHead","codeUpgradeAllowed","MessageIngestionType","downwardMessages","MessageQueueChain","OutboundHrmpMessage","recipient","ParachainDispatchOrigin","ParachainInherentData","validationData","relayChainState","ParachainsInherentData","bitfields","backedCandidates","disputes","parentHeader","ParaGenesisArgs","validationCode","parachain","ParaId","ParaInfo","manager","locked","ParaLifecycle","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","ParathreadClaim","ParathreadClaimQueue","queue","nextCoreOffset","ParathreadEntry","claim","retries","ParaValidatorIndex","PersistedValidationData","relayParentStorageRoot","QueuedParathread","coreOffset","RelayBlockNumber","RelayChainBlockNumber","RelayHash","RelayChainHash","Remark","ReplacementTimes","expectedAt","activatedAt","Retriable","WithRetries","Scheduling","SessionInfo","discoveryKeys","assignmentKeys","validatorGroups","nCores","SessionInfoValidatorGroup","SignedAvailabilityBitfield","validatorIndex","SignedAvailabilityBitfields","SigningContext","Statement","TransientValidationData","dmqLength","UpgradeGoAhead","UpgradeRestriction","UpwardMessage","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidationCodeHash","ValidationData","persisted","transient","ValidationDataType","ValidatorSignature","ValidityAttestation","Implicit","MessagingStateSnapshot","relayDispatchQueueSize","egressChannels","MessagingStateSnapshotEgressEntry","SystemInherentData","VecInboundHrmpMessage","HrmpChannel","senderDeposit","recipientDeposit","HrmpChannelId","sender","receiver","HrmpOpenChannelRequest","confirmed","age","SlotRange10","SlotRange","Bidder","New","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainDeploy","initialHeadData","IncomingParachainFixed","NewBidder","SubId","AuctionIndex","LeasePeriod","LeasePeriodOf","WinningData10","WinningData","WinningDataEntry","WinnersData10","WinnersData","WinnersDataTuple10","WinnersDataTuple","QUERY_PARAMS","queryInfo","queryFeeDetails","FeeDetails","inclusionFee","InclusionFee","baseFee","lenFee","adjustedWeightFee","RuntimeDispatchInfo","class","partialFee","Approvals","ProxyDefinition","proxyType","ProxyType","ProxyAnnouncement","real","callHash","height","AccountStatus","validity","freeBalance","lockedBalance","vat","AccountValidity","ActiveRecovery","friends","RecoveryConfig","delayPeriod","methods","RpcMethods","knownOrigins","Council","System","TechnicalCommittee","Xcm","XcmPallet","Authority","GeneralCouncil","Fixed64","FixedI64","FixedU64","Fixed128","FixedI128","FixedU128","I32F32","U32F32","PerU16","Perbill","Percent","Permill","Perquintill","AccountId","AccountId20","AccountId32","AccountIdOf","AccountIndex","BalanceOf","BlockNumber","BlockNumberFor","BlockNumberOf","CallHash","CallHashOf","ChangesTrieConfiguration","digestInterval","digestLevels","ChangesTrieSignal","NewConfiguration","ConsensusEngineId","CodecHash","CrateVersion","major","minor","patch","Digest","DigestItem","AuthoritiesChange","ChangesTrieRoot","SealV0","Consensus","Seal","PreRuntime","RuntimeEnvironmentUpdated","ExtrinsicsWeight","normal","operational","H32","H64","H128","H160","H256","H512","H1024","H2048","extrinsicsRoot","digest","HeaderPartial","IndicesLookupSource","Justification","EncodedJustification","Justifications","KeyValue","KeyTypeId","LockIdentifier","LookupSource","LookupTarget","ModuleId","MultiAddress","MultiSigner","Moment","OpaqueCall","Origin","OriginCaller","PalletId","PalletsOrigin","PalletVersion","Pays","PhantomData","Releases","RuntimeDbWeight","read","write","SignedBlock","SignedBlockWithJustification","justification","SignedBlockWithJustifications","justifications","Slot","StorageData","StorageProof","trieNodes","TransactionPriority","TransactionInfo","dataSize","chunkRoot","blockChunks","TransactionStorageProof","chunk","ValidatorId","ValidatorIdOf","Weight","WeightMultiplier","v0","v1","SiField","SiLookupTypeId","SiPath","SiType","SiTypeDef","SiTypeDefArray","SiTypeDefBitSequence","SiTypeDefCompact","SiTypeDefComposite","SiTypeDefPrimitive","SiTypeDefSequence","SiTypeDefTuple","SiTypeParameter","SiTypeDefVariant","SiVariant","Si0Field","Si0LookupTypeId","Si0Path","Si0Type","path","Si0TypeDef","Composite","Variant","Sequence","Primitive","BitSequence","Si0TypeDefArray","Si0TypeDefBitSequence","bitStoreType","bitOrderType","Si0TypeDefCompact","Si0TypeDefComposite","Si0TypeDefPhantom","Si0TypeDefVariant","Si0TypeDefPrimitive","Si0TypeDefSequence","Si0TypeDefTuple","Si0TypeParameter","Si0Variant","discriminant","Si1Variant","Si1Field","Si1LookupTypeId","Si1Path","Si1Type","Si1TypeDef","HistoricMetaCompat","Si1TypeDefArray","Si1TypeDefBitSequence","Si1TypeDefCompact","Si1TypeDefComposite","Si1TypeDefPrimitive","Si1TypeDefSequence","Si1TypeDefTuple","Si1TypeParameter","Si1TypeDefVariant","Period","Priority","SchedulePeriod","SchedulePriority","Scheduled","maybeId","priority","maybePeriodic","ScheduledTo254","TaskAddress","BeefyKey","Keys","SessionKeys1","SessionKeys2","SessionKeys3","SessionKeys4","SessionKeys5","SessionKeys6","SessionKeys6B","SessionKeys7","SessionKeys7B","SessionKeys8","SessionKeys8B","SessionKeys9","SessionKeys9B","SessionKeys10","SessionKeys10B","FullIdentification","IdentificationTuple","MembershipProof","validatorCount","SessionIndex","ValidatorCount","Bid","BidKind","Deposit","Vouch","SocietyJudgement","SocietyVote","StrikeCount","VouchingStatus","Points","EraPoints","individual","CompactAssignments","CompactAssignmentsWith16","votes1","votes2","votes3","votes4","votes5","votes6","votes7","votes8","votes9","votes10","votes11","votes12","votes13","votes14","votes15","votes16","CompactAssignmentsWith24","votes17","votes18","votes19","votes20","votes21","votes22","votes23","votes24","CompactAssignmentsTo265","CompactAssignmentsTo257","CompactScore","CompactScoreCompact","ElectionCompute","ElectionPhase","Off","Signed","Unsigned","Emergency","ElectionResult","compute","slotStake","electedStashes","exposures","ElectionScore","ElectionSize","nominators","ElectionStatus","Close","ExtendedBalance","RawSolution","RawSolutionWith16","compact","score","RawSolutionWith24","RawSolutionTo265","ReadySolution","supports","RoundSnapshot","voters","targets","SeatHolder","SignedSubmission","solution","reward","SignedSubmissionTo276","SignedSubmissionOf","SolutionOrSnapshotSize","SolutionSupport","SolutionSupports","Supports","SubmissionIndicesOf","Voter","VoteWeight","ActiveEraInfo","EraIndex","EraRewardPoints","EraRewards","rewards","Exposure","own","others","Forcing","IndividualExposure","KeyType","MomentOf","Nominations","submittedIn","suppressed","NominatorIndex","NominatorIndexCompact","OffchainAccuracy","OffchainAccuracyCompact","PhragmenScore","RewardDestination","Staked","Stash","Controller","RewardPoint","SlashJournalEntry","ownSlash","SlashingSpansTo204","spanIndex","lastStart","SlashingSpans","lastNonzeroSlash","SpanIndex","SpanRecord","slashed","paidOut","StakingLedgerTo223","stash","active","unlocking","StakingLedgerTo240","lastReward","StakingLedger","claimedRewards","UnappliedSlashOther","UnappliedSlash","validator","payout","UnlockChunk","ValidatorIndexCompact","ValidatorPrefs","ValidatorPrefsWithCommission","commission","ValidatorPrefsWithBlocked","blocked","ValidatorPrefsTo196","validatorPayment","ValidatorPrefsTo145","unstakeThreshold","getPairs","getChildKeys","getChildStorage","getChildStorageHash","getChildStorageSize","getMetadata","getRuntimeVersion","queryStorage","queryStorageAt","getChildReadProof","getReadProof","subscribeRuntimeVersion","subscribeStorage","traceBlock","trieMigrationStatus","ApiId","BlockTrace","tracingTargets","storageKeys","spans","BlockTraceEvent","parentId","BlockTraceEventData","stringValues","BlockTraceSpan","KeyValueOption","MigrationStatusResult","topRemainingToMigrate","childRemainingToMigrate","ReadProof","at","RuntimeVersionApi","RuntimeVersion","implName","authoringVersion","implVersion","apis","RuntimeVersionPartial","SpecVersion","StorageChangeSet","changes","TraceBlockResponse","TraceError","WeightToFeeCoefficient","coeffInteger","coeffFrac","negative","degree","genSyncSpec","AccountInfo","AccountInfoWithRefCountU8","AccountInfoWithRefCount","AccountInfoWithDualRefCount","consumers","providers","AccountInfoWithProviders","AccountInfoWithTripleRefCount","ApplyExtrinsicResult","ArithmeticError","BlockLength","BlockWeights","baseBlock","maxBlock","perClass","ChainProperties","ChainType","Development","Local","Custom","ConsumedWeight","DigestOf","DispatchClass","DispatchError","CannotLookup","BadOrigin","Module","ConsumerRemaining","NoProviders","TooManyConsumers","Token","Arithmetic","Transactional","DispatchErrorModuleU8","DispatchErrorModuleU8a","DispatchErrorModule","DispatchErrorTo198","module","DispatchInfo","paysFee","DispatchInfoTo190","DispatchInfoTo244","DispatchOutcome","DispatchResult","DispatchResultOf","DispatchResultTo198","Event","EventId","EventIndex","EventRecord","event","Health","peers","isSyncing","shouldHavePeers","InvalidTransaction","Payment","Stale","BadProof","AncientBirthBlock","ExhaustsResources","BadMandatory","MandatoryDispatch","Key","LastRuntimeUpgradeInfo","NetworkState","listenedAddresses","connectedPeers","notConnectedPeers","averageDownloadPerSec","averageUploadPerSec","peerset","NetworkStatePeerset","messageQueue","nodes","NetworkStatePeersetInfo","connected","reputation","NodeRole","Full","LightClient","UnknownRole","NotConnectedPeer","knownAddresses","latestPingTime","versionString","Peer","enabled","open","PeerEndpoint","PeerEndpointAddr","localAddr","sendBackAddr","PeerPing","nanos","secs","PeerInfo","roles","bestHash","bestNumber","PerDispatchClassU32","mandatory","PerDispatchClassWeight","PerDispatchClassWeightsPerClass","ApplyExtrinsic","Finalization","Initialization","RawOrigin","Root","RefCount","RefCountTo259","SystemOrigin","TokenError","TransactionValidityError","TransactionalError","UnknownTransaction","NoUnsignedValidator","WeightPerClass","baseExtrinsic","maxExtrinsic","maxTotal","accountNextIndex","addLogFilter","addReservedPeer","chain","chainType","dryRun","health","noErrorLog","localListenAddresses","localPeerId","nodeRoles","removeReservedPeer","reservedPeers","resetLogFilter","syncState","Bounty","curatorDeposit","bond","BountyIndex","BountyStatus","Proposed","Approved","Funded","CuratorProposed","PendingPayout","BountyStatusActive","curator","updateDue","BountyStatusCuratorProposed","BountyStatusPendingPayout","unlockAt","OpenTip","reason","finder","closes","tips","findersFee","OpenTipTo225","OpenTipFinderTo225","OpenTipTip","TreasuryProposal","Multiplier","ClassId","InstanceId","DepositBalance","DepositBalanceOf","ClassDetails","totalDeposit","freeHolding","instanceMetadatas","attributes","InstanceDetails","ClassMetadata","InstanceMetadata","Multisig","when","Timepoint","VestingInfo","BodyId","Unit","Named","Executive","Technical","Legislative","Judicial","BodyPart","Voice","Fraction","nom","denom","AtLeastProportion","MoreThanProportion","InteriorMultiLocation","NetworkId","Any","Polkadot","Kusama","XcmOrigin","XcmpMessageFormat","XcmAssetId","Concrete","Abstract","InboundStatus","OutboundStatus","MultiAssets","v2","DoubleEncodedCall","XcmOriginKind","Outcome","Complete","Incomplete","QueryId","QueryStatus","Pending","responder","maybeNotify","timeout","response","QueueConfigData","suspendThreshold","dropThreshold","resumeThreshold","weightRestrictDecay","VersionMigrationStage","MigrateSupportedVersion","MigrateVersionNotifiers","NotifyCurrentTargets","MigrateAndNotifyOldTargets","VersionedMultiAsset","VersionedMultiAssets","VersionedMultiLocation","VersionedResponse","VersionedXcm","XcmVersion","FungibilityV0","WildFungibilityV0","AssetInstanceV0","Undefined","Index8","Index16","Index32","Index64","Index128","Array4","Array8","Array16","Array32","Blob","JunctionV0","Parent","network","AccountIndex64","AccountKey20","PalletInstance","GeneralIndex","GeneralKey","OnlyChild","Plurality","part","MultiAssetV0","All","AllFungible","AllNonFungible","AllAbstractFungible","AllAbstractNonFungible","AllConcreteFungible","AllConcreteNonFungible","AbstractFungible","AbstractNonFungible","ConcreteFungible","ConcreteNonFungible","MultiLocationV0","Here","X4","X5","X6","X7","X8","OriginKindV0","ResponseV0","Assets","XcmV0","WithdrawAsset","effects","ReserveAssetDeposit","ReceiveTeleportedAsset","QueryResponse","queryId","TransferAsset","TransferReserveAsset","Transact","originType","requireWeightAtMost","HrmpNewChannelOpenRequest","HrmpChannelAccepted","HrmpChannelClosing","initiator","RelayedFrom","XcmErrorV0","Overflow","Unimplemented","UnhandledXcmVersion","UnhandledXcmMessage","UnhandledEffect","EscalationOfPrivilege","UntrustedReserveLocation","UntrustedTeleportLocation","DestinationBufferOverflow","SendFailed","CannotReachDestination","MultiLocationFull","FailedToDecode","ExceedsMaxMessageSize","FailedToTransactAsset","WeightLimitReached","Wildcard","TooMuchWeightRequired","NotHoldingFees","WeightNotComputable","Barrier","NotWithdrawable","LocationCannotHold","TooExpensive","AssetNotFound","RecursionLimitReached","XcmOrderV0","DepositAsset","DepositReserveAsset","ExchangeAsset","give","receive","InitiateReserveWithdraw","reserve","InitiateTeleport","QueryHolding","BuyExecution","fees","debt","haltOnError","AssetInstanceV1","FungibilityV1","Fungible","NonFungible","JunctionV1","JunctionsV1","MultiAssetsV1","MultiAssetV1","fungibility","MultiAssetFilterV1","Definite","Wild","MultiLocationV1","parents","interior","OriginKindV1","ResponseV1","WildFungibilityV1","WildMultiAssetV1","AllOf","XcmV1","XcmErrorV1","DestinationUnsupported","XcmOrderV1","Noop","maxAssets","instructions","AssetInstanceV2","FungibilityV2","JunctionV2","JunctionsV2","MultiAssetsV2","MultiAssetV2","MultiAssetFilterV2","MultiLocationV2","OriginKindV2","WildFungibilityV2","ResponseV2","ExecutionResult","ResponseV2Error","ResponseV2Result","WeightLimitV2","Unlimited","Limited","InstructionV2","ReserveAssetDeposited","maxWeight","ClearOrigin","DescendOrigin","ReportError","maxResponseWeight","query_id","maxResponse_Weight","weightLimit","RefundSurplus","SetErrorHandler","SetAppendix","ClearError","ClaimAsset","ticket","Trap","WildMultiAssetV2","XcmV2","XcmErrorV2","MultiLocationNotInvertible","Transport","Unroutable","UnknownWeightRequired","UnknownClaim","InvalidLocation","XcmOrderV2","MAGIC_NUMBER","MagicNumber","EMPTY_METADATA","MetadataVersioned","magicNumber","fromPrev","asCurr","asPrev","asCallsOnly","asV9","asV10","asV11","asV12","asV13","asV14","getUniqTypes","throwError","TYPE_UNWRAP","PRIMITIVE_ALIAS","Char","Str","PATHS_ALIAS","splitNamespace","PATHS_SET","BITVEC_NS","WRAPPERS","RESERVED","PATH_RM_INDEX_1","sanitizeDocs","matchParts","suba","subb","extractNameFlat","portable","isInternal","camels","lowers","instanceType","extractName","rewriteDupes","rewrite","_lookups","_names","_params","_typeDefs","_types","_createSiDef","_getLookupId","_extract","_extractArray","_extractBitSequence","_extractCompact","_extractComposite","_extractCompositeSet","_extractFields","_extractFieldsAlias","_extractHistoric","_extractPrimitive","_extractAliasPath","_extractSequence","_extractTuple","_extractVariant","_extractVariantEnum","isContract","defineProperty","_extractVariantEnum2","_extractVariant2","_extractTuple2","_extractSequence2","_extractAliasPath2","_extractPrimitive2","_extractHistoric2","_extractFieldsAlias2","_extractFields2","_extractCompositeSet2","_extractComposite2","_extractCompact2","_extractBitSequence2","_extractArray2","_extract2","_getLookupId2","_createSiDef2","writable","lookups","_params2","nameInfo","porCount","extracted","dedup","allSame","nextDupeMatches","paramIdx","findIndex","aIndex","adjusted","isPrimitive","asPrimitive","flat","removeDupeNames","dedupCount","extractTypeInfo","hasParams","SpRuntimeUncheckedExtrinsic","FrameSystemEventRecord","extractAliases","addrParam","sigParam","siAddress","nsSignature","nsAccountId","isMultiAddress","idParam","registerTypes","found","empty","lookupNameRoot","nameField","nameOrig","namespace","aliasType","asBitSequence","asCompact","asComposite","asHistoricMetaCompat","asSequence","asTuple","bitOrder","bitStore","pathFirst","pathLast","isStruct","isTuple","isFromSi","typeStr","ids","specialVariant","bnIndex","decorateConstants","_version","constant","codec","createUnchecked","callMetadata","expectedArgs","funcName","extrinsicFn","tx","isTx","extractSubSingle","extractTypes","extractSubArray","unhandled","mapping","flattenUniq","list","getSiName","extractFieldTypes","isPlain","asPlain","asMap","getPalletNames","trimDocs","firstEmpty","toCallsOnly","validateTypes","toV11","toV12","toV13","BOXES","compatType","specs","makeTupleType","makeVariantType","modName","variantType","setTypeOverride","sectionTypes","aliased","orig","dst","convertCalls","convertConstants","convertErrors","_sectionTypes","convertEvents","createMapEntry","isLinked","convertStorage","entryType","plain","isMap","isDoubleMap","dm","asDoubleMap","nm","asNMap","toV14","metaVersion","compatTypes","registerOriginCaller","convertExtrinsic","createPallet","toLatest","_metaVersion","createStorageHasher","createStorageType","toV10","item","convertModule","_classPrivateFieldBase","hasOwnProperty","_classPrivateFieldKey","Data","BlakeTwo256","Sha256","Keccak256","ShaThree256","indicator","decodeDataU8a","decodeData","isRaw","asRaw","asBlakeTwo256","asKeccak256","asSha256","asShaThree256","isBlakeTwo256","isKeccak256","isSha256","isShaThree256","checkAddressChecksum","ss58Length","ss58Decoded","isPublicKey","decodeAddress","ignoreChecksum","isValid","endPos","defaults","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","encodeAddress","SS58_PREFIX","sshash","createDecode","coder","ipfs","validate","ipfsCompat","createEncode","encode","createIs","createValidate","chars","charCodeAt","config","base58Validate","base58Decode","base58Encode","blake2AsU8a","onlyJs","dkLen","BN_BE_256_OPTS","ethereumEncode","addressOrPublic","u8aAddress","toUpperCase","isEthereumAddress","isEthereumChecksum","_address","char","createAsHex","fn","createBitHasher","createDualHasher","wa","js","keccakAsU8a","lengths","create","outputLen","exists","checkFinished","destroyed","finished","SIGMA","BLAKE2","opts","keyLen","saltLen","persLen","pos","personalization","buffer32","buffer","compress","take","dataOffset","byteOffset","data32","Uint32Array","floor","pos32","digestInto","out32","destroy","_cloneInto","U32_MASK64","_32n","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","IV","BUF","G1","Xl","Xh","ll","G2","BLAKE2b","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","tmp","isLast","blake2b","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","keccakP","finish","writeInto","bufferOut","xofInto","xof","gen","keccak_256","keccak_512","genShake","toBytes","TextEncoder","utf8ToBytes","clone","wrapConstructor","hashConstructor","hashC","wrapConstructorWithOpts","hashCons","secp256k1Expand","publicKey","assert","condition","assertReturn","assertUnreachable","bnToBn","DEFAULT_OPTS","bnToHex","bnToU8a","valueBn","toTwos","compactAddLength","compactFromU8a","compactFromU8aLim","compactStripLength","MAX_U8","isub","MAX_U16","MAX_U32","BL_16","BL_32","compactToU8a","iadd","DEFAULT_UNIT","SI","defaultDecimals","defaultUnit","formatBalance","optDecimals","forceUnit","withSiFull","si","mid","getPrePost","units","getUnits","calcSi","findSi","getDefaults","getOptions","setDefaults","zeroPad","formatDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NUMBER_REGEX","formatDecimal","matched","match","formatNumber","SI_MID","siDefIndex","hasBigInt","hasBuffer","Buffer","hasProcess","process","hexStripPrefix","hexToBn","stripped","fromTwos","CHARS","UNHEX","hexToU8a","endLength","isAsciiStr","isAsciiU8a","isBigInt","isBn","isBoolean","isBuffer","readDoubleLE","checkCodec","checkRegistry","isFunction","isOn","fns","isOnObject","REGEX_HEX_PREFIXED","REGEX_HEX_NOPREFIX","isHex","ignoreLength","isNumber","isObject","isString","isToBigInt","isToBn","isU8a","isUndefined","lazyMethod","configurable","enumerable","lazyMethods","logTo","debug","log","loggerFormat","formatOther","apply","maxSize","fnResult","maxLength","console","Date","noop","isDebugOn","endsWith","isDebugOff","getDebugFlag","env","flag","logger","isDebug","DEBUG_MAX","DEBUG","parseEnv","objectProperty","that","objectProperties","objectSpread","sources","CC_TO_UP","CC_TO_LO","fromCharCode","formatAllCaps","w","converter","format","stringCamelCase","stringPascalCase","encoder","stringToU8a","space","u8aConcat","u8as","u8aConcatStrict","u8aEq","u8aa","u8ab","dvA","DataView","dvB","getUint32","u8aToBn","U8","U16","dv","getUint16","getUint8","u8aToHex","isPrefixed","u8aToNumber","decoder","u8aToString","u8aToU8a","Bridge","createWasm","async","getObject","idx","dropObject","takeObject","ret","addObject","getInt32","memory","Int32Array","getU8a","ptr","getString","allocU8a","__wbindgen_malloc","allocString","resultU8a","r0","r1","__wbindgen_free","resultString","createWasmFn","wasmBytes","asmFn","WebAssembly","wbg","exports","DEFAULT_CRYPTO","getRandomValues","DEFAULT_SELF","Wbg","bridge","abort","__wbindgen_is_undefined","__wbindgen_throw","__wbg_self_1b7a39e3a92c949c","__wbg_require_604837428532a733","__wbg_crypto_968f1772287e2df0","_idx","__wbg_getRandomValues_a3d34b4fee3c2869","__wbg_getRandomValues_f5e14ab7ac8e995d","_arg0","__wbg_randomFillSync_d5bd2d655fdf256a","_ptr","_len","__wbindgen_object_drop_ref","lenIn","lenOut","chr","base64Decode","bits","Uint16Array","clim","fleb","fdeb","freb","eb","fl","revfl","fd","rev","hMap","cd","mb","co","rvb","sv","flt","fdt","flrm","fdrm","bits16","unzlibSync","dat","buf","st","noSt","sl","noBuf","cbuf","bl","nbuf","final","bt","lm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","dt","lms","dms","mxa","sym","dsym","slc","inflt","zlv","NaN","xglobal","globalThis","g","Function","extractGlobal","TextDecoder","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","Infinity","rt","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","arguments","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"sourceRoot":""}